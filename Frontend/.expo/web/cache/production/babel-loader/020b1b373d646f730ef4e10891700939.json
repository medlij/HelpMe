{"ast":null,"code":"import{canUseDOM}from'fbjs/lib/ExecutionEnvironment';import{MONOSPACE_FONT_STACK,SYSTEM_FONT_STACK,STYLE_SHORT_FORM_EXPANSIONS}from\"./constants\";import normalizeValueWithProperty from\"./normalizeValueWithProperty\";var emptyObject={};var supportsCSS3TextDecoration=!canUseDOM||window.CSS!=null&&window.CSS.supports!=null&&(window.CSS.supports('text-decoration-line','none')||window.CSS.supports('-webkit-text-decoration-line','none'));var mapTransform=function mapTransform(transform){var type=Object.keys(transform)[0];var value=normalizeValueWithProperty(transform[type],type);return type+\"(\"+value+\")\";};var convertTransformMatrix=function convertTransformMatrix(transformMatrix){var matrix=transformMatrix.join(',');return\"matrix3d(\"+matrix+\")\";};var resolveTransform=function resolveTransform(resolvedStyle,style){var transform=style.transform;if(Array.isArray(style.transform)){transform=style.transform.map(mapTransform).join(' ');}else if(style.transformMatrix){transform=convertTransformMatrix(style.transformMatrix);}resolvedStyle.transform=transform;};var createReactDOMStyle=function createReactDOMStyle(style){if(!style){return emptyObject;}var resolvedStyle={};Object.keys(style).sort().forEach(function(prop){var value=normalizeValueWithProperty(style[prop],prop);if(value==null){return;}switch(prop){case'aspectRatio':case'elevation':case'overlayColor':case'resizeMode':case'tintColor':{break;}case'backgroundClip':{if(value==='text'){resolvedStyle.backgroundClip=value;resolvedStyle.WebkitBackgroundClip=value;}break;}case'flex':{if(value>0){resolvedStyle.flexGrow=value;resolvedStyle.flexShrink=1;resolvedStyle.flexBasis='0%';}else if(value===0){resolvedStyle.flexGrow=0;resolvedStyle.flexShrink=0;resolvedStyle.flexBasis='0%';}else if(value===-1){resolvedStyle.flexGrow=0;resolvedStyle.flexShrink=1;resolvedStyle.flexBasis='auto';}break;}case'font':{resolvedStyle[prop]=value.replace('System',SYSTEM_FONT_STACK);break;}case'fontFamily':{if(value.indexOf('System')>-1){var stack=value.split(/,\\s*/);stack[stack.indexOf('System')]=SYSTEM_FONT_STACK;resolvedStyle[prop]=stack.join(',');}else if(value==='monospace'){resolvedStyle[prop]=MONOSPACE_FONT_STACK;}else{resolvedStyle[prop]=value;}break;}case'fontVariant':{if(Array.isArray(value)&&value.length>0){resolvedStyle.fontVariant=value.join(' ');}break;}case'textAlignVertical':{resolvedStyle.verticalAlign=value==='center'?'middle':value;break;}case'textDecorationLine':{if(!supportsCSS3TextDecoration){resolvedStyle.textDecoration=value;}else{resolvedStyle.textDecorationLine=value;}break;}case'transform':case'transformMatrix':{resolveTransform(resolvedStyle,style);break;}case'writingDirection':{resolvedStyle.direction=value;break;}default:{var longFormProperties=STYLE_SHORT_FORM_EXPANSIONS[prop];if(longFormProperties){longFormProperties.forEach(function(longForm,i){if(typeof style[longForm]==='undefined'){resolvedStyle[longForm]=value;}});}else{resolvedStyle[prop]=Array.isArray(value)?value.join(','):value;}}}});return resolvedStyle;};export default createReactDOMStyle;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-web/src/exports/StyleSheet/createReactDOMStyle.js"],"names":["canUseDOM","MONOSPACE_FONT_STACK","SYSTEM_FONT_STACK","STYLE_SHORT_FORM_EXPANSIONS","normalizeValueWithProperty","emptyObject","supportsCSS3TextDecoration","window","CSS","supports","mapTransform","transform","type","Object","keys","value","convertTransformMatrix","transformMatrix","matrix","join","resolveTransform","resolvedStyle","style","Array","isArray","map","createReactDOMStyle","sort","forEach","prop","backgroundClip","WebkitBackgroundClip","flexGrow","flexShrink","flexBasis","replace","indexOf","stack","split","length","fontVariant","verticalAlign","textDecoration","textDecorationLine","direction","longFormProperties","longForm","i"],"mappings":"AASA,OAASA,SAAT,KAA0B,+BAA1B,CACA,OAASC,oBAAT,CAA+BC,iBAA/B,CAAkDC,2BAAlD,mBACA,MAAOC,CAAAA,0BAAP,oCAaA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAEA,GAAMC,CAAAA,0BAA0B,CAC9B,CAACN,SAAD,EACCO,MAAM,CAACC,GAAP,EAAc,IAAd,EACCD,MAAM,CAACC,GAAP,CAAWC,QAAX,EAAuB,IADxB,GAEEF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,sBAApB,CAA4C,MAA5C,GACCF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,8BAApB,CAAoD,MAApD,CAHH,CAFH,CAaA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,SAAS,CAAI,CAChC,GAAMC,CAAAA,IAAI,CAAGC,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB,CAAvB,CAAb,CACA,GAAMI,CAAAA,KAAK,CAAGX,0BAA0B,CAACO,SAAS,CAACC,IAAD,CAAV,CAAkBA,IAAlB,CAAxC,CACA,MAAUA,CAAAA,IAAV,KAAkBG,KAAlB,KACD,CAJD,CAOA,GAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAAC,eAAe,CAAI,CAChD,GAAMC,CAAAA,MAAM,CAAGD,eAAe,CAACE,IAAhB,CAAqB,GAArB,CAAf,CACA,kBAAmBD,MAAnB,KACD,CAHD,CAKA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,aAAD,CAAgBC,KAAhB,CAA0B,CACjD,GAAIX,CAAAA,SAAS,CAAGW,KAAK,CAACX,SAAtB,CACA,GAAIY,KAAK,CAACC,OAAN,CAAcF,KAAK,CAACX,SAApB,CAAJ,CAAoC,CAClCA,SAAS,CAAGW,KAAK,CAACX,SAAN,CAAgBc,GAAhB,CAAoBf,YAApB,EAAkCS,IAAlC,CAAuC,GAAvC,CAAZ,CACD,CAFD,IAEO,IAAIG,KAAK,CAACL,eAAV,CAA2B,CAChCN,SAAS,CAAGK,sBAAsB,CAACM,KAAK,CAACL,eAAP,CAAlC,CACD,CACDI,aAAa,CAACV,SAAd,CAA0BA,SAA1B,CACD,CARD,CAcA,GAAMe,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAJ,KAAK,CAAI,CACnC,GAAI,CAACA,KAAL,CAAY,CACV,MAAOjB,CAAAA,WAAP,CACD,CAED,GAAMgB,CAAAA,aAAa,CAAG,EAAtB,CAEAR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,EACGK,IADH,GAEGC,OAFH,CAEW,SAAAC,IAAI,CAAI,CACf,GAAMd,CAAAA,KAAK,CAAGX,0BAA0B,CAACkB,KAAK,CAACO,IAAD,CAAN,CAAcA,IAAd,CAAxC,CAGA,GAAId,KAAK,EAAI,IAAb,CAAmB,CACjB,OACD,CAED,OAAQc,IAAR,EAEE,IAAK,aAAL,CACA,IAAK,WAAL,CACA,IAAK,cAAL,CACA,IAAK,YAAL,CACA,IAAK,WAAL,CAAkB,CAChB,MACD,CAID,IAAK,gBAAL,CAAuB,CACrB,GAAId,KAAK,GAAK,MAAd,CAAsB,CACpBM,aAAa,CAACS,cAAd,CAA+Bf,KAA/B,CACAM,aAAa,CAACU,oBAAd,CAAqChB,KAArC,CACD,CACD,MACD,CAID,IAAK,MAAL,CAAa,CACX,GAAIA,KAAK,CAAG,CAAZ,CAAe,CACbM,aAAa,CAACW,QAAd,CAAyBjB,KAAzB,CACAM,aAAa,CAACY,UAAd,CAA2B,CAA3B,CACAZ,aAAa,CAACa,SAAd,CAA0B,IAA1B,CACD,CAJD,IAIO,IAAInB,KAAK,GAAK,CAAd,CAAiB,CACtBM,aAAa,CAACW,QAAd,CAAyB,CAAzB,CACAX,aAAa,CAACY,UAAd,CAA2B,CAA3B,CACAZ,aAAa,CAACa,SAAd,CAA0B,IAA1B,CACD,CAJM,IAIA,IAAInB,KAAK,GAAK,CAAC,CAAf,CAAkB,CACvBM,aAAa,CAACW,QAAd,CAAyB,CAAzB,CACAX,aAAa,CAACY,UAAd,CAA2B,CAA3B,CACAZ,aAAa,CAACa,SAAd,CAA0B,MAA1B,CACD,CACD,MACD,CAED,IAAK,MAAL,CAAa,CACXb,aAAa,CAACQ,IAAD,CAAb,CAAsBd,KAAK,CAACoB,OAAN,CAAc,QAAd,CAAwBjC,iBAAxB,CAAtB,CACA,MACD,CAED,IAAK,YAAL,CAAmB,CACjB,GAAIa,KAAK,CAACqB,OAAN,CAAc,QAAd,EAA0B,CAAC,CAA/B,CAAkC,CAChC,GAAMC,CAAAA,KAAK,CAAGtB,KAAK,CAACuB,KAAN,CAAY,MAAZ,CAAd,CACAD,KAAK,CAACA,KAAK,CAACD,OAAN,CAAc,QAAd,CAAD,CAAL,CAAiClC,iBAAjC,CACAmB,aAAa,CAACQ,IAAD,CAAb,CAAsBQ,KAAK,CAAClB,IAAN,CAAW,GAAX,CAAtB,CACD,CAJD,IAIO,IAAIJ,KAAK,GAAK,WAAd,CAA2B,CAChCM,aAAa,CAACQ,IAAD,CAAb,CAAsB5B,oBAAtB,CACD,CAFM,IAEA,CACLoB,aAAa,CAACQ,IAAD,CAAb,CAAsBd,KAAtB,CACD,CACD,MACD,CAED,IAAK,aAAL,CAAoB,CAClB,GAAIQ,KAAK,CAACC,OAAN,CAAcT,KAAd,GAAwBA,KAAK,CAACwB,MAAN,CAAe,CAA3C,CAA8C,CAC5ClB,aAAa,CAACmB,WAAd,CAA4BzB,KAAK,CAACI,IAAN,CAAW,GAAX,CAA5B,CACD,CACD,MACD,CAED,IAAK,mBAAL,CAA0B,CACxBE,aAAa,CAACoB,aAAd,CAA8B1B,KAAK,GAAK,QAAV,CAAqB,QAArB,CAAgCA,KAA9D,CACA,MACD,CAED,IAAK,oBAAL,CAA2B,CAGzB,GAAI,CAACT,0BAAL,CAAiC,CAC/Be,aAAa,CAACqB,cAAd,CAA+B3B,KAA/B,CACD,CAFD,IAEO,CACLM,aAAa,CAACsB,kBAAd,CAAmC5B,KAAnC,CACD,CACD,MACD,CAED,IAAK,WAAL,CACA,IAAK,iBAAL,CAAwB,CACtBK,gBAAgB,CAACC,aAAD,CAAgBC,KAAhB,CAAhB,CACA,MACD,CAED,IAAK,kBAAL,CAAyB,CACvBD,aAAa,CAACuB,SAAd,CAA0B7B,KAA1B,CACA,MACD,CAED,QAAS,CACP,GAAM8B,CAAAA,kBAAkB,CAAG1C,2BAA2B,CAAC0B,IAAD,CAAtD,CACA,GAAIgB,kBAAJ,CAAwB,CACtBA,kBAAkB,CAACjB,OAAnB,CAA2B,SAACkB,QAAD,CAAWC,CAAX,CAAiB,CAG1C,GAAI,MAAOzB,CAAAA,KAAK,CAACwB,QAAD,CAAZ,GAA2B,WAA/B,CAA4C,CAC1CzB,aAAa,CAACyB,QAAD,CAAb,CAA0B/B,KAA1B,CACD,CACF,CAND,EAOD,CARD,IAQO,CACLM,aAAa,CAACQ,IAAD,CAAb,CAAsBN,KAAK,CAACC,OAAN,CAAcT,KAAd,EAAuBA,KAAK,CAACI,IAAN,CAAW,GAAX,CAAvB,CAAyCJ,KAA/D,CACD,CACF,CAxGH,CA0GD,CApHH,EAsHA,MAAOM,CAAAA,aAAP,CACD,CA9HD,CAgIA,cAAeK,CAAAA,mBAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { MONOSPACE_FONT_STACK, SYSTEM_FONT_STACK, STYLE_SHORT_FORM_EXPANSIONS } from './constants';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\n\n/**\n * The browser implements the CSS cascade, where the order of properties is a\n * factor in determining which styles to paint. React Native is different. It\n * gives giving precedence to the more specific style property. For example,\n * the value of `paddingTop` takes precedence over that of `padding`.\n *\n * This module creates mutally exclusive style declarations by expanding all of\n * React Native's supported shortform properties (e.g. `padding`) to their\n * longfrom equivalents.\n */\n\nconst emptyObject = {};\n\nconst supportsCSS3TextDecoration =\n  !canUseDOM ||\n  (window.CSS != null &&\n    window.CSS.supports != null &&\n    (window.CSS.supports('text-decoration-line', 'none') ||\n      window.CSS.supports('-webkit-text-decoration-line', 'none')));\n\n/**\n * Transform\n */\n\n// { scale: 2 } => 'scale(2)'\n// { translateX: 20 } => 'translateX(20px)'\nconst mapTransform = transform => {\n  const type = Object.keys(transform)[0];\n  const value = normalizeValueWithProperty(transform[type], type);\n  return `${type}(${value})`;\n};\n\n// [1,2,3,4,5,6] => 'matrix3d(1,2,3,4,5,6)'\nconst convertTransformMatrix = transformMatrix => {\n  const matrix = transformMatrix.join(',');\n  return `matrix3d(${matrix})`;\n};\n\nconst resolveTransform = (resolvedStyle, style) => {\n  let transform = style.transform;\n  if (Array.isArray(style.transform)) {\n    transform = style.transform.map(mapTransform).join(' ');\n  } else if (style.transformMatrix) {\n    transform = convertTransformMatrix(style.transformMatrix);\n  }\n  resolvedStyle.transform = transform;\n};\n\n/**\n * Reducer\n */\n\nconst createReactDOMStyle = style => {\n  if (!style) {\n    return emptyObject;\n  }\n\n  const resolvedStyle = {};\n\n  Object.keys(style)\n    .sort()\n    .forEach(prop => {\n      const value = normalizeValueWithProperty(style[prop], prop);\n\n      // Ignore everything else with a null value\n      if (value == null) {\n        return;\n      }\n\n      switch (prop) {\n        // Ignore some React Native styles\n        case 'aspectRatio':\n        case 'elevation':\n        case 'overlayColor':\n        case 'resizeMode':\n        case 'tintColor': {\n          break;\n        }\n\n        // TODO: remove once this issue is fixed\n        // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n        case 'backgroundClip': {\n          if (value === 'text') {\n            resolvedStyle.backgroundClip = value;\n            resolvedStyle.WebkitBackgroundClip = value;\n          }\n          break;\n        }\n\n        // The 'flex' property value in React Native must be a positive integer,\n        // 0, or -1.\n        case 'flex': {\n          if (value > 0) {\n            resolvedStyle.flexGrow = value;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === 0) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 0;\n            resolvedStyle.flexBasis = '0%';\n          } else if (value === -1) {\n            resolvedStyle.flexGrow = 0;\n            resolvedStyle.flexShrink = 1;\n            resolvedStyle.flexBasis = 'auto';\n          }\n          break;\n        }\n\n        case 'font': {\n          resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n          break;\n        }\n\n        case 'fontFamily': {\n          if (value.indexOf('System') > -1) {\n            const stack = value.split(/,\\s*/);\n            stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n            resolvedStyle[prop] = stack.join(',');\n          } else if (value === 'monospace') {\n            resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n          } else {\n            resolvedStyle[prop] = value;\n          }\n          break;\n        }\n\n        case 'fontVariant': {\n          if (Array.isArray(value) && value.length > 0) {\n            resolvedStyle.fontVariant = value.join(' ');\n          }\n          break;\n        }\n\n        case 'textAlignVertical': {\n          resolvedStyle.verticalAlign = value === 'center' ? 'middle' : value;\n          break;\n        }\n\n        case 'textDecorationLine': {\n          // use 'text-decoration' for browsers that only support CSS2\n          // text-decoration (e.g., IE, Edge)\n          if (!supportsCSS3TextDecoration) {\n            resolvedStyle.textDecoration = value;\n          } else {\n            resolvedStyle.textDecorationLine = value;\n          }\n          break;\n        }\n\n        case 'transform':\n        case 'transformMatrix': {\n          resolveTransform(resolvedStyle, style);\n          break;\n        }\n\n        case 'writingDirection': {\n          resolvedStyle.direction = value;\n          break;\n        }\n\n        default: {\n          const longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n          if (longFormProperties) {\n            longFormProperties.forEach((longForm, i) => {\n              // The value of any longform property in the original styles takes\n              // precedence over the shortform's value.\n              if (typeof style[longForm] === 'undefined') {\n                resolvedStyle[longForm] = value;\n              }\n            });\n          } else {\n            resolvedStyle[prop] = Array.isArray(value) ? value.join(',') : value;\n          }\n        }\n      }\n    });\n\n  return resolvedStyle;\n};\n\nexport default createReactDOMStyle;\n"]},"metadata":{},"sourceType":"module"}