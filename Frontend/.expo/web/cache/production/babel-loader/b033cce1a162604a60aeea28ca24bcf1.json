{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import createReactDOMStyle from\"./createReactDOMStyle\";import hash from\"../../vendor/hash\";import hyphenateStyleName from'hyphenate-style-name';import normalizeValueWithProperty from\"./normalizeValueWithProperty\";import prefixStyles,{prefixInlineStyles}from\"../../modules/prefixStyles\";var cache={get:function get(property,value){if(cache[property]!=null&&cache[property].hasOwnProperty(value)&&cache[property][value]!=null){return cache[property][value];}},set:function set(property,value,object){if(cache[property]==null){cache[property]={};}return cache[property][value]=object;}};export function atomic(style){return Object.keys(style).sort().reduce(function(acc,property){var value=style[property];if(value!=null){var valueString=stringifyValueWithProperty(value,property);var cachedResult=cache.get(property,valueString);if(cachedResult!=null){var identifier=cachedResult.identifier;acc[identifier]=cachedResult;}else{var _identifier=createIdentifier('r',property,value);var rules=createAtomicRules(_identifier,property,value);var _cachedResult=cache.set(property,valueString,{property:property,value:stringifyValueWithProperty(value,property),identifier:_identifier,rules:rules});acc[_identifier]=_cachedResult;}}return acc;},{});}export function classic(style,name){var identifier=createIdentifier('css',name,style);var animationKeyframes=style.animationKeyframes,rest=_objectWithoutProperties(style,[\"animationKeyframes\"]);var rules=[];var selector=\".\"+identifier;var animationName;if(animationKeyframes!=null){var _processKeyframesValu=processKeyframesValue(animationKeyframes),animationNames=_processKeyframesValu.animationNames,keyframesRules=_processKeyframesValu.rules;animationName=animationNames.join(',');rules.push.apply(rules,_toConsumableArray(keyframesRules));}var block=createDeclarationBlock(_objectSpread(_objectSpread({},rest),{},{animationName:animationName}));rules.push(\"\"+selector+block);return _defineProperty({},identifier,{identifier:identifier,rules:rules});}export function inline(style){return prefixInlineStyles(createReactDOMStyle(style));}export function stringifyValueWithProperty(value,property){var normalizedValue=normalizeValueWithProperty(value,property);return typeof normalizedValue!=='string'?JSON.stringify(normalizedValue||''):normalizedValue;}function createAtomicRules(identifier,property,value){var rules=[];var selector=\".\"+identifier;switch(property){case'animationKeyframes':{var _processKeyframesValu2=processKeyframesValue(value),animationNames=_processKeyframesValu2.animationNames,keyframesRules=_processKeyframesValu2.rules;var block=createDeclarationBlock({animationName:animationNames.join(',')});rules.push.apply(rules,[\"\"+selector+block].concat(_toConsumableArray(keyframesRules)));break;}case'placeholderTextColor':{var _block=createDeclarationBlock({color:value,opacity:1});rules.push(selector+\"::-webkit-input-placeholder\"+_block,selector+\"::-moz-placeholder\"+_block,selector+\":-ms-input-placeholder\"+_block,selector+\"::placeholder\"+_block);break;}case'pointerEvents':{var finalValue=value;if(value==='auto'||value==='box-only'){finalValue='auto!important';if(value==='box-only'){var _block3=createDeclarationBlock(_defineProperty({},property,'none'));rules.push(selector+\">*\"+_block3);}}else if(value==='none'||value==='box-none'){finalValue='none!important';if(value==='box-none'){var _block4=createDeclarationBlock(_defineProperty({},property,'auto'));rules.push(selector+\">*\"+_block4);}}var _block2=createDeclarationBlock(_defineProperty({},property,finalValue));rules.push(\"\"+selector+_block2);break;}case'scrollbarWidth':{if(value==='none'){rules.push(selector+\"::-webkit-scrollbar{display:none}\");}var _block5=createDeclarationBlock(_defineProperty({},property,value));rules.push(\"\"+selector+_block5);break;}default:{var _block6=createDeclarationBlock(_defineProperty({},property,value));rules.push(\"\"+selector+_block6);break;}}return rules;}function createDeclarationBlock(style){var domStyle=prefixStyles(createReactDOMStyle(style));var declarationsString=Object.keys(domStyle).map(function(property){var value=domStyle[property];var prop=hyphenateStyleName(property);if(Array.isArray(value)){return value.map(function(v){return prop+\":\"+v;}).join(';');}else{return prop+\":\"+value;}}).sort().join(';');return\"{\"+declarationsString+\";}\";}function createIdentifier(prefix,name,value){var hashedString=hash(name+stringifyValueWithProperty(value,name));return process.env.NODE_ENV!=='production'?prefix+\"-\"+name+\"-\"+hashedString:prefix+\"-\"+hashedString;}function createKeyframes(keyframes){var prefixes=['-webkit-',''];var identifier=createIdentifier('r','animation',keyframes);var steps='{'+Object.keys(keyframes).map(function(stepName){var rule=keyframes[stepName];var block=createDeclarationBlock(rule);return\"\"+stepName+block;}).join('')+'}';var rules=prefixes.map(function(prefix){return\"@\"+prefix+\"keyframes \"+identifier+steps;});return{identifier:identifier,rules:rules};}function processKeyframesValue(keyframesValue){if(typeof keyframesValue==='number'){throw new Error(\"Invalid CSS keyframes type: \"+typeof keyframesValue);}var animationNames=[];var rules=[];var value=Array.isArray(keyframesValue)?keyframesValue:[keyframesValue];value.forEach(function(keyframes){if(typeof keyframes==='string'){animationNames.push(keyframes);}else{var _createKeyframes=createKeyframes(keyframes),identifier=_createKeyframes.identifier,keyframesRules=_createKeyframes.rules;animationNames.push(identifier);rules.push.apply(rules,_toConsumableArray(keyframesRules));}});return{animationNames:animationNames,rules:rules};}","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-web/src/exports/StyleSheet/compile.js"],"names":["createReactDOMStyle","hash","hyphenateStyleName","normalizeValueWithProperty","prefixStyles","prefixInlineStyles","cache","get","property","value","hasOwnProperty","set","object","atomic","style","Object","keys","sort","reduce","acc","valueString","stringifyValueWithProperty","cachedResult","identifier","createIdentifier","rules","createAtomicRules","classic","name","animationKeyframes","rest","selector","animationName","processKeyframesValue","animationNames","keyframesRules","join","push","block","createDeclarationBlock","inline","normalizedValue","JSON","stringify","color","opacity","finalValue","domStyle","declarationsString","map","prop","Array","isArray","v","prefix","hashedString","process","env","NODE_ENV","createKeyframes","keyframes","prefixes","steps","stepName","rule","keyframesValue","Error","forEach"],"mappings":"+/BASA,MAAOA,CAAAA,mBAAP,6BACA,MAAOC,CAAAA,IAAP,yBACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,0BAAP,oCACA,MAAOC,CAAAA,YAAP,EAAuBC,kBAAvB,kCAcA,GAAMC,CAAAA,KAAK,CAAG,CACZC,GADY,cACRC,QADQ,CACEC,KADF,CACS,CACnB,GACEH,KAAK,CAACE,QAAD,CAAL,EAAmB,IAAnB,EACAF,KAAK,CAACE,QAAD,CAAL,CAAgBE,cAAhB,CAA+BD,KAA/B,CADA,EAEAH,KAAK,CAACE,QAAD,CAAL,CAAgBC,KAAhB,GAA0B,IAH5B,CAIE,CACA,MAAOH,CAAAA,KAAK,CAACE,QAAD,CAAL,CAAgBC,KAAhB,CAAP,CACD,CACF,CATW,CAUZE,GAVY,cAURH,QAVQ,CAUEC,KAVF,CAUSG,MAVT,CAUiB,CAC3B,GAAIN,KAAK,CAACE,QAAD,CAAL,EAAmB,IAAvB,CAA6B,CAC3BF,KAAK,CAACE,QAAD,CAAL,CAAkB,EAAlB,CACD,CACD,MAAQF,CAAAA,KAAK,CAACE,QAAD,CAAL,CAAgBC,KAAhB,EAAyBG,MAAjC,CACD,CAfW,CAAd,CAqBA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAA8C,CACnD,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EACJG,IADI,GAEJC,MAFI,CAEG,SAACC,GAAD,CAAMX,QAAN,CAAmB,CACzB,GAAMC,CAAAA,KAAK,CAAGK,KAAK,CAACN,QAAD,CAAnB,CACA,GAAIC,KAAK,EAAI,IAAb,CAAmB,CACjB,GAAMW,CAAAA,WAAW,CAAGC,0BAA0B,CAACZ,KAAD,CAAQD,QAAR,CAA9C,CACA,GAAMc,CAAAA,YAAY,CAAGhB,KAAK,CAACC,GAAN,CAAUC,QAAV,CAAoBY,WAApB,CAArB,CACA,GAAIE,YAAY,EAAI,IAApB,CAA0B,CACxB,GAAQC,CAAAA,UAAR,CAAuBD,YAAvB,CAAQC,UAAR,CACAJ,GAAG,CAACI,UAAD,CAAH,CAAkBD,YAAlB,CACD,CAHD,IAGO,CACL,GAAMC,CAAAA,WAAU,CAAGC,gBAAgB,CAAC,GAAD,CAAMhB,QAAN,CAAgBC,KAAhB,CAAnC,CACA,GAAMgB,CAAAA,KAAK,CAAGC,iBAAiB,CAACH,WAAD,CAAaf,QAAb,CAAuBC,KAAvB,CAA/B,CACA,GAAMa,CAAAA,aAAY,CAAGhB,KAAK,CAACK,GAAN,CAAUH,QAAV,CAAoBY,WAApB,CAAiC,CACpDZ,QAAQ,CAARA,QADoD,CAEpDC,KAAK,CAAEY,0BAA0B,CAACZ,KAAD,CAAQD,QAAR,CAFmB,CAGpDe,UAAU,CAAVA,WAHoD,CAIpDE,KAAK,CAALA,KAJoD,CAAjC,CAArB,CAMAN,GAAG,CAACI,WAAD,CAAH,CAAkBD,aAAlB,CACD,CACF,CACD,MAAOH,CAAAA,GAAP,CACD,CAvBI,CAuBF,EAvBE,CAAP,CAwBD,CAMD,MAAO,SAASQ,CAAAA,OAAT,CAAiBb,KAAjB,CAA+Bc,IAA/B,CAA6D,CAClE,GAAML,CAAAA,UAAU,CAAGC,gBAAgB,CAAC,KAAD,CAAQI,IAAR,CAAcd,KAAd,CAAnC,CACA,GAAQe,CAAAA,kBAAR,CAAwCf,KAAxC,CAAQe,kBAAR,CAA+BC,IAA/B,0BAAwChB,KAAxC,yBAEA,GAAMW,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMM,CAAAA,QAAQ,KAAOR,UAArB,CACA,GAAIS,CAAAA,aAAJ,CACA,GAAIH,kBAAkB,EAAI,IAA1B,CAAgC,CAC9B,0BAAkDI,qBAAqB,CAACJ,kBAAD,CAAvE,CAAQK,cAAR,uBAAQA,cAAR,CAA+BC,cAA/B,uBAAwBV,KAAxB,CACAO,aAAa,CAAGE,cAAc,CAACE,IAAf,CAAoB,GAApB,CAAhB,CACAX,KAAK,CAACY,IAAN,OAAAZ,KAAK,oBAASU,cAAT,EAAL,CACD,CACD,GAAMG,CAAAA,KAAK,CAAGC,sBAAsB,gCAAMT,IAAN,MAAYE,aAAa,CAAbA,aAAZ,GAApC,CACAP,KAAK,CAACY,IAAN,IAAcN,QAAd,CAAyBO,KAAzB,EAEA,0BAAUf,UAAV,CAAuB,CAAEA,UAAU,CAAVA,UAAF,CAAcE,KAAK,CAALA,KAAd,CAAvB,EACD,CAMD,MAAO,SAASe,CAAAA,MAAT,CAAgB1B,KAAhB,CAA8B,CACnC,MAAOT,CAAAA,kBAAkB,CAACL,mBAAmB,CAACc,KAAD,CAApB,CAAzB,CACD,CAMD,MAAO,SAASO,CAAAA,0BAAT,CAAoCZ,KAApC,CAAkDD,QAAlD,CAAqE,CAE1E,GAAMiC,CAAAA,eAAe,CAAGtC,0BAA0B,CAACM,KAAD,CAAQD,QAAR,CAAlD,CACA,MAAO,OAAOiC,CAAAA,eAAP,GAA2B,QAA3B,CACHC,IAAI,CAACC,SAAL,CAAeF,eAAe,EAAI,EAAlC,CADG,CAEHA,eAFJ,CAGD,CAMD,QAASf,CAAAA,iBAAT,CAA2BH,UAA3B,CAA+Cf,QAA/C,CAAyDC,KAAzD,CAAuE,CACrE,GAAMgB,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMM,CAAAA,QAAQ,KAAOR,UAArB,CAIA,OAAQf,QAAR,EACE,IAAK,oBAAL,CAA2B,CACzB,2BAAkDyB,qBAAqB,CAACxB,KAAD,CAAvE,CAAQyB,cAAR,wBAAQA,cAAR,CAA+BC,cAA/B,wBAAwBV,KAAxB,CACA,GAAMa,CAAAA,KAAK,CAAGC,sBAAsB,CAAC,CAAEP,aAAa,CAAEE,cAAc,CAACE,IAAf,CAAoB,GAApB,CAAjB,CAAD,CAApC,CACAX,KAAK,CAACY,IAAN,OAAAZ,KAAK,KAASM,QAAT,CAAoBO,KAApB,4BAAgCH,cAAhC,GAAL,CACA,MACD,CAGD,IAAK,sBAAL,CAA6B,CAC3B,GAAMG,CAAAA,MAAK,CAAGC,sBAAsB,CAAC,CAAEK,KAAK,CAAEnC,KAAT,CAAgBoC,OAAO,CAAE,CAAzB,CAAD,CAApC,CACApB,KAAK,CAACY,IAAN,CACKN,QADL,+BAC2CO,MAD3C,CAEKP,QAFL,sBAEkCO,MAFlC,CAGKP,QAHL,0BAGsCO,MAHtC,CAIKP,QAJL,iBAI6BO,MAJ7B,EAMA,MACD,CAID,IAAK,eAAL,CAAsB,CACpB,GAAIQ,CAAAA,UAAU,CAAGrC,KAAjB,CACA,GAAIA,KAAK,GAAK,MAAV,EAAoBA,KAAK,GAAK,UAAlC,CAA8C,CAC5CqC,UAAU,CAAG,gBAAb,CACA,GAAIrC,KAAK,GAAK,UAAd,CAA0B,CACxB,GAAM6B,CAAAA,OAAK,CAAGC,sBAAsB,oBAAI/B,QAAJ,CAAe,MAAf,EAApC,CACAiB,KAAK,CAACY,IAAN,CAAcN,QAAd,MAA2BO,OAA3B,EACD,CACF,CAND,IAMO,IAAI7B,KAAK,GAAK,MAAV,EAAoBA,KAAK,GAAK,UAAlC,CAA8C,CACnDqC,UAAU,CAAG,gBAAb,CACA,GAAIrC,KAAK,GAAK,UAAd,CAA0B,CACxB,GAAM6B,CAAAA,OAAK,CAAGC,sBAAsB,oBAAI/B,QAAJ,CAAe,MAAf,EAApC,CACAiB,KAAK,CAACY,IAAN,CAAcN,QAAd,MAA2BO,OAA3B,EACD,CACF,CACD,GAAMA,CAAAA,OAAK,CAAGC,sBAAsB,oBAAI/B,QAAJ,CAAesC,UAAf,EAApC,CACArB,KAAK,CAACY,IAAN,IAAcN,QAAd,CAAyBO,OAAzB,EACA,MACD,CAID,IAAK,gBAAL,CAAuB,CACrB,GAAI7B,KAAK,GAAK,MAAd,CAAsB,CACpBgB,KAAK,CAACY,IAAN,CAAcN,QAAd,sCACD,CACD,GAAMO,CAAAA,OAAK,CAAGC,sBAAsB,oBAAI/B,QAAJ,CAAeC,KAAf,EAApC,CACAgB,KAAK,CAACY,IAAN,IAAcN,QAAd,CAAyBO,OAAzB,EACA,MACD,CAED,QAAS,CACP,GAAMA,CAAAA,OAAK,CAAGC,sBAAsB,oBAAI/B,QAAJ,CAAeC,KAAf,EAApC,CACAgB,KAAK,CAACY,IAAN,IAAcN,QAAd,CAAyBO,OAAzB,EACA,MACD,CAzDH,CA4DA,MAAOb,CAAAA,KAAP,CACD,CAKD,QAASc,CAAAA,sBAAT,CAAgCzB,KAAhC,CAA8C,CAC5C,GAAMiC,CAAAA,QAAQ,CAAG3C,YAAY,CAACJ,mBAAmB,CAACc,KAAD,CAApB,CAA7B,CACA,GAAMkC,CAAAA,kBAAkB,CAAGjC,MAAM,CAACC,IAAP,CAAY+B,QAAZ,EACxBE,GADwB,CACpB,SAAAzC,QAAQ,CAAI,CACf,GAAMC,CAAAA,KAAK,CAAGsC,QAAQ,CAACvC,QAAD,CAAtB,CACA,GAAM0C,CAAAA,IAAI,CAAGhD,kBAAkB,CAACM,QAAD,CAA/B,CAKA,GAAI2C,KAAK,CAACC,OAAN,CAAc3C,KAAd,CAAJ,CAA0B,CACxB,MAAOA,CAAAA,KAAK,CAACwC,GAAN,CAAU,SAAAI,CAAC,QAAOH,CAAAA,IAAP,KAAeG,CAAf,EAAX,EAA+BjB,IAA/B,CAAoC,GAApC,CAAP,CACD,CAFD,IAEO,CACL,MAAUc,CAAAA,IAAV,KAAkBzC,KAAlB,CACD,CACF,CAbwB,EAgBxBQ,IAhBwB,GAiBxBmB,IAjBwB,CAiBnB,GAjBmB,CAA3B,CAmBA,UAAWY,kBAAX,MACD,CAKD,QAASxB,CAAAA,gBAAT,CAA0B8B,MAA1B,CAAkC1B,IAAlC,CAAwCnB,KAAxC,CAA+C,CAC7C,GAAM8C,CAAAA,YAAY,CAAGtD,IAAI,CAAC2B,IAAI,CAAGP,0BAA0B,CAACZ,KAAD,CAAQmB,IAAR,CAAlC,CAAzB,CACA,MAAO4B,CAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAAzB,CACAJ,MADA,KACU1B,IADV,KACkB2B,YADlB,CAEAD,MAFA,KAEUC,YAFjB,CAGD,CAKD,QAASI,CAAAA,eAAT,CAAyBC,SAAzB,CAAoC,CAClC,GAAMC,CAAAA,QAAQ,CAAG,CAAC,UAAD,CAAa,EAAb,CAAjB,CACA,GAAMtC,CAAAA,UAAU,CAAGC,gBAAgB,CAAC,GAAD,CAAM,WAAN,CAAmBoC,SAAnB,CAAnC,CAEA,GAAME,CAAAA,KAAK,CACT,IACA/C,MAAM,CAACC,IAAP,CAAY4C,SAAZ,EACGX,GADH,CACO,SAAAc,QAAQ,CAAI,CACf,GAAMC,CAAAA,IAAI,CAAGJ,SAAS,CAACG,QAAD,CAAtB,CACA,GAAMzB,CAAAA,KAAK,CAAGC,sBAAsB,CAACyB,IAAD,CAApC,CACA,SAAUD,QAAV,CAAqBzB,KAArB,CACD,CALH,EAMGF,IANH,CAMQ,EANR,CADA,CAQA,GATF,CAWA,GAAMX,CAAAA,KAAK,CAAGoC,QAAQ,CAACZ,GAAT,CAAa,SAAAK,MAAM,CAAI,CACnC,UAAWA,MAAX,cAA8B/B,UAA9B,CAA2CuC,KAA3C,CACD,CAFa,CAAd,CAGA,MAAO,CAAEvC,UAAU,CAAVA,UAAF,CAAcE,KAAK,CAALA,KAAd,CAAP,CACD,CAKD,QAASQ,CAAAA,qBAAT,CAA+BgC,cAA/B,CAA+C,CAC7C,GAAI,MAAOA,CAAAA,cAAP,GAA0B,QAA9B,CAAwC,CACtC,KAAM,IAAIC,CAAAA,KAAJ,gCAAyC,MAAOD,CAAAA,cAAhD,CAAN,CACD,CAED,GAAM/B,CAAAA,cAAc,CAAG,EAAvB,CACA,GAAMT,CAAAA,KAAK,CAAG,EAAd,CACA,GAAMhB,CAAAA,KAAK,CAAG0C,KAAK,CAACC,OAAN,CAAca,cAAd,EAAgCA,cAAhC,CAAiD,CAACA,cAAD,CAA/D,CAEAxD,KAAK,CAAC0D,OAAN,CAAc,SAAAP,SAAS,CAAI,CACzB,GAAI,MAAOA,CAAAA,SAAP,GAAqB,QAAzB,CAAmC,CAEjC1B,cAAc,CAACG,IAAf,CAAoBuB,SAApB,EACD,CAHD,IAGO,CAEL,qBAA8CD,eAAe,CAACC,SAAD,CAA7D,CAAQrC,UAAR,kBAAQA,UAAR,CAA2BY,cAA3B,kBAAoBV,KAApB,CACAS,cAAc,CAACG,IAAf,CAAoBd,UAApB,EACAE,KAAK,CAACY,IAAN,OAAAZ,KAAK,oBAASU,cAAT,EAAL,CACD,CACF,CAVD,EAYA,MAAO,CAAED,cAAc,CAAdA,cAAF,CAAkBT,KAAK,CAALA,KAAlB,CAAP,CACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n */\n\nimport createReactDOMStyle from './createReactDOMStyle';\nimport hash from '../../vendor/hash';\nimport hyphenateStyleName from 'hyphenate-style-name';\nimport normalizeValueWithProperty from './normalizeValueWithProperty';\nimport prefixStyles, { prefixInlineStyles } from '../../modules/prefixStyles';\n\ntype Value = Object | Array<any> | string | number;\ntype Style = { [key: string]: Value };\ntype Rule = string;\ntype Rules = Array<Rule>;\ntype RulesData = {|\n  property?: string,\n  value?: string,\n  identifier: string,\n  rules: Rules\n|};\ntype CompilerOutput = { [key: string]: RulesData };\n\nconst cache = {\n  get(property, value) {\n    if (\n      cache[property] != null &&\n      cache[property].hasOwnProperty(value) &&\n      cache[property][value] != null\n    ) {\n      return cache[property][value];\n    }\n  },\n  set(property, value, object) {\n    if (cache[property] == null) {\n      cache[property] = {};\n    }\n    return (cache[property][value] = object);\n  }\n};\n\n/**\n * Compile style to atomic CSS rules.\n */\nexport function atomic(style: Style): CompilerOutput {\n  return Object.keys(style)\n    .sort()\n    .reduce((acc, property) => {\n      const value = style[property];\n      if (value != null) {\n        const valueString = stringifyValueWithProperty(value, property);\n        const cachedResult = cache.get(property, valueString);\n        if (cachedResult != null) {\n          const { identifier } = cachedResult;\n          acc[identifier] = cachedResult;\n        } else {\n          const identifier = createIdentifier('r', property, value);\n          const rules = createAtomicRules(identifier, property, value);\n          const cachedResult = cache.set(property, valueString, {\n            property,\n            value: stringifyValueWithProperty(value, property),\n            identifier,\n            rules\n          });\n          acc[identifier] = cachedResult;\n        }\n      }\n      return acc;\n    }, {});\n}\n\n/**\n * Compile simple style object to classic CSS rules.\n * No support for 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function classic(style: Style, name: string): CompilerOutput {\n  const identifier = createIdentifier('css', name, style);\n  const { animationKeyframes, ...rest } = style;\n\n  const rules = [];\n  const selector = `.${identifier}`;\n  let animationName;\n  if (animationKeyframes != null) {\n    const { animationNames, rules: keyframesRules } = processKeyframesValue(animationKeyframes);\n    animationName = animationNames.join(',');\n    rules.push(...keyframesRules);\n  }\n  const block = createDeclarationBlock({ ...rest, animationName });\n  rules.push(`${selector}${block}`);\n\n  return { [identifier]: { identifier, rules } };\n}\n\n/**\n * Compile simple style object to inline DOM styles.\n * No support for 'animationKeyframes', 'placeholderTextColor', 'scrollbarWidth', or 'pointerEvents'.\n */\nexport function inline(style: Style) {\n  return prefixInlineStyles(createReactDOMStyle(style));\n}\n\n/**\n * Create a value string that normalizes different input values with a common\n * output.\n */\nexport function stringifyValueWithProperty(value: Value, property: ?string) {\n  // e.g., 0 => '0px', 'black' => 'rgba(0,0,0,1)'\n  const normalizedValue = normalizeValueWithProperty(value, property);\n  return typeof normalizedValue !== 'string'\n    ? JSON.stringify(normalizedValue || '')\n    : normalizedValue;\n}\n\n/**\n * Create the Atomic CSS rules needed for a given StyleSheet rule.\n * Translates StyleSheet declarations to CSS.\n */\nfunction createAtomicRules(identifier: string, property, value): Rules {\n  const rules = [];\n  const selector = `.${identifier}`;\n\n  // Handle non-standard properties and object values that require multiple\n  // CSS rules to be created.\n  switch (property) {\n    case 'animationKeyframes': {\n      const { animationNames, rules: keyframesRules } = processKeyframesValue(value);\n      const block = createDeclarationBlock({ animationName: animationNames.join(',') });\n      rules.push(`${selector}${block}`, ...keyframesRules);\n      break;\n    }\n\n    // Equivalent to using '::placeholder'\n    case 'placeholderTextColor': {\n      const block = createDeclarationBlock({ color: value, opacity: 1 });\n      rules.push(\n        `${selector}::-webkit-input-placeholder${block}`,\n        `${selector}::-moz-placeholder${block}`,\n        `${selector}:-ms-input-placeholder${block}`,\n        `${selector}::placeholder${block}`\n      );\n      break;\n    }\n\n    // Polyfill for additional 'pointer-events' values\n    // See d13f78622b233a0afc0c7a200c0a0792c8ca9e58\n    case 'pointerEvents': {\n      let finalValue = value;\n      if (value === 'auto' || value === 'box-only') {\n        finalValue = 'auto!important';\n        if (value === 'box-only') {\n          const block = createDeclarationBlock({ [property]: 'none' });\n          rules.push(`${selector}>*${block}`);\n        }\n      } else if (value === 'none' || value === 'box-none') {\n        finalValue = 'none!important';\n        if (value === 'box-none') {\n          const block = createDeclarationBlock({ [property]: 'auto' });\n          rules.push(`${selector}>*${block}`);\n        }\n      }\n      const block = createDeclarationBlock({ [property]: finalValue });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    // Polyfill for draft spec\n    // https://drafts.csswg.org/css-scrollbars-1/\n    case 'scrollbarWidth': {\n      if (value === 'none') {\n        rules.push(`${selector}::-webkit-scrollbar{display:none}`);\n      }\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n\n    default: {\n      const block = createDeclarationBlock({ [property]: value });\n      rules.push(`${selector}${block}`);\n      break;\n    }\n  }\n\n  return rules;\n}\n\n/**\n * Creates a CSS declaration block from a StyleSheet object.\n */\nfunction createDeclarationBlock(style: Style) {\n  const domStyle = prefixStyles(createReactDOMStyle(style));\n  const declarationsString = Object.keys(domStyle)\n    .map(property => {\n      const value = domStyle[property];\n      const prop = hyphenateStyleName(property);\n      // The prefixer may return an array of values:\n      // { display: [ '-webkit-flex', 'flex' ] }\n      // to represent \"fallback\" declarations\n      // { display: -webkit-flex; display: flex; }\n      if (Array.isArray(value)) {\n        return value.map(v => `${prop}:${v}`).join(';');\n      } else {\n        return `${prop}:${value}`;\n      }\n    })\n    // Once properties are hyphenated, this will put the vendor\n    // prefixed and short-form properties first in the list.\n    .sort()\n    .join(';');\n\n  return `{${declarationsString};}`;\n}\n\n/**\n * An identifier is associated with a unique set of styles.\n */\nfunction createIdentifier(prefix, name, value) {\n  const hashedString = hash(name + stringifyValueWithProperty(value, name));\n  return process.env.NODE_ENV !== 'production'\n    ? `${prefix}-${name}-${hashedString}`\n    : `${prefix}-${hashedString}`;\n}\n\n/**\n * Create individual CSS keyframes rules.\n */\nfunction createKeyframes(keyframes) {\n  const prefixes = ['-webkit-', ''];\n  const identifier = createIdentifier('r', 'animation', keyframes);\n\n  const steps =\n    '{' +\n    Object.keys(keyframes)\n      .map(stepName => {\n        const rule = keyframes[stepName];\n        const block = createDeclarationBlock(rule);\n        return `${stepName}${block}`;\n      })\n      .join('') +\n    '}';\n\n  const rules = prefixes.map(prefix => {\n    return `@${prefix}keyframes ${identifier}${steps}`;\n  });\n  return { identifier, rules };\n}\n\n/**\n * Create CSS keyframes rules and names from a StyleSheet keyframes object.\n */\nfunction processKeyframesValue(keyframesValue) {\n  if (typeof keyframesValue === 'number') {\n    throw new Error(`Invalid CSS keyframes type: ${typeof keyframesValue}`);\n  }\n\n  const animationNames = [];\n  const rules = [];\n  const value = Array.isArray(keyframesValue) ? keyframesValue : [keyframesValue];\n\n  value.forEach(keyframes => {\n    if (typeof keyframes === 'string') {\n      // Support external animation libraries (identifiers only)\n      animationNames.push(keyframes);\n    } else {\n      // Create rules for each of the keyframes\n      const { identifier, rules: keyframesRules } = createKeyframes(keyframes);\n      animationNames.push(identifier);\n      rules.push(...keyframesRules);\n    }\n  });\n\n  return { animationNames, rules };\n}\n"]},"metadata":{},"sourceType":"module"}