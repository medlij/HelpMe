{"ast":null,"code":"export var AppOwnership;(function(AppOwnership){AppOwnership[\"Standalone\"]=\"standalone\";AppOwnership[\"Expo\"]=\"expo\";AppOwnership[\"Guest\"]=\"guest\";})(AppOwnership||(AppOwnership={}));export var ExecutionEnvironment;(function(ExecutionEnvironment){ExecutionEnvironment[\"Bare\"]=\"bare\";ExecutionEnvironment[\"Standalone\"]=\"standalone\";ExecutionEnvironment[\"StoreClient\"]=\"storeClient\";})(ExecutionEnvironment||(ExecutionEnvironment={}));export var UserInterfaceIdiom;(function(UserInterfaceIdiom){UserInterfaceIdiom[\"Handset\"]=\"handset\";UserInterfaceIdiom[\"Tablet\"]=\"tablet\";UserInterfaceIdiom[\"Unsupported\"]=\"unsupported\";})(UserInterfaceIdiom||(UserInterfaceIdiom={}));","map":{"version":3,"sources":["../src/Constants.types.ts"],"names":[],"mappings":"AAEA,MAAA,IAAY,CAAA,YAAZ,CAAA,CAAA,SAAY,YAAZ,CAAwB,CACtB,YAAA,CAAA,YAAA,CAAA,CAAA,YAAA,CACA,YAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CACA,YAAA,CAAA,OAAA,CAAA,CAAA,OAAA,CACD,CAJD,EAAY,YAAY,GAAZ,YAAY,CAAA,EAAA,CAAxB,EAMA,MAAA,IAAY,CAAA,oBAAZ,CAAA,CAAA,SAAY,oBAAZ,CAAgC,CAC9B,oBAAA,CAAA,MAAA,CAAA,CAAA,MAAA,CACA,oBAAA,CAAA,YAAA,CAAA,CAAA,YAAA,CACA,oBAAA,CAAA,aAAA,CAAA,CAAA,aAAA,CACD,CAJD,EAAY,oBAAoB,GAApB,oBAAoB,CAAA,EAAA,CAAhC,EAMA,MAAA,IAAY,CAAA,kBAAZ,CAAA,CAAA,SAAY,kBAAZ,CAA8B,CAC5B,kBAAA,CAAA,SAAA,CAAA,CAAA,SAAA,CACA,kBAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CACA,kBAAA,CAAA,aAAA,CAAA,CAAA,aAAA,CACD,CAJD,EAAY,kBAAkB,GAAlB,kBAAkB,CAAA,EAAA,CAA9B","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nexport enum AppOwnership {\n  Standalone = 'standalone',\n  Expo = 'expo',\n  Guest = 'guest',\n}\n\nexport enum ExecutionEnvironment {\n  Bare = 'bare',\n  Standalone = 'standalone',\n  StoreClient = 'storeClient',\n}\n\nexport enum UserInterfaceIdiom {\n  Handset = 'handset',\n  Tablet = 'tablet',\n  Unsupported = 'unsupported',\n}\n\nexport interface IOSManifest {\n  buildNumber: string;\n  platform: string;\n  model: string | null;\n  userInterfaceIdiom: UserInterfaceIdiom;\n  systemVersion: string;\n  [key: string]: any;\n}\n\nexport interface AndroidManifest {\n  versionCode: number;\n  [key: string]: any;\n}\n\nexport interface WebManifest {\n  [key: string]: any;\n}\n\nexport interface AppManifest extends ExpoConfig {\n  /** Published Apps Only */\n  releaseId?: string;\n  revisionId?: string;\n  releaseChannel?: string;\n  packagerOpts?: {\n    hostType?: string;\n    dev?: boolean;\n    strict?: boolean;\n    minify?: boolean;\n    urlType?: string;\n    urlRandomness?: string;\n    lanType?: string;\n    [key: string]: any;\n  };\n  xde?: boolean;\n  developer?: {\n    tool?: string;\n    [key: string]: any;\n  };\n  bundleUrl: string;\n  debuggerHost?: string;\n  mainModuleName?: string;\n  logUrl?: string;\n  [key: string]: any;\n}\n\nexport interface PlatformManifest {\n  ios?: IOSManifest;\n  android?: AndroidManifest;\n  web?: WebManifest;\n  detach?: {\n    scheme?: string;\n    [key: string]: any;\n  };\n  logUrl?: string;\n  scheme?: string;\n  hostUri?: string;\n  developer?: string;\n  [key: string]: any;\n}\n\nexport interface NativeConstants {\n  name: 'ExponentConstants';\n  appOwnership: AppOwnership | null;\n  debugMode: boolean;\n  deviceName?: string;\n  deviceYearClass: number | null;\n  executionEnvironment: ExecutionEnvironment;\n  experienceUrl: string;\n  // only nullable on web\n  expoRuntimeVersion: string | null;\n  /**\n   * The version string of the Expo client currently running.\n   * Returns `null` on and bare workflow and web.\n   */\n  expoVersion: string | null;\n  isDetached?: boolean;\n  intentUri?: string;\n  /**\n   * @deprecated Constants.installationId is deprecated in favor of generating your own ID and\n   * storing it. This API will be removed in SDK 44.\n   */\n  installationId: string;\n  isDevice: boolean;\n  isHeadless: boolean;\n  linkingUri: string;\n  nativeAppVersion: string | null;\n  nativeBuildVersion: string | null;\n  manifest: AppManifest;\n  sessionId: string;\n  statusBarHeight: number;\n  systemFonts: string[];\n  systemVersion?: number;\n  platform?: PlatformManifest;\n  [key: string]: any;\n\n  getWebViewUserAgentAsync: () => Promise<string | null>;\n}\n\nexport interface Constants extends NativeConstants {\n  /**\n   * @deprecated Constants.deviceId is deprecated in favor of generating your own ID and storing it.\n   * This API will be removed in SDK 44.\n   */\n  deviceId?: string;\n  /**\n   * @deprecated Constants.linkingUrl has been renamed to Constants.linkingUri. Consider using the\n   * Linking API directly. Constants.linkingUrl will be removed in SDK 44.\n   */\n  linkingUrl?: string;\n  /**\n   * @warning do not use this property. Use `manifest` by default.\n   *\n   * In certain cases accessing manifest via this property\n   * suppresses important warning about missing manifest.\n   */\n  __unsafeNoWarnManifest: AppManifest;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}