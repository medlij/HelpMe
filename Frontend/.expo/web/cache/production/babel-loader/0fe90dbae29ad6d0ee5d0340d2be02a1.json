{"ast":null,"code":"import*as React from'react';import*as ResponderSystem from\"./ResponderSystem\";var emptyObject={};var idCounter=0;function useStable(getInitialValue){var ref=React.useRef(null);if(ref.current==null){ref.current=getInitialValue();}return ref.current;}export default function useResponderEvents(hostRef){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:emptyObject;var id=useStable(function(){return idCounter++;});var isAttachedRef=React.useRef(false);React.useEffect(function(){ResponderSystem.attachListeners();return function(){ResponderSystem.removeNode(id);};},[id]);React.useEffect(function(){var onMoveShouldSetResponder=config.onMoveShouldSetResponder,onMoveShouldSetResponderCapture=config.onMoveShouldSetResponderCapture,onScrollShouldSetResponder=config.onScrollShouldSetResponder,onScrollShouldSetResponderCapture=config.onScrollShouldSetResponderCapture,onSelectionChangeShouldSetResponder=config.onSelectionChangeShouldSetResponder,onSelectionChangeShouldSetResponderCapture=config.onSelectionChangeShouldSetResponderCapture,onStartShouldSetResponder=config.onStartShouldSetResponder,onStartShouldSetResponderCapture=config.onStartShouldSetResponderCapture;var requiresResponderSystem=onMoveShouldSetResponder!=null||onMoveShouldSetResponderCapture!=null||onScrollShouldSetResponder!=null||onScrollShouldSetResponderCapture!=null||onSelectionChangeShouldSetResponder!=null||onSelectionChangeShouldSetResponderCapture!=null||onStartShouldSetResponder!=null||onStartShouldSetResponderCapture!=null;var node=hostRef.current;if(requiresResponderSystem){ResponderSystem.addNode(id,node,config);isAttachedRef.current=true;}else if(isAttachedRef.current){ResponderSystem.removeNode(id);isAttachedRef.current=false;}},[config,hostRef,id]);React.useDebugValue({isResponder:hostRef.current===ResponderSystem.getResponderNode()});React.useDebugValue(config);}","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-web/src/hooks/useResponderEvents/index.js"],"names":["React","ResponderSystem","emptyObject","idCounter","useStable","getInitialValue","ref","useRef","current","useResponderEvents","hostRef","config","id","isAttachedRef","useEffect","attachListeners","removeNode","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","requiresResponderSystem","node","addNode","useDebugValue","isResponder","getResponderNode"],"mappings":"AAqBA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAO,GAAKC,CAAAA,eAAZ,yBAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CACA,GAAIC,CAAAA,SAAS,CAAG,CAAhB,CAEA,QAASC,CAAAA,SAAT,CAAsBC,eAAtB,CAAmD,CACjD,GAAMC,CAAAA,GAAG,CAAGN,KAAK,CAACO,MAAN,CAAuB,IAAvB,CAAZ,CACA,GAAID,GAAG,CAACE,OAAJ,EAAe,IAAnB,CAAyB,CACvBF,GAAG,CAACE,OAAJ,CAAcH,eAAe,EAA7B,CACD,CACD,MAAOC,CAAAA,GAAG,CAACE,OAAX,CACD,CAED,cAAe,SAASC,CAAAA,kBAAT,CAA4BC,OAA5B,CAAiF,IAAvCC,CAAAA,MAAuC,2DAAbT,WAAa,CAC9F,GAAMU,CAAAA,EAAE,CAAGR,SAAS,CAAC,iBAAMD,CAAAA,SAAS,EAAf,EAAD,CAApB,CACA,GAAMU,CAAAA,aAAa,CAAGb,KAAK,CAACO,MAAN,CAAa,KAAb,CAAtB,CAKAP,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpBb,eAAe,CAACc,eAAhB,GACA,MAAO,WAAM,CACXd,eAAe,CAACe,UAAhB,CAA2BJ,EAA3B,EACD,CAFD,CAGD,CALD,CAKG,CAACA,EAAD,CALH,EAQAZ,KAAK,CAACc,SAAN,CAAgB,UAAM,CACpB,GACEG,CAAAA,wBADF,CASIN,MATJ,CACEM,wBADF,CAEEC,+BAFF,CASIP,MATJ,CAEEO,+BAFF,CAGEC,0BAHF,CASIR,MATJ,CAGEQ,0BAHF,CAIEC,iCAJF,CASIT,MATJ,CAIES,iCAJF,CAKEC,mCALF,CASIV,MATJ,CAKEU,mCALF,CAMEC,0CANF,CASIX,MATJ,CAMEW,0CANF,CAOEC,yBAPF,CASIZ,MATJ,CAOEY,yBAPF,CAQEC,gCARF,CASIb,MATJ,CAQEa,gCARF,CAWA,GAAMC,CAAAA,uBAAuB,CAC3BR,wBAAwB,EAAI,IAA5B,EACAC,+BAA+B,EAAI,IADnC,EAEAC,0BAA0B,EAAI,IAF9B,EAGAC,iCAAiC,EAAI,IAHrC,EAIAC,mCAAmC,EAAI,IAJvC,EAKAC,0CAA0C,EAAI,IAL9C,EAMAC,yBAAyB,EAAI,IAN7B,EAOAC,gCAAgC,EAAI,IARtC,CAUA,GAAME,CAAAA,IAAI,CAAGhB,OAAO,CAACF,OAArB,CAEA,GAAIiB,uBAAJ,CAA6B,CAC3BxB,eAAe,CAAC0B,OAAhB,CAAwBf,EAAxB,CAA4Bc,IAA5B,CAAkCf,MAAlC,EACAE,aAAa,CAACL,OAAd,CAAwB,IAAxB,CACD,CAHD,IAGO,IAAIK,aAAa,CAACL,OAAlB,CAA2B,CAChCP,eAAe,CAACe,UAAhB,CAA2BJ,EAA3B,EACAC,aAAa,CAACL,OAAd,CAAwB,KAAxB,CACD,CACF,CA/BD,CA+BG,CAACG,MAAD,CAASD,OAAT,CAAkBE,EAAlB,CA/BH,EAiCAZ,KAAK,CAAC4B,aAAN,CAAoB,CAAEC,WAAW,CAAEnB,OAAO,CAACF,OAAR,GAAoBP,eAAe,CAAC6B,gBAAhB,EAAnC,CAApB,EACA9B,KAAK,CAAC4B,aAAN,CAAoBjB,MAApB,EACD","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Hook for integrating the Responder System into React\n *\n *   function SomeComponent({ onStartShouldSetResponder }) {\n *     const ref = useRef(null);\n *     useResponderEvents(ref, { onStartShouldSetResponder });\n *     return <div ref={ref} />\n *   }\n */\n\nimport type { ResponderConfig } from './ResponderSystem';\n\nimport * as React from 'react';\nimport * as ResponderSystem from './ResponderSystem';\n\nconst emptyObject = {};\nlet idCounter = 0;\n\nfunction useStable<T>(getInitialValue: () => T): T {\n  const ref = React.useRef<T | null>(null);\n  if (ref.current == null) {\n    ref.current = getInitialValue();\n  }\n  return ref.current;\n}\n\nexport default function useResponderEvents(hostRef: any, config: ResponderConfig = emptyObject) {\n  const id = useStable(() => idCounter++);\n  const isAttachedRef = React.useRef(false);\n\n  // This is a separate effects so it doesn't run when the config changes.\n  // On initial mount, attach global listeners if needed.\n  // On unmount, remove node potentially attached to the Responder System.\n  React.useEffect(() => {\n    ResponderSystem.attachListeners();\n    return () => {\n      ResponderSystem.removeNode(id);\n    };\n  }, [id]);\n\n  // Register and unregister with the Responder System as necessary\n  React.useEffect(() => {\n    const {\n      onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture,\n      onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture,\n      onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder,\n      onStartShouldSetResponderCapture\n    } = config;\n\n    const requiresResponderSystem =\n      onMoveShouldSetResponder != null ||\n      onMoveShouldSetResponderCapture != null ||\n      onScrollShouldSetResponder != null ||\n      onScrollShouldSetResponderCapture != null ||\n      onSelectionChangeShouldSetResponder != null ||\n      onSelectionChangeShouldSetResponderCapture != null ||\n      onStartShouldSetResponder != null ||\n      onStartShouldSetResponderCapture != null;\n\n    const node = hostRef.current;\n\n    if (requiresResponderSystem) {\n      ResponderSystem.addNode(id, node, config);\n      isAttachedRef.current = true;\n    } else if (isAttachedRef.current) {\n      ResponderSystem.removeNode(id);\n      isAttachedRef.current = false;\n    }\n  }, [config, hostRef, id]);\n\n  React.useDebugValue({ isResponder: hostRef.current === ResponderSystem.getResponderNode() });\n  React.useDebugValue(config);\n}\n"]},"metadata":{},"sourceType":"module"}