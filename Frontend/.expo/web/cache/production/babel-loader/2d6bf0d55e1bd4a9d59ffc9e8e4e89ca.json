{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export default function getActionFromState(state,options){var _state$index,_normalizedConfig$scr;var normalizedConfig=options?createNormalizedConfigItem(options):{};var routes=state.index!=null?state.routes.slice(0,state.index+1):state.routes;if(routes.length===0){return undefined;}if(!(routes.length===1&&routes[0].key===undefined||routes.length===2&&routes[0].key===undefined&&routes[0].name===(normalizedConfig===null||normalizedConfig===void 0?void 0:normalizedConfig.initialRouteName)&&routes[1].key===undefined)){return{type:'RESET',payload:state};}var route=state.routes[(_state$index=state.index)!==null&&_state$index!==void 0?_state$index:state.routes.length-1];var current=route===null||route===void 0?void 0:route.state;var config=normalizedConfig===null||normalizedConfig===void 0?void 0:(_normalizedConfig$scr=normalizedConfig.screens)===null||_normalizedConfig$scr===void 0?void 0:_normalizedConfig$scr[route===null||route===void 0?void 0:route.name];var params=_objectSpread({},route.params);var payload=route?{name:route.name,params:params}:undefined;while(current){var _config,_config2,_config2$screens;if(current.routes.length===0){return undefined;}var _routes=current.index!=null?current.routes.slice(0,current.index+1):current.routes;var _route=_routes[_routes.length-1];_extends(params,{initial:undefined,screen:undefined,params:undefined,state:undefined});if(_routes.length===1&&_routes[0].key===undefined){params.initial=true;params.screen=_route.name;}else if(_routes.length===2&&_routes[0].key===undefined&&_routes[0].name===((_config=config)===null||_config===void 0?void 0:_config.initialRouteName)&&_routes[1].key===undefined){params.initial=false;params.screen=_route.name;}else{params.state=current;break;}if(_route.state){params.params=_objectSpread({},_route.params);params=params.params;}else{params.params=_route.params;}current=_route.state;config=(_config2=config)===null||_config2===void 0?void 0:(_config2$screens=_config2.screens)===null||_config2$screens===void 0?void 0:_config2$screens[_route.name];}if(!payload){return;}return{type:'NAVIGATE',payload:payload};}var createNormalizedConfigItem=function createNormalizedConfigItem(config){return typeof config==='object'&&config!=null?{initialRouteName:config.initialRouteName,screens:config.screens!=null?createNormalizedConfigs(config.screens):undefined}:{};};var createNormalizedConfigs=function createNormalizedConfigs(options){return Object.entries(options).reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];acc[k]=createNormalizedConfigItem(v);return acc;},{});};","map":{"version":3,"sources":["getActionFromState.tsx"],"names":["normalizedConfig","options","createNormalizedConfigItem","routes","state","type","payload","route","current","config","params","name","Object","initial","screen","undefined","initialRouteName","screens","createNormalizedConfigs","acc"],"mappings":"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","sourcesContent":["import type {\n  Route,\n  PartialRoute,\n  ParamListBase,\n  NavigationState,\n  PartialState,\n  CommonActions,\n} from '@react-navigation/routers';\nimport type { PathConfig, PathConfigMap, NavigatorScreenParams } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = { initialRouteName?: string; screens: PathConfigMap };\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NavigatorScreenParams<State>;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | CommonActions.Action | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n\n  const routes =\n    state.index != null ? state.routes.slice(0, state.index + 1) : state.routes;\n\n  if (routes.length === 0) {\n    return undefined;\n  }\n\n  if (\n    !(\n      (routes.length === 1 && routes[0].key === undefined) ||\n      (routes.length === 2 &&\n        routes[0].key === undefined &&\n        routes[0].name === normalizedConfig?.initialRouteName &&\n        routes[1].key === undefined)\n    )\n  ) {\n    return {\n      type: 'RESET',\n      payload: state,\n    };\n  }\n\n  const route = state.routes[state.index ?? state.routes.length - 1];\n\n  let current: PartialState<NavigationState> | undefined = route?.state;\n  let config: ConfigItem | undefined = normalizedConfig?.screens?.[route?.name];\n  let params = { ...route.params } as NavigatorScreenParams<\n    ParamListBase,\n    NavigationState\n  >;\n\n  let payload = route ? { name: route.name, params } : undefined;\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const routes =\n      current.index != null\n        ? current.routes.slice(0, current.index + 1)\n        : current.routes;\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      routes[routes.length - 1];\n\n    // Explicitly set to override existing value when merging params\n    Object.assign(params, {\n      initial: undefined,\n      screen: undefined,\n      params: undefined,\n      state: undefined,\n    });\n\n    if (routes.length === 1 && routes[0].key === undefined) {\n      params.initial = true;\n      params.screen = route.name;\n    } else if (\n      routes.length === 2 &&\n      routes[0].key === undefined &&\n      routes[0].name === config?.initialRouteName &&\n      routes[1].key === undefined\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n    } else {\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params as NavigatorScreenParams<\n        ParamListBase,\n        NavigationState\n      >;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n"]},"metadata":{},"sourceType":"module"}