{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,createRef}from\"react\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import colors from\"../config/colors\";import ErrorMessage from\"../components/ErrorMessage\";var LoginScreen=function LoginScreen(_ref){var navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errortext=_useState6[0],setErrortext=_useState6[1];var passwordInputRef=createRef();var handleSubmitPress=function handleSubmitPress(){if(email===\"f@gmail.com\"&&password===\"123\"){navigation.replace(\"UserTypeNav\");}if(!email){setErrortext(\"Enter Valid Email and Password\");}if(!password){setErrortext(\"Enter Valid Email and Password\");}};return React.createElement(View,{style:styles.container},React.createElement(Text,{style:styles.header},\"Login\"),React.createElement(TextInput,{style:styles.inputBox,onChangeText:function onChangeText(email){return setEmail(email);},placeholder:\"Enter Email\",placeholderTextColor:colors.text_holder,autoCapitalize:\"none\",keyboardType:\"email-address\",returnKeyType:\"next\"}),React.createElement(TextInput,{style:styles.inputBox,onChangeText:function onChangeText(password){return setPassword(password);},placeholder:\"Enter Password\",placeholderTextColor:colors.text_holder,keyboardType:\"default\",ref:passwordInputRef,secureTextEntry:true,returnKeyType:\"next\"}),React.createElement(ErrorMessage,{error:errortext}),React.createElement(TouchableOpacity,{style:styles.button,onPress:handleSubmitPress},React.createElement(Text,{style:styles.buttonText},\"Submit\")),React.createElement(Text,{style:{fontSize:16,color:colors.black,marginBottom:10}},\"Don't have an account?\"),React.createElement(TouchableOpacity,{style:styles.link,onPress:function onPress(){return navigation.navigate(\"SignupScreen\");}},React.createElement(Text,{style:styles.link},\"Signup\")));};export default LoginScreen;var styles=StyleSheet.create({button:{backgroundColor:colors.myblue,width:100,marginVertical:10,height:50,marginBottom:30,marginTop:30,justifyContent:\"center\"},buttonText:{fontSize:16,fontWeight:\"bold\",color:colors.white,textAlign:\"center\"},container:{backgroundColor:colors.white,padding:40,flex:1,alignItems:\"center\",justifyContent:\"center\"},error:{color:\"red\",textAlign:\"center\",fontSize:14},header:{fontSize:40,color:colors.myblue,marginBottom:30,fontWeight:\"bold\"},inputBox:{width:\"80%\",backgroundColor:colors.white,borderWidth:1,borderColor:colors.black,paddingHorizontal:16,fontSize:16,color:colors.white,marginVertical:10,height:50,marginBottom:20,color:colors.black},link:{backgroundColor:colors.white,textAlign:\"center\",color:colors.myblue,fontWeight:\"bold\",fontSize:18}});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/LoginScreen.js"],"names":["React","useState","createRef","colors","ErrorMessage","LoginScreen","navigation","email","setEmail","password","setPassword","errortext","setErrortext","passwordInputRef","handleSubmitPress","replace","styles","container","header","inputBox","text_holder","button","buttonText","fontSize","color","black","marginBottom","link","navigate","StyleSheet","create","backgroundColor","myblue","width","marginVertical","height","marginTop","justifyContent","fontWeight","white","textAlign","padding","flex","alignItems","error","borderWidth","borderColor","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport colors from \"../config/colors\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n//import AsyncStorage from \"@react-native-community/async-storage\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errortext, setErrortext] = useState(\"\");\n  const passwordInputRef = createRef();\n  // const [remember, setRemember] = useState(0);\n\n  // const handleRemember = (event) => {\n  //   if (event.target.checked) {\n  //     setRemember(1);\n  //   } else {\n  //     setRemember(0);\n  //   }\n  // };\n  const handleSubmitPress = () => {\n    if (email === \"f@gmail.com\" && password === \"123\") {\n      navigation.replace(\"UserTypeNav\");\n    }\n    if (!email) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n    if (!password) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n\n    // let data = {\n    //   email: email,\n    //   password: password,\n    //   remember_token: remember,\n    // };\n    // axios\n    //   .post(\"http://127.0.0.1:8000/api/login\", data)\n    //   .then((response) => {\n    //     console.log(response.status);\n    //     if (response.status === 200) {\n    //       AsyncStorage.setItem(\"user_id\", responseJson.data.email);\n    //       navigation.replace(\"DrawerNavigationRoutes\");\n    // CookieService.set(\n    //     \"access_token\",\n    //     response.data.access,\n    //     // options\n    // );\n    //   } else {\n    //     alert(\"invalid username and password\");\n    //   }\n    // })\n    // .catch((error) => {\n    //   let errortext = error;\n    //   console.log(error);\n    // });\n\n    //handleRemember;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Login</Text>\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(email) => setEmail(email)}\n        placeholder=\"Enter Email\"\n        placeholderTextColor={colors.text_holder}\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n      />\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(password) => setPassword(password)}\n        placeholder=\"Enter Password\"\n        placeholderTextColor={colors.text_holder}\n        keyboardType=\"default\"\n        ref={passwordInputRef}\n        secureTextEntry\n        returnKeyType=\"next\"\n      />\n      <ErrorMessage error={errortext} />\n      <TouchableOpacity style={styles.button} onPress={handleSubmitPress}>\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n      <Text style={{ fontSize: 16, color: colors.black, marginBottom: 10 }}>\n        Don't have an account?\n      </Text>\n      <TouchableOpacity\n        style={styles.link}\n        onPress={() => navigation.navigate(\"SignupScreen\")}\n      >\n        <Text style={styles.link}>Signup</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    marginTop: 30,\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\",\n  },\n  container: {\n    backgroundColor: colors.white,\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14,\n  },\n  header: {\n    fontSize: 40,\n    color: colors.myblue,\n    marginBottom: 30,\n    fontWeight: \"bold\",\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black,\n  },\n  link: {\n    backgroundColor: colors.white,\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}