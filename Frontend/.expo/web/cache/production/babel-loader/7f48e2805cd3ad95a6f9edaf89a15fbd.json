{"ast":null,"code":"import createPrefixer from'inline-style-prefixer/lib/createPrefixer';import staticData from\"./static\";var prefixAll=createPrefixer(staticData);export default prefixAll;export var prefixInlineStyles=function prefixInlineStyles(style){var prefixedStyles=prefixAll(style);Object.keys(prefixedStyles).forEach(function(prop){var value=prefixedStyles[prop];if(Array.isArray(value)){prefixedStyles[prop]=value[value.length-1];}});return prefixedStyles;};","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-web/src/modules/prefixStyles/index.js"],"names":["createPrefixer","staticData","prefixAll","prefixInlineStyles","style","prefixedStyles","Object","keys","forEach","prop","value","Array","isArray","length"],"mappings":"AASA,MAAOA,CAAAA,cAAP,KAA2B,0CAA3B,CACA,MAAOC,CAAAA,UAAP,gBAEA,GAAMC,CAAAA,SAAS,CAAGF,cAAc,CAACC,UAAD,CAAhC,CAEA,cAAeC,CAAAA,SAAf,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAmB,CACnD,GAAMC,CAAAA,cAAc,CAAGH,SAAS,CAACE,KAAD,CAAhC,CAIAE,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,OAA5B,CAAoC,SAAAC,IAAI,CAAI,CAC1C,GAAMC,CAAAA,KAAK,CAAGL,cAAc,CAACI,IAAD,CAA5B,CACA,GAAIE,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,CAA0B,CACxBL,cAAc,CAACI,IAAD,CAAd,CAAuBC,KAAK,CAACA,KAAK,CAACG,MAAN,CAAe,CAAhB,CAA5B,CACD,CACF,CALD,EAOA,MAAOR,CAAAA,cAAP,CACD,CAbM","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport createPrefixer from 'inline-style-prefixer/lib/createPrefixer';\nimport staticData from './static';\n\nconst prefixAll = createPrefixer(staticData);\n\nexport default prefixAll;\n\nexport const prefixInlineStyles = (style: Object) => {\n  const prefixedStyles = prefixAll(style);\n\n  // React@15 removed undocumented support for fallback values in\n  // inline-styles. Revert array values to the standard CSS value\n  Object.keys(prefixedStyles).forEach(prop => {\n    const value = prefixedStyles[prop];\n    if (Array.isArray(value)) {\n      prefixedStyles[prop] = value[value.length - 1];\n    }\n  });\n\n  return prefixedStyles;\n};\n"]},"metadata":{},"sourceType":"module"}