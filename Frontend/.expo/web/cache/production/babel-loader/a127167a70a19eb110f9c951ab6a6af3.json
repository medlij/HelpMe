{"ast":null,"code":"\"use strict\";var aStackPool=[];var bStackPool=[];/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */function areEqual(a,b){var aStack=aStackPool.length?aStackPool.pop():[];var bStack=bStackPool.length?bStackPool.pop():[];var result=eq(a,b,aStack,bStack);aStack.length=0;bStack.length=0;aStackPool.push(aStack);bStackPool.push(bStack);return result;}function eq(a,b,aStack,bStack){if(a===b){return a!==0||1/a==1/b;}if(a==null||b==null){return false;}if(typeof a!='object'||typeof b!='object'){return false;}var objToStr=Object.prototype.toString;var className=objToStr.call(a);if(className!=objToStr.call(b)){return false;}switch(className){case'[object String]':return a==String(b);case'[object Number]':return isNaN(a)||isNaN(b)?false:a==Number(b);case'[object Date]':case'[object Boolean]':return+a==+b;case'[object RegExp]':return a.source==b.source&&a.global==b.global&&a.multiline==b.multiline&&a.ignoreCase==b.ignoreCase;}var length=aStack.length;while(length--){if(aStack[length]==a){return bStack[length]==b;}}aStack.push(a);bStack.push(b);var size=0;if(className==='[object Array]'){size=a.length;if(size!==b.length){return false;}while(size--){if(!eq(a[size],b[size],aStack,bStack)){return false;}}}else{if(a.constructor!==b.constructor){return false;}if(a.hasOwnProperty('valueOf')&&b.hasOwnProperty('valueOf')){return a.valueOf()==b.valueOf();}var keys=Object.keys(a);if(keys.length!=Object.keys(b).length){return false;}for(var i=0;i<keys.length;i++){if(!eq(a[keys[i]],b[keys[i]],aStack,bStack)){return false;}}}aStack.pop();bStack.pop();return true;}module.exports=areEqual;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-gesture-handler/node_modules/fbjs/lib/areEqual.js"],"names":["aStackPool","bStackPool","areEqual","a","b","aStack","length","pop","bStack","result","eq","push","objToStr","Object","prototype","toString","className","call","String","isNaN","Number","source","global","multiline","ignoreCase","size","constructor","hasOwnProperty","valueOf","keys","i","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar aStackPool = [];\nvar bStackPool = [];\n/**\n * Checks if two values are equal. Values may be primitives, arrays, or objects.\n * Returns true if both arguments have the same keys and values.\n *\n * @see http://underscorejs.org\n * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n * @license MIT\n */\n\nfunction areEqual(a, b) {\n  var aStack = aStackPool.length ? aStackPool.pop() : [];\n  var bStack = bStackPool.length ? bStackPool.pop() : [];\n  var result = eq(a, b, aStack, bStack);\n  aStack.length = 0;\n  bStack.length = 0;\n  aStackPool.push(aStack);\n  bStackPool.push(bStack);\n  return result;\n}\n\nfunction eq(a, b, aStack, bStack) {\n  if (a === b) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    return a !== 0 || 1 / a == 1 / b;\n  }\n\n  if (a == null || b == null) {\n    // a or b can be `null` or `undefined`\n    return false;\n  }\n\n  if (typeof a != 'object' || typeof b != 'object') {\n    return false;\n  }\n\n  var objToStr = Object.prototype.toString;\n  var className = objToStr.call(a);\n\n  if (className != objToStr.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    case '[object String]':\n      return a == String(b);\n\n    case '[object Number]':\n      return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n    case '[object Date]':\n    case '[object Boolean]':\n      return +a == +b;\n\n    case '[object RegExp]':\n      return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n  } // Assume equality for cyclic structures.\n\n\n  var length = aStack.length;\n\n  while (length--) {\n    if (aStack[length] == a) {\n      return bStack[length] == b;\n    }\n  }\n\n  aStack.push(a);\n  bStack.push(b);\n  var size = 0; // Recursively compare objects and arrays.\n\n  if (className === '[object Array]') {\n    size = a.length;\n\n    if (size !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (size--) {\n      if (!eq(a[size], b[size], aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n      return a.valueOf() == b.valueOf();\n    }\n\n    var keys = Object.keys(a);\n\n    if (keys.length != Object.keys(b).length) {\n      return false;\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n        return false;\n      }\n    }\n  }\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nmodule.exports = areEqual;"]},"metadata":{},"sourceType":"script"}