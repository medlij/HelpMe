{"ast":null,"code":"var accessibilityRoleToWebRole={adjustable:'slider',button:'button',header:'heading',image:'img',imagebutton:null,keyboardkey:null,label:null,link:'link',none:'presentation',search:'search',summary:'region',text:null};var propsToAriaRole=function propsToAriaRole(_ref){var accessibilityRole=_ref.accessibilityRole;if(accessibilityRole){var inferredRole=accessibilityRoleToWebRole[accessibilityRole];if(inferredRole!==null){return inferredRole||accessibilityRole;}}};export default propsToAriaRole;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/node_modules/react-native-web/src/modules/AccessibilityUtil/propsToAriaRole.js"],"names":["accessibilityRoleToWebRole","adjustable","button","header","image","imagebutton","keyboardkey","label","link","none","search","summary","text","propsToAriaRole","accessibilityRole","inferredRole"],"mappings":"AASA,GAAMA,CAAAA,0BAA0B,CAAG,CACjCC,UAAU,CAAE,QADqB,CAEjCC,MAAM,CAAE,QAFyB,CAGjCC,MAAM,CAAE,SAHyB,CAIjCC,KAAK,CAAE,KAJ0B,CAKjCC,WAAW,CAAE,IALoB,CAMjCC,WAAW,CAAE,IANoB,CAOjCC,KAAK,CAAE,IAP0B,CAQjCC,IAAI,CAAE,MAR2B,CASjCC,IAAI,CAAE,cAT2B,CAUjCC,MAAM,CAAE,QAVyB,CAWjCC,OAAO,CAAE,QAXwB,CAYjCC,IAAI,CAAE,IAZ2B,CAAnC,CAeA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAmC,IAAhCC,CAAAA,iBAAgC,MAAhCA,iBAAgC,CACzD,GAAIA,iBAAJ,CAAuB,CACrB,GAAMC,CAAAA,YAAY,CAAGf,0BAA0B,CAACc,iBAAD,CAA/C,CACA,GAAIC,YAAY,GAAK,IAArB,CAA2B,CAEzB,MAAOA,CAAAA,YAAY,EAAID,iBAAvB,CACD,CACF,CACF,CARD,CAUA,cAAeD,CAAAA,eAAf","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst accessibilityRoleToWebRole = {\n  adjustable: 'slider',\n  button: 'button',\n  header: 'heading',\n  image: 'img',\n  imagebutton: null,\n  keyboardkey: null,\n  label: null,\n  link: 'link',\n  none: 'presentation',\n  search: 'search',\n  summary: 'region',\n  text: null\n};\n\nconst propsToAriaRole = ({ accessibilityRole }: Object) => {\n  if (accessibilityRole) {\n    const inferredRole = accessibilityRoleToWebRole[accessibilityRole];\n    if (inferredRole !== null) {\n      // ignore roles that don't map to web\n      return inferredRole || accessibilityRole;\n    }\n  }\n};\n\nexport default propsToAriaRole;\n"]},"metadata":{},"sourceType":"module"}