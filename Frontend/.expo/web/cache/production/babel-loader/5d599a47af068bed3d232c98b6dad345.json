{"ast":null,"code":"import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{NavigationContext,NavigationRouteContext}from'@react-navigation/native';import Header from\"./Header\";import{forSlideLeft,forSlideUp,forNoAnimation,forSlideRight}from\"../../TransitionConfigs/HeaderStyleInterpolators\";import PreviousSceneContext from\"../../utils/PreviousSceneContext\";export default function HeaderContainer(_ref){var mode=_ref.mode,scenes=_ref.scenes,layout=_ref.layout,insets=_ref.insets,getPreviousScene=_ref.getPreviousScene,getFocusedRoute=_ref.getFocusedRoute,onContentHeightChange=_ref.onContentHeightChange,gestureDirection=_ref.gestureDirection,styleInterpolator=_ref.styleInterpolator,style=_ref.style;var focusedRoute=getFocusedRoute();var parentPreviousScene=React.useContext(PreviousSceneContext);return React.createElement(Animated.View,{pointerEvents:\"box-none\",style:style},scenes.slice(-3).map(function(scene,i,self){var _getPreviousScene;if(mode==='screen'&&i!==self.length-1||!scene){return null;}var _ref2=scene.descriptor.options||{},header=_ref2.header,_ref2$headerShown=_ref2.headerShown,headerShown=_ref2$headerShown===void 0?true:_ref2$headerShown,headerTransparent=_ref2.headerTransparent;if(!headerShown){return null;}var isFocused=focusedRoute.key===scene.route.key;var previous=(_getPreviousScene=getPreviousScene({route:scene.route}))!==null&&_getPreviousScene!==void 0?_getPreviousScene:parentPreviousScene;var previousScene=self[i-1];var nextScene=self[i+1];var _ref3=(previousScene===null||previousScene===void 0?void 0:previousScene.descriptor.options)||{},_ref3$headerShown=_ref3.headerShown,previousHeaderShown=_ref3$headerShown===void 0?true:_ref3$headerShown;var _ref4=(nextScene===null||nextScene===void 0?void 0:nextScene.descriptor.options)||{},_ref4$headerShown=_ref4.headerShown,nextHeaderShown=_ref4$headerShown===void 0?true:_ref4$headerShown;var isHeaderStatic=previousHeaderShown===false&&!nextScene||nextHeaderShown===false;var props={mode:mode,layout:layout,insets:insets,scene:scene,previous:previous,navigation:scene.descriptor.navigation,styleInterpolator:mode==='float'?isHeaderStatic?gestureDirection==='vertical'||gestureDirection==='vertical-inverted'?forSlideUp:gestureDirection==='horizontal-inverted'?forSlideRight:forSlideLeft:styleInterpolator:forNoAnimation};return React.createElement(NavigationContext.Provider,{key:scene.route.key,value:scene.descriptor.navigation},React.createElement(NavigationRouteContext.Provider,{value:scene.route},React.createElement(View,{onLayout:onContentHeightChange?function(e){var height=e.nativeEvent.layout.height;onContentHeightChange({route:scene.route,height:height});}:undefined,pointerEvents:isFocused?'box-none':'none',accessibilityElementsHidden:!isFocused,importantForAccessibility:isFocused?'auto':'no-hide-descendants',style:mode==='float'&&!isFocused||headerTransparent?styles.header:null},header!==undefined?header(props):React.createElement(Header,props))));}));}var styles=StyleSheet.create({header:{position:'absolute',top:0,left:0,right:0}});","map":{"version":3,"sources":["HeaderContainer.tsx"],"names":["style","focusedRoute","getFocusedRoute","parentPreviousScene","React","mode","i","self","headerShown","headerTransparent","scene","isFocused","previous","getPreviousScene","route","previousScene","nextScene","previousHeaderShown","nextHeaderShown","isHeaderStatic","props","layout","insets","navigation","styleInterpolator","gestureDirection","forNoAnimation","onContentHeightChange","e","height","styles","header","position","top","left","right"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  Route,\n  ParamListBase,\n} from '@react-navigation/native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport Header from './Header';\nimport {\n  forSlideLeft,\n  forSlideUp,\n  forNoAnimation,\n  forSlideRight,\n} from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Layout,\n  Scene,\n  StackHeaderStyleInterpolator,\n  StackNavigationProp,\n  GestureDirection,\n} from '../../types';\n\nexport type Props = {\n  mode: 'float' | 'screen';\n  layout: Layout;\n  insets: EdgeInsets;\n  scenes: (Scene<Route<string>> | undefined)[];\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  onContentHeightChange?: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  styleInterpolator: StackHeaderStyleInterpolator;\n  gestureDirection: GestureDirection;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function HeaderContainer({\n  mode,\n  scenes,\n  layout,\n  insets,\n  getPreviousScene,\n  getFocusedRoute,\n  onContentHeightChange,\n  gestureDirection,\n  styleInterpolator,\n  style,\n}: Props) {\n  const focusedRoute = getFocusedRoute();\n  const parentPreviousScene = React.useContext(PreviousSceneContext);\n\n  return (\n    <Animated.View pointerEvents=\"box-none\" style={style}>\n      {scenes.slice(-3).map((scene, i, self) => {\n        if ((mode === 'screen' && i !== self.length - 1) || !scene) {\n          return null;\n        }\n\n        const { header, headerShown = true, headerTransparent } =\n          scene.descriptor.options || {};\n\n        if (!headerShown) {\n          return null;\n        }\n\n        const isFocused = focusedRoute.key === scene.route.key;\n        const previous =\n          getPreviousScene({ route: scene.route }) ?? parentPreviousScene;\n\n        // If the screen is next to a headerless screen, we need to make the header appear static\n        // This makes the header look like it's moving with the screen\n        const previousScene = self[i - 1];\n        const nextScene = self[i + 1];\n\n        const { headerShown: previousHeaderShown = true } =\n          previousScene?.descriptor.options || {};\n\n        const { headerShown: nextHeaderShown = true } =\n          nextScene?.descriptor.options || {};\n\n        const isHeaderStatic =\n          (previousHeaderShown === false &&\n            // We still need to animate when coming back from next scene\n            // A hacky way to check this is if the next scene exists\n            !nextScene) ||\n          nextHeaderShown === false;\n\n        const props = {\n          mode,\n          layout,\n          insets,\n          scene,\n          previous,\n          navigation: scene.descriptor.navigation as StackNavigationProp<\n            ParamListBase\n          >,\n          styleInterpolator:\n            mode === 'float'\n              ? isHeaderStatic\n                ? gestureDirection === 'vertical' ||\n                  gestureDirection === 'vertical-inverted'\n                  ? forSlideUp\n                  : gestureDirection === 'horizontal-inverted'\n                  ? forSlideRight\n                  : forSlideLeft\n                : styleInterpolator\n              : forNoAnimation,\n        };\n\n        return (\n          <NavigationContext.Provider\n            key={scene.route.key}\n            value={scene.descriptor.navigation}\n          >\n            <NavigationRouteContext.Provider value={scene.route}>\n              <View\n                onLayout={\n                  onContentHeightChange\n                    ? (e) => {\n                        const { height } = e.nativeEvent.layout;\n\n                        onContentHeightChange({\n                          route: scene.route,\n                          height,\n                        });\n                      }\n                    : undefined\n                }\n                pointerEvents={isFocused ? 'box-none' : 'none'}\n                accessibilityElementsHidden={!isFocused}\n                importantForAccessibility={\n                  isFocused ? 'auto' : 'no-hide-descendants'\n                }\n                style={\n                  // Avoid positioning the focused header absolutely\n                  // Otherwise accessibility tools don't seem to be able to find it\n                  (mode === 'float' && !isFocused) || headerTransparent\n                    ? styles.header\n                    : null\n                }\n              >\n                {header !== undefined ? header(props) : <Header {...props} />}\n              </View>\n            </NavigationRouteContext.Provider>\n          </NavigationContext.Provider>\n        );\n      })}\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  header: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}