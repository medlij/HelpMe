{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as Location from \"expo-location\";\nexport default function useLocation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== \"granted\")) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg(\"Permission to access location was denied\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context.sent;\n              setLocation(location);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var text = \"Waiting..\";\n\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  return text;\n}","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/hooks/useLocation.js"],"names":["React","useState","useEffect","Location","useLocation","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","status","getCurrentPositionAsync","text","JSON","stringify"],"mappings":";;AA+BA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;AAEA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,kBAAgCH,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCL,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AAEAN,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACwBC,QAAQ,CAACM,iCAAT,EADxB;;AAAA;AAAA;AACOC,cAAAA,MADP,yBACOA,MADP;;AAAA,oBAEKA,MAAM,KAAK,SAFhB;AAAA;AAAA;AAAA;;AAGGF,cAAAA,WAAW,CAAC,0CAAD,CAAX;AAHH;;AAAA;AAAA;AAAA,+CAOsBL,QAAQ,CAACQ,uBAAT,CAAiC,EAAjC,CAPtB;;AAAA;AAOKN,cAAAA,QAPL;AAQCC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAIO,IAAI,GAAG,WAAX;;AACA,MAAIL,QAAJ,EAAc;AACZK,IAAAA,IAAI,GAAGL,QAAP;AACD,GAFD,MAEO,IAAIF,QAAJ,EAAc;AACnBO,IAAAA,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAeT,QAAf,CAAP;AACD;;AAED,SAAOO,IAAP;AACD","sourcesContent":["// import { useEffect, useState } from \"react\";\n// import * as Location from \"expo-location\";\n\n// export default function useLocation() {\n//   const [location, setLocation] = useState(null);\n//   const [errorMsg, setErrorMsg] = useState(null);\n\n//   useEffect(() => {\n//     (async () => {\n//       let { granted } = await Location.requestForegroundPermissionsAsync();\n//       if (!granted) {\n//         setErrorMsg(\"Permission to access location was denied\");\n//         return;\n//       }\n\n//       const {\n//         coords: { latitude, longitude },\n//       } = await Location.getCurrentPositionAsync({});\n//       setLocation({ latitude, longitude });\n//     })();\n//   }, []);\n\n//   let res = \"Waiting..\";\n//   if (errorMsg) {\n//     res = errorMsg;\n//   } else if (location) {\n//     res = Location.reverseGeocodeAsync(location);\n//   }\n\n//   return res;\n// }\nimport React, { useState, useEffect } from \"react\";\nimport { Platform, Text, View, StyleSheet } from \"react-native\";\nimport * as Location from \"expo-location\";\n\nexport default function useLocation() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== \"granted\") {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let text = \"Waiting..\";\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = JSON.stringify(location);\n  }\n\n  return text;\n}\n"]},"metadata":{},"sourceType":"module"}