{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/LoginScreen.js\";\n\nimport React, { useState, createRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../config/colors\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errortext = _useState6[0],\n      setErrortext = _useState6[1];\n\n  var passwordInputRef = createRef();\n\n  var handleSubmitPress = function handleSubmitPress() {\n    if (email === \"f@gmail.com\" && password === \"123\") {\n      navigation.navigate(\"ChatScreen\", {\n        id: item.id,\n        person: item.title,\n        image: item.image,\n        txt: item.subTitle\n      });\n    }\n\n    if (email === \"p@gmail.com\" && password === \"123\") {\n      navigation.replace(\"UserTypeNav\", \"Provider\");\n    }\n\n    if (!email) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n\n    if (!password) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    placeholder: \"Enter Email\",\n    placeholderTextColor: colors.text_holder,\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    placeholder: \"Enter Password\",\n    placeholderTextColor: colors.text_holder,\n    keyboardType: \"default\",\n    ref: passwordInputRef,\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), React.createElement(ErrorMessage, {\n    error: errortext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmitPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Submit\")), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: colors.black,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    style: styles.link,\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    marginTop: 30,\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\"\n  },\n  container: {\n    backgroundColor: colors.white,\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  header: {\n    fontSize: 40,\n    color: colors.myblue,\n    marginBottom: 30,\n    fontWeight: \"bold\"\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black\n  },\n  link: {\n    backgroundColor: colors.white,\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/LoginScreen.js"],"names":["React","useState","createRef","colors","ErrorMessage","LoginScreen","navigation","email","setEmail","password","setPassword","errortext","setErrortext","passwordInputRef","handleSubmitPress","navigate","id","item","person","title","image","txt","subTitle","replace","styles","container","header","inputBox","text_holder","button","buttonText","fontSize","color","black","marginBottom","link","StyleSheet","create","backgroundColor","myblue","width","marginVertical","height","marginTop","justifyContent","fontWeight","white","textAlign","padding","flex","alignItems","error","borderWidth","borderColor","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport colors from \"../config/colors\";\nimport ErrorMessage from \"../components/ErrorMessage\";\n//import AsyncStorage from \"@react-native-community/async-storage\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errortext, setErrortext] = useState(\"\");\n  const passwordInputRef = createRef();\n  // const [remember, setRemember] = useState(0);\n\n  // const handleRemember = (event) => {\n  //   if (event.target.checked) {\n  //     setRemember(1);\n  //   } else {\n  //     setRemember(0);\n  //   }\n  // };\n  const handleSubmitPress = () => {\n    if (email === \"f@gmail.com\" && password === \"123\") {\n        navigation.navigate(\"ChatScreen\", {\n          id: item.id,\n          person: item.title,\n          image: item.image,\n          txt: item.subTitle,\n        })\n    }\n    if (email === \"p@gmail.com\" && password === \"123\") {\n      navigation.replace(\"UserTypeNav\", \"Provider\");\n    }\n    if (!email) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n    if (!password) {\n      setErrortext(\"Enter Valid Email and Password\");\n    }\n\n    // let data = {\n    //   email: email,\n    //   password: password,\n    //   remember_token: remember,\n    // };\n    // axios\n    //   .post(\"http://127.0.0.1:8000/api/login\", data)\n    //   .then((response) => {\n    //     console.log(response.status);\n    //     if (response.status === 200) {\n    //       AsyncStorage.setItem(\"user_id\", responseJson.data.email);\n    //       navigation.replace(\"DrawerNavigationRoutes\");\n    // CookieService.set(\n    //     \"access_token\",\n    //     response.data.access,\n    //     // options\n    // );\n    //   } else {\n    //     alert(\"invalid username and password\");\n    //   }\n    // })\n    // .catch((error) => {\n    //   let errortext = error;\n    //   console.log(error);\n    // });\n\n    //handleRemember;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Login</Text>\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(email) => setEmail(email)}\n        placeholder=\"Enter Email\"\n        placeholderTextColor={colors.text_holder}\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n      />\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(password) => setPassword(password)}\n        placeholder=\"Enter Password\"\n        placeholderTextColor={colors.text_holder}\n        keyboardType=\"default\"\n        ref={passwordInputRef}\n        secureTextEntry\n        returnKeyType=\"next\"\n      />\n      <ErrorMessage error={errortext} />\n      <TouchableOpacity style={styles.button} onPress={handleSubmitPress}>\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n      <Text style={{ fontSize: 16, color: colors.black, marginBottom: 10 }}>\n        Don't have an account?\n      </Text>\n      <TouchableOpacity\n        style={styles.link}\n        onPress={() => navigation.navigate(\"SignupScreen\")}\n      >\n        <Text style={styles.link}>Signup</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    marginTop: 30,\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\",\n  },\n  container: {\n    backgroundColor: colors.white,\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14,\n  },\n  header: {\n    fontSize: 40,\n    color: colors.myblue,\n    marginBottom: 30,\n    fontWeight: \"bold\",\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black,\n  },\n  link: {\n    backgroundColor: colors.white,\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}