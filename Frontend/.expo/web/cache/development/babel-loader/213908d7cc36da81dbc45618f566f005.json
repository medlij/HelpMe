{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/ChatScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport colors from \"../config/colors\";\n\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen() {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      messages: []\n    };\n\n    _this.renderBubble = function (props) {\n      return React.createElement(View, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, \"hi\"));\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.setState({\n        messages: [{\n          _id: 1,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }, {\n          _id: 2,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }, {\n          _id: 3,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }, {\n          _id: 4,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }, {\n          _id: 5,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }, {\n          _id: 6,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\"\n          }\n        }]\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(GiftedChat, {\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this2.onSend(messages);\n        },\n        renderBubble: this.renderBubble,\n        user: {\n          _id: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return ChatScreen;\n}(Component);\n\nexport default ChatScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: 80,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: 15,\n    borderBottomColor: colors.dark_grey,\n    borderBottomWidth: 4\n  },\n  image: {\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: colors.myblue,\n    marginRight: 10\n  },\n  text: {\n    fontSize: 19,\n    fontWeight: \"400\",\n    color: colors.black\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/ChatScreen.js"],"names":["React","Component","useRoute","GiftedChat","colors","ChatScreen","state","messages","renderBubble","props","setState","_id","text","createdAt","Date","user","name","avatar","previousState","append","onSend","styles","StyleSheet","create","container","height","width","flexDirection","justifyContent","alignItems","padding","borderBottomColor","dark_grey","borderBottomWidth","image","borderRadius","borderWidth","borderColor","myblue","marginRight","fontSize","fontWeight","color","black"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { StyleSheet, Text, View, Button, Image } from \"react-native\";\nimport { GiftedChat } from \"react-native-gifted-chat\";\nimport colors from \"../config/colors\";\n\n\n// export function ChatScreen() {\n//   const route = useRoute();\n//   return (\n//     <View style={styles.container}>\n//       <Image style={styles.image} source={route.params.image}></Image>\n//       <Text style={styles.text}>{route.params.person}</Text>\n//     </View>\n//   );\n// }\n\n// export default ChatScreen;\n\n\nclass ChatScreen extends Component {\n  state = {\n    messages: [],\n  };\n\n  componentWillMount() {\n    this.setState({\n      messages: [\n        {\n          _id: 1,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n         \n        {\n          _id: 2,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n    \n        {\n          _id: 3,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n         \n        {\n          _id: 4,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n         \n        {\n          _id: 5,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n        {\n          _id: 6,\n          text: \"Hello developer\",\n          createdAt: new Date(),\n          user: {\n            _id: 2,\n            name: \"React Native\",\n            avatar: \"https://facebook.github.io/react/img/logo_og.png\",\n          },},\n      ],\n    });\n  }\n\n  onSend(messages = []) {\n    this.setState((previousState) => ({\n      messages: GiftedChat.append(previousState.messages, messages),\n    }));\n  }\n\n  renderBubble = (props) => {\n    return (\n      <View>\n        <Text>hi</Text>\n      </View>\n    );\n  };\n\n  render() {\n    return (\n      <GiftedChat\n        messages={this.state.messages}\n        onSend={(messages) => this.onSend(messages)}\n        renderBubble={this.renderBubble}\n        user={{\n          _id: 1,\n        }}\n      />\n    );\n  }\n}\nexport default ChatScreen;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 80,\n    width: \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    padding: 15,\n    borderBottomColor: colors.dark_grey,\n    borderBottomWidth: 4,\n  },\n  image: {\n    height: 50,\n    width: 50,\n    borderRadius: 50,\n    borderWidth: 2,\n    borderColor: colors.myblue,\n    marginRight: 10,\n  },\n  text: {\n    fontSize: 19,\n    fontWeight: \"400\",\n    color: colors.black,\n  },\n});"]},"metadata":{},"sourceType":"module"}