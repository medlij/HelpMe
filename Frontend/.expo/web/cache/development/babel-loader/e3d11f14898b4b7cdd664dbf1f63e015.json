{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nvar key = \"userType\";\n\nvar storeUserType = function storeUserType(userType) {\n  return _regeneratorRuntime.async(function storeUserType$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, userType));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error storing userType\", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getUserType = function getUserType() {\n  return _regeneratorRuntime.async(function getUserType$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"Error getting userType\", _context2.t0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nvar removeUserType = function removeUserType() {\n  return _regeneratorRuntime.async(function removeUserType$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(key));\n\n        case 3:\n          _context3.next = 8;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Error deleting userType\", _context3.t0);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nexport default {\n  getUserType: getUserType,\n  removeUserType: removeUserType,\n  storeUserType: storeUserType\n};","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/usertype/storage.js"],"names":["SecureStore","key","storeUserType","userType","setItemAsync","console","log","getUserType","getItemAsync","removeUserType","deleteItemAsync"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AAEA,IAAMC,GAAG,GAAG,UAAZ;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAERH,WAAW,CAACI,YAAZ,CAAyBH,GAAzB,EAA8BE,QAA9B,CAFQ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIdE,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAECP,WAAW,CAACQ,YAAZ,CAAyBP,GAAzB,CAFD;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIZI,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAApB;;AAQA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAETT,WAAW,CAACU,eAAZ,CAA4BT,GAA5B,CAFS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIfI,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;;AAQA,eAAc;AACVC,EAAAA,WAAW,EAAXA,WADU;AACGE,EAAAA,cAAc,EAAdA,cADH;AACmBP,EAAAA,aAAa,EAAbA;AADnB,CAAd","sourcesContent":["import * as SecureStore from \"expo-secure-store\";\n\nconst key = \"userType\";\n\nconst storeUserType = async (userType) => {\n    try {\n        await SecureStore.setItemAsync(key, userType);\n    } catch (error) {\n        console.log(\"Error storing userType\", error)\n    }\n};\n\nconst getUserType = async() =>{\n    try {\n        return await SecureStore.getItemAsync(key);\n    } catch (error) {\n        console.log(\"Error getting userType\", error)\n    }\n}\n\nconst removeUserType = async() =>{\n    try {\n        await SecureStore.deleteItemAsync(key);\n    } catch (error) {\n        console.log(\"Error deleting userType\", error)\n    }\n}\n\nexport default{\n    getUserType, removeUserType, storeUserType\n}"]},"metadata":{},"sourceType":"module"}