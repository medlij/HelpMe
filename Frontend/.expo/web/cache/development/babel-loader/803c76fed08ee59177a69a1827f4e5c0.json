{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as SecureStore from \"expo-secure-store\";\nvar key = \"userId\";\n\nvar storeId = function storeId(userId) {\n  return _regeneratorRuntime.async(function storeId$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(SecureStore.setItemAsync(key, userId));\n\n        case 3:\n          _context.next = 8;\n          break;\n\n        case 5:\n          _context.prev = 5;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"Error storing userId\", _context.t0);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n};\n\nvar getId = function getId() {\n  return _regeneratorRuntime.async(function getId$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          console.log(\"id token dead\");\n          _context2.next = 4;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(key));\n\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"Error getting userId\", _context2.t0);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\n\nvar removeId = function removeId() {\n  return _regeneratorRuntime.async(function removeId$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          console.log(\"id token dead\");\n          _context3.next = 4;\n          return _regeneratorRuntime.awrap(SecureStore.deleteItemAsync(key));\n\n        case 4:\n          _context3.next = 9;\n          break;\n\n        case 6:\n          _context3.prev = 6;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(\"Error deleting userId\", _context3.t0);\n\n        case 9:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nexport default {\n  getId: getId,\n  removeId: removeId,\n  storeId: storeId\n};","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/id/storage.js"],"names":["SecureStore","key","storeId","userId","setItemAsync","console","log","getId","getItemAsync","removeId","deleteItemAsync"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AAEA,IAAMC,GAAG,GAAG,QAAZ;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAENH,WAAW,CAACI,YAAZ,CAAyBH,GAAzB,EAA8BE,MAA9B,CAFM;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIZE,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB;;AAQA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVF,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFU;AAAA,2CAIGN,WAAW,CAACQ,YAAZ,CAAyBP,GAAzB,CAJH;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMVI,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AANU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd;;AAUA,IAAMG,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbJ,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAFa;AAAA,2CAGPN,WAAW,CAACU,eAAZ,CAA4BT,GAA5B,CAHO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKbI,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;;AASA,eAAe;AACbC,EAAAA,KAAK,EAALA,KADa;AAEbE,EAAAA,QAAQ,EAARA,QAFa;AAGbP,EAAAA,OAAO,EAAPA;AAHa,CAAf","sourcesContent":["import * as SecureStore from \"expo-secure-store\";\n\nconst key = \"userId\";\n\nconst storeId = async (userId) => {\n  try {\n    await SecureStore.setItemAsync(key, userId);\n  } catch (error) {\n    console.log(\"Error storing userId\", error);\n  }\n};\n\nconst getId = async () => {\n  try {\n    console.log(\"id token dead\");\n\n    return await SecureStore.getItemAsync(key);\n  } catch (error) {\n    console.log(\"Error getting userId\", error);\n  }\n};\n\nconst removeId = async () => {\n  try {\n    console.log(\"id token dead\");\n    await SecureStore.deleteItemAsync(key);\n  } catch (error) {\n    console.log(\"Error deleting userId\", error);\n  }\n};\n\nexport default {\n  getId,\n  removeId,\n  storeId,\n};\n"]},"metadata":{},"sourceType":"module"}