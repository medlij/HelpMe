{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/MessagesScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nvar initialMessages = [{\n  id: \"1\",\n  title: \"Jenny Doe\",\n  image: require(\"../assets/default.jpeg\"),\n  time: \"4 mins ago\",\n  subTitle: \"Hey there, this is my test for a post of my social app in React Native.\"\n}, {\n  id: \"2\",\n  name: \"John Doe\",\n  image: require(\"../assets/default.jpeg\"),\n  time: \"2 hours ago\",\n  subTitle: \"Hey there, this is my test for a post of my social app in React Native.\"\n}, {\n  id: \"3\",\n  name: \"Ken William\",\n  image: require(\"../assets/default1.jpeg\"),\n  time: \"1 hours ago\",\n  subTitle: \"Hey there, this is my test for a post of my social app in React Native.\"\n}, {\n  id: \"4\",\n  name: \"Selina Paul\",\n  image: require(\"../assets/default.jpeg\"),\n  time: \"1 day ago\",\n  subTitle: \"Hey there, this is my test for a post of my social app in React Native.\"\n}, {\n  id: \"5\",\n  name: \"Christy Alex\",\n  image: require(\"../assets/default.jpeg\"),\n  title: \"2 days ago\",\n  subTitle: \"Hey there, this is my test for a post of my social app in React Native.\"\n}];\n\nfunction MessagesScreen() {\n  var _this = this;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.subTitle,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate(\"ChatScreen\", {\n            id: item.id,\n            person: item.title,\n            image: item.image\n          });\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      });\n    },\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 2,\n        title: \"Fatima Medlij\",\n        description: \"Hello Bestie\",\n        image: require(\"../assets/default.jpeg\")\n      }, {\n        id: 3,\n        title: \"Mohammad \",\n        description: \"salam aleikom\",\n        image: require(\"../assets/default1.jpeg\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    flex: 1\n  }\n});\nexport default MessagesScreen;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/MessagesScreen.js"],"names":["React","useState","ListItem","ListItemDeleteAction","Constants","useNavigation","useRoute","initialMessages","id","title","image","require","time","subTitle","name","MessagesScreen","navigation","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","styles","layout","toString","item","navigate","person","description","StyleSheet","create","paddingTop","statusBarHeight","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, TouchableHighlight, ScrollView } from \"react-native\";\nimport { FlatList } from \"react-native\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\n\nconst initialMessages = [\n  {\n    id: \"1\",\n    title: \"Jenny Doe\",\n    image: require(\"../assets/default.jpeg\"),\n    time: \"4 mins ago\",\n    subTitle:\n      \"Hey there, this is my test for a post of my social app in React Native.\",\n  },\n  {\n    id: \"2\",\n    name: \"John Doe\",\n    image: require(\"../assets/default.jpeg\"),\n    time: \"2 hours ago\",\n    subTitle:\n      \"Hey there, this is my test for a post of my social app in React Native.\",\n  },\n  {\n    id: \"3\",\n    name: \"Ken William\",\n    image: require(\"../assets/default1.jpeg\"),\n    time: \"1 hours ago\",\n    subTitle:\n      \"Hey there, this is my test for a post of my social app in React Native.\",\n  },\n  {\n    id: \"4\",\n    name: \"Selina Paul\",\n    image: require(\"../assets/default.jpeg\"),\n    time: \"1 day ago\",\n    subTitle:\n      \"Hey there, this is my test for a post of my social app in React Native.\",\n  },\n  {\n    id: \"5\",\n    name: \"Christy Alex\",\n    image: require(\"../assets/default.jpeg\"),\n    title: \"2 days ago\",\n    subTitle:\n      \"Hey there, this is my test for a post of my social app in React Native.\",\n  },\n];\n\nfunction MessagesScreen() {\n  const navigation = useNavigation();\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n    <View style={styles.layout}>\n      <FlatList\n        data={messages}\n        keyExtractor={(message) => message.id.toString()}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            subTitle={item.subTitle}\n            image={item.image}\n            onPress={() =>\n              navigation.navigate(\"ChatScreen\", {\n                id: item.id,\n                person: item.title,\n                image: item.image,\n              })\n            }\n            renderRightActions={() => (\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\n            )}\n          />\n        )}\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n              id: 2,\n              title: \"Fatima Medlij\",\n              description: \"Hello Bestie\",\n              image: require(\"../assets/default.jpeg\"),\n            },\n            {\n              id: 3,\n              title: \"Mohammad \",\n              description: \"salam aleikom\",\n              image: require(\"../assets/default1.jpeg\"),\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    flex: 1,\n  },\n});\n\nexport default MessagesScreen;\n"]},"metadata":{},"sourceType":"module"}