{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/MessagesScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport ChatScreen from \"./ChatScreen\";\nvar Messages = [{\n  id: '1',\n  userName: 'Jenny Doe',\n  userImg: require(\"../assets/users/user-3.jpg\"),\n  messageTime: '4 mins ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '2',\n  userName: 'John Doe',\n  userImg: require(\"../assets/users/user-1.jpg\"),\n  messageTime: '2 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '3',\n  userName: 'Ken William',\n  userImg: require(\"../assets/users/user-4.jpg\"),\n  messageTime: '1 hours ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '4',\n  userName: 'Selina Paul',\n  userImg: require(\"../assets/users/user-6.jpg\"),\n  messageTime: '1 day ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}, {\n  id: '5',\n  userName: 'Christy Alex',\n  userImg: require(\"../assets/users/user-7.jpg\"),\n  messageTime: '2 days ago',\n  messageText: 'Hey there, this is my test for a post of my social app in React Native.'\n}];\n\nfunction MessagesScreen() {\n  var _this = this;\n\n  var navigation = useNavigation();\n\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.description,\n        image: item.image,\n        onPress: function onPress() {\n          return navigation.navigate(\"ChatScreen\", {\n            id: item.id,\n            person: item.title,\n            image: item.image\n          });\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      });\n    },\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 2,\n        title: \"Fatima Medlij\",\n        description: \"Hello Bestie\",\n        image: require(\"../assets/default.jpeg\")\n      }, {\n        id: 3,\n        title: \"Mohammad \",\n        description: \"salam aleikom\",\n        image: require(\"../assets/default1.jpeg\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    flex: 1\n  }\n});\nexport default MessagesScreen;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/MessagesScreen.js"],"names":["React","useState","ListItem","ListItemDeleteAction","Constants","TouchableOpacity","useNavigation","useRoute","ChatScreen","Messages","id","userName","userImg","require","messageTime","messageText","MessagesScreen","navigation","initialMessages","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","styles","layout","toString","item","title","description","image","navigate","person","StyleSheet","create","paddingTop","statusBarHeight","flex"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, View, TouchableHighlight, ScrollView } from \"react-native\";\nimport { FlatList } from \"react-native\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport ChatScreen from \"./ChatScreen\";\nconst Messages = [\n  {\n    id: '1',\n    userName: 'Jenny Doe',\n    userImg: require('../assets/users/user-3.jpg'),\n    messageTime: '4 mins ago',\n    messageText:\n      'Hey there, this is my test for a post of my social app in React Native.',\n  },\n  {\n    id: '2',\n    userName: 'John Doe',\n    userImg: require('../assets/users/user-1.jpg'),\n    messageTime: '2 hours ago',\n    messageText:\n      'Hey there, this is my test for a post of my social app in React Native.',\n  },\n  {\n    id: '3',\n    userName: 'Ken William',\n    userImg: require('../assets/users/user-4.jpg'),\n    messageTime: '1 hours ago',\n    messageText:\n      'Hey there, this is my test for a post of my social app in React Native.',\n  },\n  {\n    id: '4',\n    userName: 'Selina Paul',\n    userImg: require('../assets/users/user-6.jpg'),\n    messageTime: '1 day ago',\n    messageText:\n      'Hey there, this is my test for a post of my social app in React Native.',\n  },\n  {\n    id: '5',\n    userName: 'Christy Alex',\n    userImg: require('../assets/users/user-7.jpg'),\n    messageTime: '2 days ago',\n    messageText:\n      'Hey there, this is my test for a post of my social app in React Native.',\n  },\n];\n\nfunction MessagesScreen() {\n  const navigation = useNavigation();\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n    <View style={styles.layout}>\n      <FlatList\n        data={messages}\n        keyExtractor={(message) => message.id.toString()}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            subTitle={item.description}\n            image={item.image}\n            onPress={() =>\n              navigation.navigate(\"ChatScreen\", {\n                id: item.id,\n                person: item.title,\n                image: item.image,\n              })\n            }\n            renderRightActions={() => (\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\n            )}\n          />\n        )}\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n              id: 2,\n              title: \"Fatima Medlij\",\n              description: \"Hello Bestie\",\n              image: require(\"../assets/default.jpeg\"),\n            },\n            {\n              id: 3,\n              title: \"Mohammad \",\n              description: \"salam aleikom\",\n              image: require(\"../assets/default1.jpeg\"),\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    flex: 1,\n  },\n});\n\nexport default MessagesScreen;\n"]},"metadata":{},"sourceType":"module"}