{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/AddReview.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Rating } from \"react-native-ratings\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../config/colors\";\nimport { useRoute } from \"@react-navigation/native\";\nimport useApi from \"../hooks/useApi\";\nimport reviewsApi from \"../api/reviews\";\nexport default function AddReview() {\n  var route = useRoute();\n  var t_id = route.params.id;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(3),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rating = _useState4[0],\n      setRating = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      visible = _useState6[0],\n      setVisible = _useState6[1];\n\n  var ratingCompleted = function ratingCompleted(rating) {\n    setRating(rating);\n  };\n\n  var handleSubmit = function handleSubmit(listing, _ref) {\n    var resetForm, result;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            resetForm = _ref.resetForm;\n            setProgress(0);\n            setUploadVisible(true);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(listingsApi.addListing(_objectSpread(_objectSpread({}, listing), {}, {\n              location: location\n            }), function (progress) {\n              return setProgress(progress);\n            }));\n\n          case 5:\n            result = _context.sent;\n\n            if (result.ok) {\n              _context.next = 9;\n              break;\n            }\n\n            setUploadVisible(false);\n            return _context.abrupt(\"return\", alert(\"Could not save the listing\"));\n\n          case 9:\n            resetForm();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleDone = function handleDone(data) {\n    var result;\n    return _regeneratorRuntime.async(function handleDone$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setProgress(0);\n            setUploadVisible(true);\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(reviewsApi.postReview());\n\n          case 4:\n            result = _context2.sent;\n\n            if (result.ok) {\n              _context2.next = 8;\n              break;\n            }\n\n            setUploadVisible(false);\n            return _context2.abrupt(\"return\", alert(\"Could not save the listing\"));\n\n          case 8:\n            console.log(\"done\", rating, text);\n            setVisible(false);\n            postReview(JSON.stringify(data));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useApi = useApi(reviewsApi.postReview),\n      postReview = _useApi.request;\n\n  var data = {\n    review: text,\n    tasker_id: t_id,\n    star_rating: rating\n  };\n  return React.createElement(React.Fragment, null, visible && React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Review\"), React.createElement(Rating, {\n    type: \"custom\",\n    startingValue: 2.5,\n    onFinishRating: ratingCompleted,\n    imageSize: 30,\n    style: {\n      paddingVertical: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    multiline: true,\n    onChangeText: function onChangeText(text) {\n      return setText(text);\n    },\n    placeholder: \"...\",\n    placeholderTextColor: colors.text_holder,\n    blurOnSubmit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleDone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \"Done\"))))));\n}\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 80,\n    height: 40,\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\"\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n    marginBottom: 100\n  },\n  inputBox: {\n    width: 200,\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    padding: 10,\n    fontSize: 12,\n    color: colors.white,\n    marginVertical: 10,\n    marginBottom: 20,\n    height: 140,\n    color: colors.black,\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n    flexDirection: \"column\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: colors.dark_blue,\n    shadowOffset: {\n      width: 2,\n      height: 4\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/AddReview.js"],"names":["React","useState","useEffect","Rating","colors","useRoute","useApi","reviewsApi","AddReview","route","t_id","params","id","text","setText","rating","setRating","visible","setVisible","ratingCompleted","handleSubmit","listing","resetForm","setProgress","setUploadVisible","listingsApi","addListing","location","progress","result","ok","alert","handleDone","data","postReview","console","log","JSON","stringify","request","review","tasker_id","star_rating","styles","centeredView","modalView","modalText","paddingVertical","inputBox","text_holder","button","buttonText","StyleSheet","create","backgroundColor","myblue","width","height","justifyContent","fontSize","fontWeight","color","white","textAlign","alignItems","marginTop","marginBottom","borderWidth","borderColor","black","padding","marginVertical","alignContent","flexDirection","margin","borderRadius","shadowColor","dark_blue","shadowOffset","shadowOpacity","shadowRadius","elevation","textStyle"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,sBAAvB;;;;;;AAQA,OAAOC,MAAP;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACA,MAAMK,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,EAA1B;;AACA,kBAAwBX,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOY,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4Bb,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOc,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA8Bf,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,MAAD,EAAY;AAClCC,IAAAA,SAAS,CAACD,MAAD,CAAT;AACD,GAFD;;AAGA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkBC,YAAAA,SAAlB,QAAkBA,SAAlB;AACnBC,YAAAA,WAAW,CAAC,CAAD,CAAX;AACAC,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAFmB;AAAA,6CAGEC,WAAW,CAACC,UAAZ,iCACdL,OADc;AACLM,cAAAA,QAAQ,EAARA;AADK,gBAEnB,UAACC,QAAD;AAAA,qBAAcL,WAAW,CAACK,QAAD,CAAzB;AAAA,aAFmB,CAHF;;AAAA;AAGbC,YAAAA,MAHa;;AAAA,gBAQdA,MAAM,CAACC,EARO;AAAA;AAAA;AAAA;;AASjBN,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AATiB,6CAUVO,KAAK,CAAC,4BAAD,CAVK;;AAAA;AAanBT,YAAAA,SAAS;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAeA,MAAMU,UAAU,GAAG,SAAbA,UAAa,CAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBV,YAAAA,WAAW,CAAC,CAAD,CAAX;AACAC,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAFiB;AAAA,6CAGIjB,UAAU,CAAC2B,UAAX,EAHJ;;AAAA;AAGXL,YAAAA,MAHW;;AAAA,gBAMZA,MAAM,CAACC,EANK;AAAA;AAAA;AAAA;;AAOfN,YAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAPe,8CAQRO,KAAK,CAAC,4BAAD,CARG;;AAAA;AAUjBI,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBrB,MAApB,EAA4BF,IAA5B;AACAK,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAgB,YAAAA,UAAU,CAACG,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAD,CAAV;;AAZiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAeE,gBAAgC3B,MAAM,CAACC,UAAU,CAAC2B,UAAZ,CAAtC;AAAA,MAAiBA,UAAjB,WAAQK,OAAR;;AAEF,MAAMN,IAAI,GAAG;AACXO,IAAAA,MAAM,EAAE3B,IADG;AAEX4B,IAAAA,SAAS,EAAE/B,IAFA;AAGXgC,IAAAA,WAAW,EAAE3B;AAHF,GAAb;AAMA,SACE,0CACGE,OAAO,IACN,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE0B,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,cAAc,EAAE3B,eAHlB;AAIE,IAAA,SAAS,EAAE,EAJb;AAKE,IAAA,KAAK,EAAE;AAAE4B,MAAAA,eAAe,EAAE;AAAnB,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEJ,MAAM,CAACK,QADhB;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,YAAY,EAAE,sBAACnC,IAAD;AAAA,aAAUC,OAAO,CAACD,IAAD,CAAjB;AAAA,KAHhB;AAIE,IAAA,WAAW,EAAC,KAJd;AAKE,IAAA,oBAAoB,EAAET,MAAM,CAAC6C,WAL/B;AAME,IAAA,YAAY,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAmBE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEN,MAAM,CAACO,MAAhC;AAAwC,IAAA,OAAO,EAAElB,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACQ,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAnBF,CADF,CADF,CAFJ,CADF;AAiCD;AAED,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,eAAe,EAAElD,MAAM,CAACmD,MADlB;AAENC,IAAAA,KAAK,EAAE,EAFD;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,cAAc,EAAE;AAJV,GADuB;AAO/BP,EAAAA,UAAU,EAAE;AACVQ,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,MAFF;AAGVC,IAAAA,KAAK,EAAEzD,MAAM,CAAC0D,KAHJ;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAPmB;AAa/BnB,EAAAA,YAAY,EAAE;AACZc,IAAAA,cAAc,EAAE,QADJ;AAEZM,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,SAAS,EAAE,EAHC;AAIZC,IAAAA,YAAY,EAAE;AAJF,GAbiB;AAmB/BlB,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,KAAK,EAAE,GADC;AAERF,IAAAA,eAAe,EAAElD,MAAM,CAAC0D,KAFhB;AAGRK,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,WAAW,EAAEhE,MAAM,CAACiE,KAJZ;AAKRC,IAAAA,OAAO,EAAE,EALD;AAMRX,IAAAA,QAAQ,EAAE,EANF;AAORE,IAAAA,KAAK,EAAEzD,MAAM,CAAC0D,KAPN;AAQRS,IAAAA,cAAc,EAAE,EARR;AASRL,IAAAA,YAAY,EAAE,EATN;AAURT,IAAAA,MAAM,EAAE,GAVA;AAWRI,IAAAA,KAAK,EAAEzD,MAAM,CAACiE,KAXN;AAYRL,IAAAA,UAAU,EAAE,YAZJ;AAaRQ,IAAAA,YAAY,EAAE,YAbN;AAcRC,IAAAA,aAAa,EAAE;AAdP,GAnBqB;AAmC/B5B,EAAAA,SAAS,EAAE;AACT6B,IAAAA,MAAM,EAAE,EADC;AAETpB,IAAAA,eAAe,EAAE,OAFR;AAGTqB,IAAAA,YAAY,EAAE,EAHL;AAITL,IAAAA,OAAO,EAAE,EAJA;AAKTN,IAAAA,UAAU,EAAE,QALH;AAMTY,IAAAA,WAAW,EAAExE,MAAM,CAACyE,SANX;AAOTC,IAAAA,YAAY,EAAE;AACZtB,MAAAA,KAAK,EAAE,CADK;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAPL;AAWTsB,IAAAA,aAAa,EAAE,IAXN;AAYTC,IAAAA,YAAY,EAAE,IAZL;AAaTC,IAAAA,SAAS,EAAE;AAbF,GAnCoB;AAkD/BC,EAAAA,SAAS,EAAE;AACTrB,IAAAA,KAAK,EAAE,OADE;AAETD,IAAAA,UAAU,EAAE,MAFH;AAGTG,IAAAA,SAAS,EAAE;AAHF;AAlDoB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Rating } from \"react-native-ratings\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport colors from \"../config/colors\";\nimport { useRoute } from \"@react-navigation/native\";\nimport useApi from \"../hooks/useApi\";\nimport reviewsApi from \"../api/reviews\";\n\nexport default function AddReview() {\n  const route = useRoute();\n  const t_id = route.params.id;\n  const [text, setText] = useState(\"\");\n  const [rating, setRating] = useState(3);\n  const [visible, setVisible] = useState(true);\n  const ratingCompleted = (rating) => {\n    setRating(rating);\n  };\n  const handleSubmit = async (listing, { resetForm }) => {\n    setProgress(0);\n    setUploadVisible(true);\n    const result = await listingsApi.addListing(\n      { ...listing, location },\n      (progress) => setProgress(progress)\n    );\n\n    if (!result.ok) {\n      setUploadVisible(false);\n      return alert(\"Could not save the listing\");\n    }\n\n    resetForm();\n  };\n  const handleDone = async (data) => {\n    setProgress(0);\n    setUploadVisible(true);\n    const result = await reviewsApi.postReview(\n      \n    );\n    if (!result.ok) {\n      setUploadVisible(false);\n      return alert(\"Could not save the listing\");\n    }\n    console.log(\"done\", rating, text);\n    setVisible(false);\n    postReview(JSON.stringify(data));\n  };\n\n    const { request: postReview } = useApi(reviewsApi.postReview);\n\n  const data = {\n    review: text,\n    tasker_id: t_id,\n    star_rating: rating,\n  };\n\n  return (\n    <>\n      {visible && (\n        <View style={styles.centeredView}>\n          <View style={styles.centeredView}>\n            <View style={styles.modalView}>\n              <Text style={styles.modalText}>Review</Text>\n              <Rating\n                type=\"custom\"\n                startingValue={2.5}\n                onFinishRating={ratingCompleted}\n                imageSize={30}\n                style={{ paddingVertical: 3 }}\n              />\n\n              <TextInput\n                style={styles.inputBox}\n                multiline={true}\n                onChangeText={(text) => setText(text)}\n                placeholder=\"...\"\n                placeholderTextColor={colors.text_holder}\n                blurOnSubmit\n              />\n\n              <TouchableOpacity style={styles.button} onPress={handleDone}>\n                <Text style={styles.buttonText}>Done</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 80,\n    height: 40,\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    fontSize: 15,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\",\n  },\n  centeredView: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n    marginBottom: 100,\n  },\n  inputBox: {\n    width: 200,\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    padding: 10,\n    fontSize: 12,\n    color: colors.white,\n    marginVertical: 10,\n    marginBottom: 20,\n    height: 140,\n    color: colors.black,\n    alignItems: \"flex-start\",\n    alignContent: \"flex-start\",\n    flexDirection: \"column\",\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: colors.dark_blue,\n    shadowOffset: {\n      width: 2,\n      height: 4,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}