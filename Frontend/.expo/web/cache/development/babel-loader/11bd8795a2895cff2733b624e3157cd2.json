{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/AddReview.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport colors from \"../config/colors\";\nexport default function AddReview() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"Add Review!\"), React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Explain your experience\",\n    placeholderTextColor: colors.text_holder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Enter Password\",\n    placeholderTextColor: colors.text_holder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: _objectSpread(_objectSpread({}, styles.openButton), {}, {\n      backgroundColor: \"#2196F3\"\n    }),\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"Hide Modal\"))))), React.createElement(TouchableHighlight, {\n    style: styles.openButton,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Show Modal\")));\n}\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/AddReview.js"],"names":["React","useState","colors","AddReview","modalVisible","setModalVisible","styles","centeredView","Alert","alert","modalView","modalText","inputBox","text_holder","openButton","backgroundColor","textStyle","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","white","borderWidth","borderColor","black","paddingHorizontal","fontSize","marginVertical","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Alert,\n  Modal,\n  StyleSheet,\n  Text,\n  TouchableHighlight,\n  View,\n  TextInput,\n} from \"react-native\";\nimport colors from \"../config/colors\";\n\nexport default function AddReview() {\n  const [modalVisible, setModalVisible] = useState(false);\n  return (\n    <View style={styles.centeredView}>\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          Alert.alert(\"Modal has been closed.\");\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Add Review!</Text>\n            <TextInput\n              style={styles.inputBox}\n            //   onChangeText={(email) => setEmail(email)}\n              placeholder=\"Explain your experience\"\n              placeholderTextColor={colors.text_holder}\n            />\n            <TextInput\n              style={styles.inputBox}\n            //   onChangeText={(password) => setPassword(password)}\n              placeholder=\"Enter Password\"\n              placeholderTextColor={colors.text_holder}\n              \n            />\n\n            <TouchableHighlight\n              style={{ ...styles.openButton, backgroundColor: \"#2196F3\" }}\n              onPress={() => {\n                setModalVisible(!modalVisible);\n              }}\n            >\n              <Text style={styles.textStyle}>Hide Modal</Text>\n            </TouchableHighlight>\n          </View>\n        </View>\n      </Modal>\n\n      <TouchableHighlight\n        style={styles.openButton}\n        onPress={() => {\n          setModalVisible(true);\n        }}\n      >\n        <Text style={styles.textStyle}>Show Modal</Text>\n      </TouchableHighlight>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22,\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  openButton: {\n    backgroundColor: \"#F194FF\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2,\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black,\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}