{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/navigation/UserTypeNav.js\";\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ClientTabNavigator from \"./ClientTabNavigator\";\nimport ProviderTabNavigator from \"./ProviderTabNavigator\";\nimport AuthStack from \"./AuthStack\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { useContext } from \"react\";\nimport TypeContext from \"../usertype/context\";\nvar Stack = createStackNavigator();\n\nvar UserTypeNav = function UserTypeNav(props) {\n  var usertype = useContext(TypeContext);\n  console.log(usertype.userType);\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"ClientTabNavigator\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ClientTabNavigator\",\n    component: ClientTabNavigator,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AuthStack\",\n    component: AuthStack,\n    options: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default UserTypeNav;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/navigation/UserTypeNav.js"],"names":["React","createStackNavigator","ClientTabNavigator","ProviderTabNavigator","AuthStack","useRoute","useContext","TypeContext","Stack","UserTypeNav","props","usertype","console","log","userType","headerShown"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,kBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAMC,QAAQ,GAAGL,UAAU,CAACC,WAAD,CAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,QAArB;AAGE,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,oBADP;AAEE,IAAA,SAAS,EAAEZ,kBAFb;AAGE,IAAA,OAAO,EAAE;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEX,SAFb;AAGE,IAAA,OAAO,EAAE;AAAEW,MAAAA,WAAW,EAAE;AAAf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AA+BH,CApCD;;AAsCA,eAAeN,WAAf","sourcesContent":["import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport ClientTabNavigator from \"./ClientTabNavigator\";\nimport ProviderTabNavigator from \"./ProviderTabNavigator\";\nimport AuthStack from \"./AuthStack\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { useContext } from \"react\";\nimport TypeContext from \"../usertype/context\";\n\nconst Stack = createStackNavigator();\n\nconst UserTypeNav = (props) => {\n  const usertype = useContext(TypeContext)\n  console.log(usertype.userType);\n  // const usertype = useContext(TypeContext)\n  // if (usertype == 0) {\n    return (\n      <Stack.Navigator initialRouteName=\"ClientTabNavigator\">\n        <Stack.Screen\n          name=\"ClientTabNavigator\"\n          component={ClientTabNavigator}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"AuthStack\"\n          component={AuthStack}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    );\n  // }\n  // if (usertype == 1) {\n  //   return (\n  //     <Stack.Navigator initialRouteName=\"ProviderTabNavigator\">\n  //       <Stack.Screen\n  //         name=\"ProviderTabNavigator\"\n  //         component={ProviderTabNavigator}\n  //         options={{ headerShown: false }}\n  //       />\n  //       <Stack.Screen\n  //         name=\"AuthStack\"\n  //         component={AuthStack}\n  //         options={{ headerShown: false }}\n  //       />\n  //     </Stack.Navigator>\n  //   );\n  // }\n};\n\nexport default UserTypeNav;\n"]},"metadata":{},"sourceType":"module"}