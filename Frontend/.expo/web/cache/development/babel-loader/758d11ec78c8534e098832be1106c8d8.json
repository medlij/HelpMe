{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/SplashScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport AuthContext from \"../auth/context\";\nimport authStorage from \"../auth/storage\";\nimport jwtDecode from \"jwt-decode\";\nimport colors from \"../config/colors\";\n\nvar SplashScreen = function SplashScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      animating = _useState2[0],\n      setAnimating = _useState2[1];\n\n  var _useContext = useContext(AuthContext),\n      token = _useContext.token,\n      setUser = _useContext.setUser;\n\n  var restoreToken = function restoreToken() {\n    var token;\n    return _regeneratorRuntime.async(function restoreToken$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(authStorage.getToken());\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              _context.next = 6;\n              break;\n            }\n\n            setTimeout(function () {\n              setAnimating(false);\n              navigation.replace(\"AuthStack\");\n            }, 8000);\n            return _context.abrupt(\"return\", console.log(\"no auth token\"));\n\n          case 6:\n            setUser(jwtDecode(token));\n            navigation.replace(\"UserTypeNav\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    restoreToken();\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/helpme.png\"),\n    style: {\n      width: \"90%\",\n      height: \"90%\",\n      resizeMode: \"contain\",\n      marginTop: \"30%\",\n      flex: 0.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Image, {\n    source: require(\"../assets/splash.gif\"),\n    style: {\n      width: \"90%\",\n      height: \"90%\",\n      resizeMode: \"contain\",\n      marginTop: \"30%\",\n      flex: 1.5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(ActivityIndicator, {\n    animating: animating,\n    color: colors.white,\n    size: \"large\",\n    style: styles.activityIndicator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SplashScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.white\n  },\n  activityIndicator: {\n    alignItems: \"center\",\n    height: 80\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/SplashScreen.js"],"names":["React","useState","useEffect","useContext","AuthContext","authStorage","jwtDecode","colors","SplashScreen","navigation","animating","setAnimating","token","setUser","restoreToken","getToken","setTimeout","replace","console","log","styles","container","require","width","height","resizeMode","marginTop","flex","white","activityIndicator","StyleSheet","create","alignItems","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { ActivityIndicator, View, StyleSheet, Image } from \"react-native\";\nimport AuthContext from \"../auth/context\";\nimport authStorage from \"../auth/storage\";\nimport jwtDecode from \"jwt-decode\";\nimport colors from \"../config/colors\";\n\nconst SplashScreen = ({ navigation }) => {\n  const [animating, setAnimating] = useState(true);\n  const { token, setUser } = useContext(AuthContext);\n\n  const restoreToken = async () => {\n    const token = await authStorage.getToken();\n    if (!token) {\n      setTimeout(() => {\n        setAnimating(false);\n        navigation.replace(\"AuthStack\");\n      }, 8000);\n      return console.log(\"no auth token\");\n    }\n    setUser(jwtDecode(token));\n    navigation.replace(\"UserTypeNav\");\n  };\n  \n  useEffect(() => {\n    restoreToken();\n  }, []);\n\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"../assets/helpme.png\")}\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          resizeMode: \"contain\",\n          marginTop: \"30%\",\n          flex: 0.5,\n        }}\n      />\n      <Image\n        source={require(\"../assets/splash.gif\")}\n        style={{\n          width: \"90%\",\n          height: \"90%\",\n          resizeMode: \"contain\",\n          marginTop: \"30%\",\n          flex: 1.5,\n        }}\n      />\n      <ActivityIndicator\n        animating={animating}\n        color={colors.white}\n        size=\"large\"\n        style={styles.activityIndicator}\n      />\n    </View>\n  );\n};\n\nexport default SplashScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: colors.white,\n  },\n  activityIndicator: {\n    alignItems: \"center\",\n    height: 80,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}