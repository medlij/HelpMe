{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\nexport default function useLocation() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$Location$reque, granted, _await$Location$getCu, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context.sent;\n              granted = _await$Location$reque.granted;\n\n              if (granted) {\n                _context.next = 7;\n                break;\n              }\n\n              setErrorMsg(\"Permission to access location was denied\");\n              return _context.abrupt(\"return\");\n\n            case 7:\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsynget({}));\n\n            case 9:\n              _await$Location$getCu = _context.sent;\n              location = _await$Location$getCu.location;\n              setLocation(location);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  var res = \"Waiting..\";\n\n  if (errorMsg) {\n    res = errorMsg;\n  } else if (location) {\n    res = Location.reverseGeocodeAsync(location);\n  }\n\n  return res;\n}","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/hooks/useLocation.js"],"names":["useEffect","useState","Location","useLocation","location","setLocation","errorMsg","setErrorMsg","requestForegroundPermissionsAsync","granted","getCurrentPositionAsynget","res","reverseGeocodeAsync"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AAEA,eAAe,SAASC,WAAT,GAAuB;AACpC,kBAAgCF,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOG,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,KAAC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACyBE,QAAQ,CAACM,iCAAT,EADzB;;AAAA;AAAA;AACOC,cAAAA,OADP,yBACOA,OADP;;AAAA,kBAEMA,OAFN;AAAA;AAAA;AAAA;;AAGGF,cAAAA,WAAW,CAAC,0CAAD,CAAX;AAHH;;AAAA;AAAA;AAAA,+CAO4BL,QAAQ,CAACQ,yBAAT,CAAmC,EAAnC,CAP5B;;AAAA;AAAA;AAOSN,cAAAA,QAPT,yBAOSA,QAPT;AAQCC,cAAAA,WAAW,CAACD,QAAD,CAAX;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAIO,GAAG,GAAG,WAAV;;AACA,MAAIL,QAAJ,EAAc;AACZK,IAAAA,GAAG,GAAGL,QAAN;AACD,GAFD,MAEO,IAAIF,QAAJ,EAAc;AACnBO,IAAAA,GAAG,GAAGT,QAAQ,CAACU,mBAAT,CAA6BR,QAA7B,CAAN;AACD;;AAED,SAAOO,GAAP;AACD","sourcesContent":["import { useEffect, useState } from \"react\";\nimport * as Location from \"expo-location\";\n\nexport default function useLocation() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      let { granted } = await Location.requestForegroundPermissionsAsync();\n      if (!granted) {\n        setErrorMsg(\"Permission to access location was denied\");\n        return;\n      }\n\n      const { location } = await Location.getCurrentPositionAsynget({});\n      setLocation(location);\n    })();\n  }, []);\n\n  let res = \"Waiting..\";\n  if (errorMsg) {\n    res = errorMsg;\n  } else if (location) {\n    res = Location.reverseGeocodeAsync(location);\n  }\n\n  return res;\n}\n"]},"metadata":{},"sourceType":"module"}