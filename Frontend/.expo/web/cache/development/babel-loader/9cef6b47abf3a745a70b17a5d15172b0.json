{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/FinalProject_FatimaMedlij/Frontend/components/Screens/LoginScreen.js\";\n\nimport React, { useState, createRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport colors from \"../config/colors\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errortext = _useState6[0],\n      setErrortext = _useState6[1];\n\n  var passwordInputRef = createRef();\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      remember = _useState8[0],\n      setRemember = _useState8[1];\n\n  var handleRemember = function handleRemember(event) {\n    if (event.target.checked) {\n      setRemember(1);\n    } else {\n      setRemember(0);\n    }\n  };\n\n  var handleSubmitPress = function handleSubmitPress() {\n    setErrortext(\"\");\n\n    if (!email) {\n      alert(\"Enter a valid email\");\n      return;\n    }\n\n    if (!password) {\n      alert(\"Fill password\");\n      return;\n    }\n\n    var data = {\n      email: email,\n      password: password,\n      remember_token: remember\n    };\n    axios.post(\"http://127.0.0.1:8000/api/login\", data).then(function (response) {\n      console.log(response.status);\n\n      if (response.status === 200) {\n        navigation.replace(\"TabNavigator\");\n        console.log(\"working bestie\");\n        console.log(\"Bestie the token is:\\n\", response.data.access);\n      } else {\n        alert(\"invalid username and password\");\n      }\n    }).catch(function (error) {\n      var errortext = error;\n      console.log(error);\n    });\n    handleRemember;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    placeholder: \"Enter Email\",\n    placeholderTextColor: \"grey\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    underlineColorAndroid: \"#f000\",\n    blurOnSubmit: false,\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    placeholder: \"Enter Password\",\n    placeholderTextColor: \"grey\",\n    keyboardType: \"default\",\n    ref: passwordInputRef,\n    secureTextEntry: true,\n    underlineColorAndroid: \"#f000\",\n    returnKeyType: \"next\",\n    color: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), errortext != \"\" ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 26\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmitPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Submit\")), React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      color: \"black\",\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    style: styles.link,\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#ffffff\",\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  text: {\n    fontSize: 50,\n    color: colors.myblue,\n    marginBottom: 40\n  },\n  link: {\n    backgroundColor: \"#ffffff\",\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"black\",\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: \"#ffffff\",\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: \"black\"\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#ffffff\",\n    textAlign: \"center\"\n  },\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    justifyContent: \"center\"\n  },\n  image: {\n    height: 100,\n    width: 100,\n    opacity: 100\n  }\n});","map":{"version":3,"sources":["/home/fatima/FinalProject_FatimaMedlij/Frontend/components/Screens/LoginScreen.js"],"names":["React","useState","createRef","colors","LoginScreen","navigation","email","setEmail","password","setPassword","errortext","setErrortext","passwordInputRef","remember","setRemember","handleRemember","event","target","checked","handleSubmitPress","alert","data","remember_token","axios","post","then","response","console","log","status","replace","access","catch","error","styles","container","text","inputBox","current","focus","button","buttonText","fontSize","color","marginBottom","link","navigate","StyleSheet","create","backgroundColor","padding","flex","alignItems","justifyContent","textAlign","myblue","fontWeight","width","borderWidth","borderColor","paddingHorizontal","marginVertical","height","image","opacity"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AASA,OAAOC,MAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACtC,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCR,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,gBAAgB,GAAGV,SAAS,EAAlC;;AACA,mBAAgCD,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACxBJ,MAAAA,WAAW,CAAC,CAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,CAAD,CAAX;AACD;AACF,GAND;;AAQA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BR,IAAAA,YAAY,CAAC,EAAD,CAAZ;;AACA,QAAI,CAACL,KAAL,EAAY;AACVc,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AACD,QAAI,CAACZ,QAAL,EAAe;AACbY,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AAED,QAAIC,IAAI,GAAG;AACTf,MAAAA,KAAK,EAAEA,KADE;AAETE,MAAAA,QAAQ,EAAEA,QAFD;AAGTc,MAAAA,cAAc,EAAET;AAHP,KAAX;AAKAU,IAAAA,KAAK,CACFC,IADH,CACQ,iCADR,EAC2CH,IAD3C,EAEGI,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,MAArB;;AACA,UAAIH,QAAQ,CAACG,MAAT,KAAoB,GAAxB,EAA6B;AAC3BxB,QAAAA,UAAU,CAACyB,OAAX,CAAmB,cAAnB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAMAD,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAQ,CAACL,IAAT,CAAcU,MAApD;AACD,OATD,MASO;AACLX,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACD;AACF,KAhBH,EAiBGY,KAjBH,CAiBS,UAACC,KAAD,EAAW;AAChB,UAAIvB,SAAS,GAAGuB,KAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACD,KApBH;AAsBAlB,IAAAA,cAAc;AACf,GAvCD;;AAyCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEmB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,QADhB;AAEE,IAAA,YAAY,EAAE,sBAAC/B,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAFhB;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,oBAAoB,EAAC,MAJvB;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,YAAY,EAAC,eANf;AAOE,IAAA,aAAa,EAAC,MAPhB;AAQE,IAAA,eAAe,EAAE;AAAA,aACfM,gBAAgB,CAAC0B,OAAjB,IAA4B1B,gBAAgB,CAAC0B,OAAjB,CAAyBC,KAAzB,EADb;AAAA,KARnB;AAWE,IAAA,qBAAqB,EAAC,OAXxB;AAYE,IAAA,YAAY,EAAE,KAZhB;AAaE,IAAA,KAAK,EAAC,OAbR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAiBE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEL,MAAM,CAACG,QADhB;AAEE,IAAA,YAAY,EAAE,sBAAC7B,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAFhB;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,oBAAoB,EAAC,MAJvB;AAKE,IAAA,YAAY,EAAC,SALf;AAME,IAAA,GAAG,EAAEI,gBANP;AAOE,IAAA,eAAe,EAAE,IAPnB;AAQE,IAAA,qBAAqB,EAAC,OARxB;AASE,IAAA,aAAa,EAAC,MAThB;AAUE,IAAA,KAAK,EAAC,OAVR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,EA6BGF,SAAS,IAAI,EAAb,GAAkB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACD,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BvB,SAA5B,CAAlB,GAAkE,IA7BrE,EA8BE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEwB,MAAM,CAACM,MAAhC;AAAwC,IAAA,OAAO,EAAErB,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEe,MAAM,CAACO,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA9BF,EAiCE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAE,OAAvB;AAAgCC,MAAAA,YAAY,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAjCF,EAoCE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEV,MAAM,CAACW,IADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMxC,UAAU,CAACyC,QAAX,CAAoB,cAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACW,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CApCF,CADF;AA6CD,CArGD;;AAsGA,eAAezC,WAAf;AAEA,IAAM8B,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,eAAe,EAAE,SADR;AAETC,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTC,IAAAA,cAAc,EAAE;AALP,GADoB;AAQ/BpB,EAAAA,KAAK,EAAE;AACLU,IAAAA,KAAK,EAAE,KADF;AAELW,IAAAA,SAAS,EAAE,QAFN;AAGLZ,IAAAA,QAAQ,EAAE;AAHL,GARwB;AAa/BN,EAAAA,IAAI,EAAE;AACJM,IAAAA,QAAQ,EAAE,EADN;AAEJC,IAAAA,KAAK,EAAExC,MAAM,CAACoD,MAFV;AAGJX,IAAAA,YAAY,EAAE;AAHV,GAbyB;AAkB/BC,EAAAA,IAAI,EAAE;AACJI,IAAAA,eAAe,EAAE,SADb;AAEJK,IAAAA,SAAS,EAAE,QAFP;AAGJX,IAAAA,KAAK,EAAExC,MAAM,CAACoD,MAHV;AAIJC,IAAAA,UAAU,EAAE,MAJR;AAKJd,IAAAA,QAAQ,EAAE;AALN,GAlByB;AAyB/BL,EAAAA,QAAQ,EAAE;AACRoB,IAAAA,KAAK,EAAE,KADC;AAERR,IAAAA,eAAe,EAAE,OAFT;AAGRS,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,WAAW,EAAE,OAJL;AAKRC,IAAAA,iBAAiB,EAAE,EALX;AAMRlB,IAAAA,QAAQ,EAAE,EANF;AAORC,IAAAA,KAAK,EAAE,SAPC;AAQRkB,IAAAA,cAAc,EAAE,EARR;AASRC,IAAAA,MAAM,EAAE,EATA;AAURlB,IAAAA,YAAY,EAAE,EAVN;AAWRD,IAAAA,KAAK,EAAE;AAXC,GAzBqB;AAyC/BF,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVc,IAAAA,UAAU,EAAE,MAFF;AAGVb,IAAAA,KAAK,EAAE,SAHG;AAIVW,IAAAA,SAAS,EAAE;AAJD,GAzCmB;AA+C/Bd,EAAAA,MAAM,EAAE;AACNS,IAAAA,eAAe,EAAE9C,MAAM,CAACoD,MADlB;AAENE,IAAAA,KAAK,EAAE,GAFD;AAINI,IAAAA,cAAc,EAAE,EAJV;AAMNC,IAAAA,MAAM,EAAE,EANF;AAONlB,IAAAA,YAAY,EAAE,EAPR;AAQNS,IAAAA,cAAc,EAAE;AARV,GA/CuB;AA0D/BU,EAAAA,KAAK,EAAE;AACLD,IAAAA,MAAM,EAAE,GADH;AAELL,IAAAA,KAAK,EAAE,GAFF;AAGLO,IAAAA,OAAO,EAAE;AAHJ;AA1DwB,CAAlB,CAAf","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport colors from \"../config/colors\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errortext, setErrortext] = useState(\"\");\n  const passwordInputRef = createRef();\n  const [remember, setRemember] = useState(0);\n\n  const handleRemember = (event) => {\n    if (event.target.checked) {\n      setRemember(1);\n    } else {\n      setRemember(0);\n    }\n  };\n\n  const handleSubmitPress = () => {\n    setErrortext(\"\");\n    if (!email) {\n      alert(\"Enter a valid email\");\n      return;\n    }\n    if (!password) {\n      alert(\"Fill password\");\n      return;\n    }\n\n    let data = {\n      email: email,\n      password: password,\n      remember_token: remember,\n    };\n    axios\n      .post(\"http://127.0.0.1:8000/api/login\", data)\n      .then((response) => {\n        console.log(response.status);\n        if (response.status === 200) {\n          navigation.replace(\"TabNavigator\");\n          console.log(\"working bestie\");\n          // CookieService.set(\n          //     \"access_token\",\n          //     response.data.access,\n          //     // options\n          // );\n          console.log(\"Bestie the token is:\\n\", response.data.access);\n        } else {\n          alert(\"invalid username and password\");\n        }\n      })\n      .catch((error) => {\n        let errortext = error;\n        console.log(error);\n      });\n\n    handleRemember;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>Login</Text>\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(email) => setEmail(email)}\n        placeholder=\"Enter Email\"\n        placeholderTextColor=\"grey\"\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n        onSubmitEditing={() =>\n          passwordInputRef.current && passwordInputRef.current.focus()\n        }\n        underlineColorAndroid=\"#f000\"\n        blurOnSubmit={false}\n        color=\"black\"\n      />\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(password) => setPassword(password)}\n        placeholder=\"Enter Password\"\n        placeholderTextColor=\"grey\"\n        keyboardType=\"default\"\n        ref={passwordInputRef}\n        secureTextEntry={true}\n        underlineColorAndroid=\"#f000\"\n        returnKeyType=\"next\"\n        color=\"black\"\n      />\n      {errortext != \"\" ? <Text style={styles.error}>{errortext}</Text> : null}\n      <TouchableOpacity style={styles.button} onPress={handleSubmitPress}>\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n      <Text style={{ fontSize: 18, color: \"black\", marginBottom: 20 }}>\n        Don't have an account?\n      </Text>\n      <TouchableOpacity\n        style={styles.link}\n        onPress={() => navigation.navigate(\"SignupScreen\")}\n      >\n        <Text style={styles.link}>Signup</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#ffffff\",\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14,\n  },\n  text: {\n    fontSize: 50,\n    color: colors.myblue,\n    marginBottom: 40,\n  },\n  link: {\n    backgroundColor: \"#ffffff\",\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderColor: \"black\",\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: \"#ffffff\",\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: \"black\",\n    //justifyContent: \"center\",\n    //alignItems: \"center\"\n    //padding: 20\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#ffffff\",\n    textAlign: \"center\",\n  },\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    //borderRadius: 50,\n    marginVertical: 10,\n    //borderRadius: 25,\n    height: 50,\n    marginBottom: 30,\n    justifyContent: \"center\",\n    //padding: 20\n  },\n  image: {\n    height: 100,\n    width: 100,\n    opacity: 100,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}