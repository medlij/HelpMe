{"ast":null,"code":"var _jsxFileName = \"/home/fatima/HelpMe/Frontend/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport SplashScreen from \"./Screens/SplashScreen\";\nimport UserTypeNav from \"./navigation/UserTypeNav\";\nimport AuthStack from \"./navigation/AuthStack\";\nimport navigationTheme from \"./navigation/navigationTheme\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var requestPermission = function requestPermission() {\n    var _await$ImagePicker$re, granted;\n\n    return _regeneratorRuntime.async(function requestPermission$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            _await$ImagePicker$re = _context.sent;\n            granted = _await$ImagePicker$re.granted;\n            if (!granted) alert(\"You need to enable permission to access the library.\");\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    requestPermission();\n  }, []);\n  return React.createElement(NavigationContainer, {\n    theme: navigationTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"SplashScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    theme: navigationTheme,\n    name: \"SplashScreen\",\n    component: SplashScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    theme: navigationTheme,\n    name: \"AuthStack\",\n    component: AuthStack,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    theme: navigationTheme,\n    name: \"UserTypeNav\",\n    component: UserTypeNav,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/App.js"],"names":["React","useEffect","NavigationContainer","createStackNavigator","ImagePicker","SplashScreen","UserTypeNav","AuthStack","navigationTheme","Stack","App","requestPermission","requestCameraPermissionsAsync","granted","alert","headerShown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AAEA,OAAOC,YAAP;AACA,OAAOC,WAAP;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAEA,eAAe,SAASO,GAAT,GAAe;AAE5B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACEP,WAAW,CAACQ,6BAAZ,EADF;;AAAA;AAAA;AAChBC,YAAAA,OADgB,yBAChBA,OADgB;AAExB,gBAAI,CAACA,OAAL,EAAcC,KAAK,CAAC,sDAAD,CAAL;;AAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAIAb,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEH,eAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACA,IAAA,KAAK,EAAEA,eADP;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,SAAS,EAAEH,YAHb;AAIE,IAAA,OAAO,EAAE;AAAEU,MAAAA,WAAW,EAAE;AAAf,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,KAAD,CAAO,MAAP;AACA,IAAA,KAAK,EAAEP,eADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAED,SAHb;AAIE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,WAAW,EAAE;AAAf,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,KAAD,CAAO,MAAP;AACA,IAAA,KAAK,EAAEP,eADP;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,IAAA,SAAS,EAAEF,WAHb;AAIE,IAAA,OAAO,EAAE;AAAES,MAAAA,WAAW,EAAE;AAAf,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CADF;AAwBD","sourcesContent":["import React, { useEffect } from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nimport SplashScreen from \"./Screens/SplashScreen\";\nimport UserTypeNav from \"./navigation/UserTypeNav\";\nimport AuthStack from \"./navigation/AuthStack\";\nimport navigationTheme from \"./navigation/navigationTheme\";\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n\n  const requestPermission = async () => {\n    const { granted } = await ImagePicker.requestCameraPermissionsAsync();\n    if (!granted) alert(\"You need to enable permission to access the library.\");\n  };\n  useEffect(() => {\n    requestPermission();\n  }, []);\n\n  return (\n    <NavigationContainer theme={navigationTheme}>\n      <Stack.Navigator initialRouteName=\"SplashScreen\">\n        <Stack.Screen\n        theme={navigationTheme}\n          name=\"SplashScreen\"\n          component={SplashScreen}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n        theme={navigationTheme}\n          name=\"AuthStack\"\n          component={AuthStack}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n        theme={navigationTheme}\n          name=\"UserTypeNav\"\n          component={UserTypeNav}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}