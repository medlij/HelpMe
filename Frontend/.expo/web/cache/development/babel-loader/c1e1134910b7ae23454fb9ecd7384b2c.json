{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/Screens/DrawerNavigator.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport ClientHome from \"./DrawerScreens/ClientHome\";\nimport ProviderHome from \"./DrawerScreens/ProviderHome\";\nvar Stack = createStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar usertype = \"Client\";\n\nvar ClientStack = function ClientStack(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"ClientHome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ClientHome\",\n    component: ClientHome,\n    options: {\n      title: \"ClientHome\",\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerHeader, {\n          navigationProps: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar ProviderStack = function ProviderStack(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(Stack.Navigator, {\n    initialRouteName: \"ProviderHome\",\n    screenOptions: {\n      headerLeft: function headerLeft() {\n        return React.createElement(NavigationDrawerHeader, {\n          navigationProps: navigation,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        });\n      },\n      headerStyle: {\n        backgroundColor: \"#307ecc\"\n      },\n      headerTintColor: \"#fff\",\n      headerTitleStyle: {\n        fontWeight: \"bold\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"ProviderHome\",\n    component: ProviderHome,\n    options: {\n      title: \"ProviderHome\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar DrawerNavigator = function DrawerNavigator(props) {\n  if (usertype === \"Client\") {\n    return React.createElement(Drawer.Screen, {\n      name: \"ClientStack\",\n      options: {\n        drawerLabel: \"Client Home\"\n      },\n      component: ClientStack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(Drawer.Screen, {\n      name: \"ProviderStack\",\n      options: {\n        drawerLabel: \"Provider Home\"\n      },\n      component: ProviderStack,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nexport default DrawerNavigator;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/Screens/DrawerNavigator.js"],"names":["React","createStackNavigator","createDrawerNavigator","ClientHome","ProviderHome","Stack","Drawer","usertype","ClientStack","navigation","title","headerLeft","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","ProviderStack","DrawerNavigator","props","drawerLabel"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AACA,IAAMK,MAAM,GAAGJ,qBAAqB,EAApC;AACA,IAAIK,QAAQ,GAAG,QAAf;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACtC,SACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEN,UAFb;AAGE,IAAA,OAAO,EAAE;AACPO,MAAAA,KAAK,EAAE,YADA;AAEPC,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA,OAFL;AAKPG,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OALN;AAQPC,MAAAA,eAAe,EAAE,MARV;AASPC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AATX,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAqBD,CAtBD;;AAwBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,QAAoB;AAAA,MAAjBR,UAAiB,SAAjBA,UAAiB;AACxC,SACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,gBAAgB,EAAC,cADnB;AAEE,IAAA,aAAa,EAAE;AACbE,MAAAA,UAAU,EAAE;AAAA,eACV,oBAAC,sBAAD;AAAwB,UAAA,eAAe,EAAEF,UAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADU;AAAA,OADC;AAIbG,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAE;AADN,OAJA;AAObC,MAAAA,eAAe,EAAE,MAPJ;AAQbC,MAAAA,gBAAgB,EAAE;AAChBC,QAAAA,UAAU,EAAE;AADI;AARL,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAEZ,YAFb;AAGE,IAAA,OAAO,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAuBD,CAxBD;;AAyBA,IAAMQ,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,MAAIZ,QAAQ,KAAK,QAAjB,EAA2B;AACzB,WACE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,OAAO,EAAE;AAAEa,QAAAA,WAAW,EAAE;AAAf,OAFX;AAGE,MAAA,SAAS,EAAEZ,WAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARD,MAQO;AACL,WACE,oBAAC,MAAD,CAAQ,MAAR;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,OAAO,EAAE;AAAEY,QAAAA,WAAW,EAAE;AAAf,OAFX;AAGE,MAAA,SAAS,EAAEH,aAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;AACF,CAlBD;;AAoBA,eAAeC,eAAf","sourcesContent":["import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport ClientHome from \"./DrawerScreens/ClientHome\";\nimport ProviderHome from \"./DrawerScreens/ProviderHome\";\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nlet usertype = \"Client\";\nconst ClientStack = ({ navigation }) => {\n  return (\n    <Stack.Navigator initialRouteName=\"ClientHome\">\n      <Stack.Screen\n        name=\"ClientHome\"\n        component={ClientHome}\n        options={{\n          title: \"ClientHome\",\n          headerLeft: () => (\n            <NavigationDrawerHeader navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: \"#307ecc\",\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\",\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst ProviderStack = ({ navigation }) => {\n  return (\n    <Stack.Navigator\n      initialRouteName=\"ProviderHome\"\n      screenOptions={{\n        headerLeft: () => (\n          <NavigationDrawerHeader navigationProps={navigation} />\n        ),\n        headerStyle: {\n          backgroundColor: \"#307ecc\",\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\",\n        },\n      }}\n    >\n      <Stack.Screen\n        name=\"ProviderHome\"\n        component={ProviderHome}\n        options={{ title: \"ProviderHome\" }}\n      />\n    </Stack.Navigator>\n  );\n};\nconst DrawerNavigator = (props) => {\n  if (usertype === \"Client\") {\n    return (\n      <Drawer.Screen\n        name=\"ClientStack\"\n        options={{ drawerLabel: \"Client Home\" }}\n        component={ClientStack}\n      />\n    );\n  } else {\n    return (\n      <Drawer.Screen\n        name=\"ProviderStack\"\n        options={{ drawerLabel: \"Provider Home\" }}\n        component={ProviderStack}\n      />\n    );\n  }\n};\n\nexport default DrawerNavigator;\n"]},"metadata":{},"sourceType":"module"}