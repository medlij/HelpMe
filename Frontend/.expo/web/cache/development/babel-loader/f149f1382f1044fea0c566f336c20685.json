{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/Screens/LoginScreen.js\";\n\nimport React, { useState, createRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../config/colors\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errortext = _useState6[0],\n      setErrortext = _useState6[1];\n\n  var passwordInputRef = createRef();\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      remember = _useState8[0],\n      setRemember = _useState8[1];\n\n  var handleRemember = function handleRemember(event) {\n    if (event.target.checked) {\n      setRemember(1);\n    } else {\n      setRemember(0);\n    }\n  };\n\n  var handleSubmitPress = function handleSubmitPress() {\n    setErrortext(\"\");\n\n    if (!email) {\n      alert(\"Enter a valid email\");\n      return;\n    }\n\n    if (!password) {\n      alert(\"Fill password\");\n      return;\n    }\n\n    var data = {\n      email: email,\n      password: password,\n      remember_token: remember\n    };\n    handleRemember;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    placeholder: \"Enter Email\",\n    placeholderTextColor: colors.text_holder,\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    onSubmitEditing: function onSubmitEditing() {\n      return passwordInputRef.current && passwordInputRef.current.focus();\n    },\n    color: colors.black,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.inputBox,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    placeholder: \"Enter Password\",\n    placeholderTextColor: colors.text_holder,\n    keyboardType: \"default\",\n    ref: passwordInputRef,\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    color: colors.black,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), errortext != \"\" ? React.createElement(Text, {\n    style: styles.error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 26\n    }\n  }, errortext) : null, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: handleSubmitPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Submit\")), React.createElement(Text, {\n    style: {\n      fontSize: 16,\n      color: colors.black,\n      marginBottom: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"Don't have an account?\"), React.createElement(TouchableOpacity, {\n    style: styles.link,\n    onPress: function onPress() {\n      return navigation.navigate(\"SignupScreen\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Signup\")));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    marginTop: 30,\n    justifyContent: \"center\"\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\"\n  },\n  container: {\n    backgroundColor: colors.white,\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14\n  },\n  header: {\n    fontSize: 40,\n    color: colors.myblue,\n    marginBottom: 30,\n    fontWeight: \"bold\"\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black\n  },\n  link: {\n    backgroundColor: colors.white,\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/Screens/LoginScreen.js"],"names":["React","useState","createRef","colors","LoginScreen","navigation","email","setEmail","password","setPassword","errortext","setErrortext","passwordInputRef","remember","setRemember","handleRemember","event","target","checked","handleSubmitPress","alert","data","remember_token","styles","container","header","inputBox","text_holder","current","focus","black","error","button","buttonText","fontSize","color","marginBottom","link","navigate","StyleSheet","create","backgroundColor","myblue","width","marginVertical","height","marginTop","justifyContent","fontWeight","white","textAlign","padding","flex","alignItems","borderWidth","borderColor","paddingHorizontal"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;AASA,OAAOC,MAAP;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACtC,kBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAAkCR,QAAQ,CAAC,EAAD,CAA1C;AAAA;AAAA,MAAOS,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,gBAAgB,GAAGV,SAAS,EAAlC;;AACA,mBAAgCD,QAAQ,CAAC,CAAD,CAAxC;AAAA;AAAA,MAAOY,QAAP;AAAA,MAAiBC,WAAjB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,QAAIA,KAAK,CAACC,MAAN,CAAaC,OAAjB,EAA0B;AACxBJ,MAAAA,WAAW,CAAC,CAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,CAAD,CAAX;AACD;AACF,GAND;;AAOA,MAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BR,IAAAA,YAAY,CAAC,EAAD,CAAZ;;AACA,QAAI,CAACL,KAAL,EAAY;AACVc,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA;AACD;;AACD,QAAI,CAACZ,QAAL,EAAe;AACbY,MAAAA,KAAK,CAAC,eAAD,CAAL;AACA;AACD;;AAGD,QAAIC,IAAI,GAAG;AACTf,MAAAA,KAAK,EAAEA,KADE;AAETE,MAAAA,QAAQ,EAAEA,QAFD;AAGTc,MAAAA,cAAc,EAAET;AAHP,KAAX;AA0BAE,IAAAA,cAAc;AACf,GAvCD;;AAyCA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEF,MAAM,CAACG,QADhB;AAEE,IAAA,YAAY,EAAE,sBAACpB,KAAD;AAAA,aAAWC,QAAQ,CAACD,KAAD,CAAnB;AAAA,KAFhB;AAGE,IAAA,WAAW,EAAC,aAHd;AAIE,IAAA,oBAAoB,EAAEH,MAAM,CAACwB,WAJ/B;AAKE,IAAA,cAAc,EAAC,MALjB;AAME,IAAA,YAAY,EAAC,eANf;AAOE,IAAA,aAAa,EAAC,MAPhB;AAQE,IAAA,eAAe,EAAE;AAAA,aACff,gBAAgB,CAACgB,OAAjB,IAA4BhB,gBAAgB,CAACgB,OAAjB,CAAyBC,KAAzB,EADb;AAAA,KARnB;AAWE,IAAA,KAAK,EAAE1B,MAAM,CAAC2B,KAXhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAeE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEP,MAAM,CAACG,QADhB;AAEE,IAAA,YAAY,EAAE,sBAAClB,QAAD;AAAA,aAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,KAFhB;AAGE,IAAA,WAAW,EAAC,gBAHd;AAIE,IAAA,oBAAoB,EAAEL,MAAM,CAACwB,WAJ/B;AAKE,IAAA,YAAY,EAAC,SALf;AAME,IAAA,GAAG,EAAEf,gBANP;AAOE,IAAA,eAAe,EAAE,IAPnB;AAQE,IAAA,aAAa,EAAC,MARhB;AASE,IAAA,KAAK,EAAET,MAAM,CAAC2B,KAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EA0BGpB,SAAS,IAAI,EAAb,GAAkB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACQ,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BrB,SAA5B,CAAlB,GAAkE,IA1BrE,EA2BE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEa,MAAM,CAACS,MAAhC;AAAwC,IAAA,OAAO,EAAEb,iBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACU,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CA3BF,EA8BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAAEhC,MAAM,CAAC2B,KAA9B;AAAqCM,MAAAA,YAAY,EAAE;AAAnD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BA9BF,EAiCE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEb,MAAM,CAACc,IADhB;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMhC,UAAU,CAACiC,QAAX,CAAoB,cAApB,CAAN;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEf,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAjCF,CADF;AA0CD,CAjGD;;AAkGA,eAAejC,WAAf;AAEA,IAAMmB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,eAAe,EAAEtC,MAAM,CAACuC,MADlB;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,cAAc,EAAE,EAHV;AAINC,IAAAA,MAAM,EAAE,EAJF;AAKNT,IAAAA,YAAY,EAAE,EALR;AAMNU,IAAAA,SAAS,EAAE,EANL;AAONC,IAAAA,cAAc,EAAE;AAPV,GADuB;AAU/Bd,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVc,IAAAA,UAAU,EAAE,MAFF;AAGVb,IAAAA,KAAK,EAAEhC,MAAM,CAAC8C,KAHJ;AAIVC,IAAAA,SAAS,EAAE;AAJD,GAVmB;AAgB/B1B,EAAAA,SAAS,EAAE;AACTiB,IAAAA,eAAe,EAAEtC,MAAM,CAAC8C,KADf;AAETE,IAAAA,OAAO,EAAE,EAFA;AAGTC,IAAAA,IAAI,EAAE,CAHG;AAITC,IAAAA,UAAU,EAAE,QAJH;AAKTN,IAAAA,cAAc,EAAE;AALP,GAhBoB;AAuB/BhB,EAAAA,KAAK,EAAE;AACLI,IAAAA,KAAK,EAAE,KADF;AAELe,IAAAA,SAAS,EAAE,QAFN;AAGLhB,IAAAA,QAAQ,EAAE;AAHL,GAvBwB;AA4B/BT,EAAAA,MAAM,EAAE;AACNS,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,KAAK,EAAEhC,MAAM,CAACuC,MAFR;AAGNN,IAAAA,YAAY,EAAE,EAHR;AAINY,IAAAA,UAAU,EAAE;AAJN,GA5BuB;AAkC/BtB,EAAAA,QAAQ,EAAE;AACRiB,IAAAA,KAAK,EAAE,KADC;AAERF,IAAAA,eAAe,EAAEtC,MAAM,CAAC8C,KAFhB;AAGRK,IAAAA,WAAW,EAAE,CAHL;AAIRC,IAAAA,WAAW,EAAEpD,MAAM,CAAC2B,KAJZ;AAKR0B,IAAAA,iBAAiB,EAAE,EALX;AAMRtB,IAAAA,QAAQ,EAAE,EANF;AAORC,IAAAA,KAAK,EAAEhC,MAAM,CAAC8C,KAPN;AAQRL,IAAAA,cAAc,EAAE,EARR;AASRC,IAAAA,MAAM,EAAE,EATA;AAURT,IAAAA,YAAY,EAAE,EAVN;AAWRD,IAAAA,KAAK,EAAEhC,MAAM,CAAC2B;AAXN,GAlCqB;AA+C/BO,EAAAA,IAAI,EAAE;AACJI,IAAAA,eAAe,EAAEtC,MAAM,CAAC8C,KADpB;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJf,IAAAA,KAAK,EAAEhC,MAAM,CAACuC,MAHV;AAIJM,IAAAA,UAAU,EAAE,MAJR;AAKJd,IAAAA,QAAQ,EAAE;AALN;AA/CyB,CAAlB,CAAf","sourcesContent":["import React, { useState, createRef } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n} from \"react-native\";\n\nimport colors from \"../config/colors\";\n//import AsyncStorage from \"@react-native-community/async-storage\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errortext, setErrortext] = useState(\"\");\n  const passwordInputRef = createRef();\n  const [remember, setRemember] = useState(0);\n\n  const handleRemember = (event) => {\n    if (event.target.checked) {\n      setRemember(1);\n    } else {\n      setRemember(0);\n    }\n  };\n  const handleSubmitPress = () => {\n    setErrortext(\"\");\n    if (!email) {\n      alert(\"Enter a valid email\");\n      return;\n    }\n    if (!password) {\n      alert(\"Fill password\");\n      return;\n    }\n    \n\n    let data = {\n      email: email,\n      password: password,\n      remember_token: remember,\n    };\n    // axios\n    //   .post(\"http://127.0.0.1:8000/api/login\", data)\n    //   .then((response) => {\n    //     console.log(response.status);\n    //     if (response.status === 200) {\n    //       AsyncStorage.setItem(\"user_id\", responseJson.data.email);\n    //       navigation.replace(\"DrawerNavigationRoutes\");\n          // CookieService.set(\n          //     \"access_token\",\n          //     response.data.access,\n          //     // options\n          // );\n      //   } else {\n      //     alert(\"invalid username and password\");\n      //   }\n      // })\n      // .catch((error) => {\n      //   let errortext = error;\n      //   console.log(error);\n      // });\n\n    handleRemember;\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.header}>Login</Text>\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(email) => setEmail(email)}\n        placeholder=\"Enter Email\"\n        placeholderTextColor={colors.text_holder}\n        autoCapitalize=\"none\"\n        keyboardType=\"email-address\"\n        returnKeyType=\"next\"\n        onSubmitEditing={() =>\n          passwordInputRef.current && passwordInputRef.current.focus()\n        }\n        color={colors.black}\n      />\n      <TextInput\n        style={styles.inputBox}\n        onChangeText={(password) => setPassword(password)}\n        placeholder=\"Enter Password\"\n        placeholderTextColor={colors.text_holder}\n        keyboardType=\"default\"\n        ref={passwordInputRef}\n        secureTextEntry={true}\n        returnKeyType=\"next\"\n        color={colors.black}\n      />\n      {errortext != \"\" ? <Text style={styles.error}>{errortext}</Text> : null}\n      <TouchableOpacity style={styles.button} onPress={handleSubmitPress}>\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n      <Text style={{ fontSize: 16, color: colors.black, marginBottom: 10 }}>\n        Don't have an account?\n      </Text>\n      <TouchableOpacity\n        style={styles.link}\n        onPress={() => navigation.navigate(\"SignupScreen\")}\n      >\n        <Text style={styles.link}>Signup</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\nexport default LoginScreen;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 100,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 30,\n    marginTop: 30,\n    justifyContent: \"center\",\n  },\n  buttonText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: colors.white,\n    textAlign: \"center\",\n  },\n  container: {\n    backgroundColor: colors.white,\n    padding: 40,\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  error: {\n    color: \"red\",\n    textAlign: \"center\",\n    fontSize: 14,\n  },\n  header: {\n    fontSize: 40,\n    color: colors.myblue,\n    marginBottom: 30,\n    fontWeight: \"bold\",\n  },\n  inputBox: {\n    width: \"80%\",\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.black,\n    paddingHorizontal: 16,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 50,\n    marginBottom: 20,\n    color: colors.black,\n  },\n  link: {\n    backgroundColor: colors.white,\n    textAlign: \"center\",\n    color: colors.myblue,\n    fontWeight: \"bold\",\n    fontSize: 18,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}