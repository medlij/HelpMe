{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/ChatScreen.js\";\n\nimport { useRoute } from \"@react-navigation/native\";\nimport colors from \"../config/colors\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Bubble, GiftedChat, Send } from \"react-native-gifted-chat\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\n\nvar ChatScreen = function ChatScreen() {\n  var route = useRoute();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  useEffect(function () {\n    setMessages([{\n      _id: 1,\n      text: route.params.txt,\n      createdAt: new Date(),\n      user: {\n        _id: 2,\n        name: \"React Native\",\n        avatar: route.params.image\n      }\n    }, {\n      _id: 2,\n      text: \"Hello\",\n      createdAt: new Date(),\n      user: {\n        _id: 1,\n        name: \"React Native\",\n        avatar: \"https://placeimg.com/140/140/any\"\n      }\n    }]);\n  }, []);\n\n  var _onSend = useCallback(function () {\n    var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    setMessages(function (previousMessages) {\n      return GiftedChat.append(previousMessages, messages);\n    });\n  }, []);\n\n  var renderSend = function renderSend(props) {\n    return React.createElement(Send, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }), React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, React.createElement(MaterialCommunityIcons, {\n      name: \"send-circle\",\n      style: {\n        marginBottom: 5,\n        marginRight: 5\n      },\n      size: 32,\n      color: colors.myblue,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  var renderBubble = function renderBubble(props) {\n    return React.createElement(Bubble, _extends({}, props, {\n      wrapperStyle: {\n        right: {\n          backgroundColor: colors.myblue\n        }\n      },\n      textStyle: {\n        right: {\n          color: colors.white\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var scrollToBottomComponent = function scrollToBottomComponent() {\n    return React.createElement(FontAwesome, {\n      name: \"angle-double-down\",\n      size: 22,\n      color: \"red\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    });\n  };\n\n  return React.createElement(GiftedChat, {\n    messages: messages,\n    onSend: function onSend(messages) {\n      return _onSend(messages);\n    },\n    user: {\n      _id: 1\n    },\n    renderBubble: renderBubble,\n    alwaysShowSend: true,\n    renderSend: renderSend,\n    scrollToBottom: true,\n    scrollToBottomComponent: scrollToBottomComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default ChatScreen;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/ChatScreen.js"],"names":["useRoute","colors","React","useState","useEffect","useCallback","Bubble","GiftedChat","Send","MaterialCommunityIcons","FontAwesome","ChatScreen","route","messages","setMessages","_id","text","params","txt","createdAt","Date","user","name","avatar","image","onSend","previousMessages","append","renderSend","props","marginBottom","marginRight","myblue","renderBubble","right","backgroundColor","color","white","scrollToBottomComponent"],"mappings":"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","sourcesContent":["import { useRoute } from \"@react-navigation/native\";\nimport colors from \"../config/colors\";\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { View, Text, Button, StyleSheet } from \"react-native\";\nimport { Bubble, GiftedChat, Send } from \"react-native-gifted-chat\";\nimport MaterialCommunityIcons from \"react-native-vector-icons/MaterialCommunityIcons\";\nimport FontAwesome from \"react-native-vector-icons/FontAwesome\";\n\nconst ChatScreen = () => {\n  const route = useRoute();\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    setMessages([\n      {\n        _id: 1,\n        text: route.params.txt,\n        createdAt: new Date(),\n        user: {\n          _id: 2,\n          name: \"React Native\",\n          avatar: route.params.image,\n        },\n      },\n      {\n        _id: 2,\n        text: \"Hello\",\n        createdAt: new Date(),\n        user: {\n          _id: 1,\n          name: \"React Native\",\n          avatar: \"https://placeimg.com/140/140/any\",\n        },\n      },\n    ]);\n  }, []);\n\n  const onSend = useCallback((messages = []) => {\n    setMessages((previousMessages) =>\n      GiftedChat.append(previousMessages, messages)\n    );\n  }, []);\n\n  const renderSend = (props) => {\n    return (\n      <Send {...props}>\n        <View>\n          <MaterialCommunityIcons\n            name=\"send-circle\"\n            style={{ marginBottom: 5, marginRight: 5 }}\n            size={32}\n            color={colors.myblue}\n          />\n        </View>\n      </Send>\n    );\n  };\n\n  const renderBubble = (props) => {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: colors.myblue,\n          },\n        }}\n        textStyle={{\n          right: {\n            color: colors.white,\n          },\n        }}\n      />\n    );\n  };\n\n  const scrollToBottomComponent = () => {\n    return <FontAwesome name=\"angle-double-down\" size={22} color=\"red\" />;\n  };\n\n  return (\n    <GiftedChat\n      messages={messages}\n      onSend={(messages) => onSend(messages)}\n      user={{\n        _id: 1,\n      }}\n      renderBubble={renderBubble}\n      alwaysShowSend\n      renderSend={renderSend}\n      scrollToBottom\n      scrollToBottomComponent={scrollToBottomComponent}\n    />\n  );\n};\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}