{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SplashScreen from \"./components/Screens/SplashScreen\";\nimport AuthStack from \"./components/Screens/AuthStack\";\nimport DrawerNavigator from \"./components/Screens/DrawerNavigator\";\nimport ClientHome from \"./components/Screens/DrawerScreens/ClientHome\";\nimport ProviderHome from \"./components/Screens/DrawerScreens/ProviderHome\";\nvar auth = true;\nvar usertype = \"Client\";\nvar Stack = createStackNavigator();\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this = this;\n\n      this.state = {\n        view: React.createElement(SplashScreen, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }\n        })\n      };\n      setTimeout(function () {\n        _this.setState({\n          view: React.createElement(NavigationContainer, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 11\n            }\n          }, auth ? {\n            usertype: \"Client\" ? React.createElement(ClientHome, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 38\n              }\n            }) : React.createElement(ProviderHome, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 55\n              }\n            })\n          } : React.createElement(AuthStack, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }\n          }))\n        });\n      }, 4000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.state.view;\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/App.js"],"names":["React","NavigationContainer","createStackNavigator","SplashScreen","AuthStack","DrawerNavigator","ClientHome","ProviderHome","auth","usertype","Stack","App","state","view","setTimeout","setState","Component","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,OAAO,8BAAP;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,YAAP;AACA,OAAOC,SAAP;AACA,OAAOC,eAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AACA,IAAIC,IAAI,GAAG,IAAX;AACA,IAAIC,QAAQ,GAAG,QAAf;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;;IACqBS,G;;;;;;;;;;;;;WACnB,8BAAqB;AAAA;;AACnB,WAAKC,KAAL,GAAa;AACXC,QAAAA,IAAI,EAAE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADK,OAAb;AAIAC,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,KAAI,CAACC,QAAL,CAAc;AACZF,UAAAA,IAAI,EACF,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGL,IAAI,GACH;AAAEC,YAAAA,QAAQ,EAAE,WAAW,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAX,GAA4B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAxC,WADG,GAGH,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAFU,SAAd;AAWD,OAZS,EAYP,IAZO,CAAV;AAaD;;;WAED,kBAAS;AACP,aAAO,KAAKG,KAAL,CAAWC,IAAlB;AACD;;;;EAvB8Bb,KAAK,CAACgB,S;;SAAlBL,G;AAmDrB,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\n\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport SplashScreen from \"./components/Screens/SplashScreen\";\nimport AuthStack from \"./components/Screens/AuthStack\";\nimport DrawerNavigator from \"./components/Screens/DrawerNavigator\";\nimport ClientHome from \"./components/Screens/DrawerScreens/ClientHome\";\nimport ProviderHome from \"./components/Screens/DrawerScreens/ProviderHome\";\nlet auth = true;\nlet usertype = \"Client\";\n/// App.js contains main Navigation  ///\nconst Stack = createStackNavigator();\nexport default class App extends React.Component {\n  componentWillMount() {\n    this.state = {\n      view: <SplashScreen />,\n    };\n\n    setTimeout(() => {\n      this.setState({\n        view: (\n          <NavigationContainer>\n            {auth ? (\n              { usertype: \"Client\" ? <ClientHome /> : <ProviderHome /> }\n            ) : (\n              <AuthStack />\n            )}\n          </NavigationContainer>\n        ),\n      });\n    }, 4000); //TIME OF WAITING\n  }\n\n  render() {\n    return this.state.view;\n  }\n}\n// const App = () => {\n//   return (\n//     <NavigationContainer>\n//       <Stack.Navigator initialRouteName=\"SplashScreen\">\n//         <Stack.Screen\n//           name=\"SplashScreen\"\n//           component={SplashScreen}\n//           options={{ headerShown: false }}\n//         />\n//         <Stack.Screen\n//           name=\"AuthStack\"\n//           component={AuthStack}\n//           options={{ headerShown: false }}\n//         />\n//         <Stack.Screen\n//           name=\"DrawerNavigator\"\n//           component={DrawerNavigator}\n//           options={{ headerShown: false }}\n//         />\n//       </Stack.Navigator>\n//     </NavigationContainer>\n//   );\n// };\n\n//export default App;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}