{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/Client/ClientBrowse.js\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Constants from \"expo-constants\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useRoute } from \"@react-navigation/native\";\nimport colors from \"../../config/colors\";\nimport listingsApi from \"../../api/listings\";\nimport ProviderCard from \"../../components/ProviderCard\";\nimport useApi from \"../../hooks/useApi\";\n\nfunction ClientBrowse(_ref) {\n  var _this = this;\n\n  var navigate = _ref.navigation.navigate;\n  var route = useRoute();\n\n  var _useState = useState(route.params.category),\n      _useState2 = _slicedToArray(_useState, 1),\n      category = _useState2[0];\n\n  var _useApi = useApi(listingsApi.getListings),\n      listings = _useApi.data,\n      error = _useApi.error,\n      loading = _useApi.loading,\n      loadListings = _useApi.request;\n\n  useEffect(function () {\n    loadListings(category);\n  }, []);\n  return React.createElement(View, {\n    style: styles.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.searchbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputBox,\n    placeholder: \"Search Providers\",\n    placeholderTextColor: colors.text_holder,\n    color: colors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"account-search\",\n    size: 25,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }))), error && React.createElement(React.Fragment, null, React.createElement(Text, {\n    style: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Couldn't get Providers!\"), React.createElement(TouchableOpacity, {\n    onPress: loadListings,\n    style: styles.errorbutton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.errorbuttontext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" RETRY\"))), loading && React.createElement(Image, {\n    source: require(\"../../assets/loadpeople.gif\"),\n    style: styles.gif,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), React.createElement(FlatList, {\n    data: listings,\n    keyExtractor: function keyExtractor(listing) {\n      return listing.id.toString();\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigate(\"ProviderDetailsScreen\", {\n            name: item.name,\n            id: item.id,\n            location: item.location,\n            imageURL: item.avatar,\n            category: category,\n            rating: item.rating,\n            hourly_rate: item.hourly_rate\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(ProviderCard, {\n        name: item.name,\n        location: item.location,\n        category: category,\n        imageURL: item.avatar,\n        rating: item.rating,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ClientBrowse;\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 60,\n    marginVertical: 10,\n    height: 45,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    padding: 10\n  },\n  error: {\n    alignSelf: \"center\",\n    fontSize: 18,\n    marginBottom: 10\n  },\n  errorbutton: {\n    backgroundColor: colors.myblue,\n    alignSelf: \"center\",\n    padding: 10\n  },\n  errorbuttontext: {\n    color: colors.white,\n    fontWeight: \"bold\"\n  },\n  gif: {\n    height: 300,\n    width: 300,\n    alignSelf: \"center\"\n  },\n  inputBox: {\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.myblue,\n    paddingHorizontal: 12,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 45,\n    color: colors.black,\n    flex: 1\n  },\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    alignContent: \"center\",\n    flex: 1,\n    padding: 5,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\"\n  },\n  search: {\n    paddingTop: Constants.statusBarHeight\n  },\n  searchbar: {\n    flexDirection: \"row\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/Client/ClientBrowse.js"],"names":["React","useEffect","useState","Constants","MaterialCommunityIcons","useRoute","colors","listingsApi","ProviderCard","useApi","ClientBrowse","navigate","navigation","route","params","category","getListings","listings","data","error","loading","loadListings","request","styles","layout","searchbar","inputBox","text_holder","black","button","errorbutton","errorbuttontext","require","gif","listing","id","toString","item","name","location","imageURL","avatar","rating","hourly_rate","StyleSheet","create","backgroundColor","myblue","width","marginVertical","height","alignContent","justifyContent","flexDirection","padding","alignSelf","fontSize","marginBottom","color","white","fontWeight","borderWidth","borderColor","paddingHorizontal","flex","paddingTop","statusBarHeight","search"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Text,\n  FlatList,\n  Image,\n} from \"react-native\";\n\nimport Constants from \"expo-constants\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useRoute } from \"@react-navigation/native\";\n\nimport colors from \"../../config/colors\";\nimport listingsApi from \"../../api/listings\";\nimport ProviderCard from \"../../components/ProviderCard\";\nimport useApi from \"../../hooks/useApi\";\n\nfunction ClientBrowse({ navigation: { navigate } }) {\n  const route = useRoute();\n  const [category] = useState(route.params.category);\n\n  const {\n    data: listings,\n    error,\n    loading,\n    request: loadListings,\n  } = useApi(listingsApi.getListings);\n\n  useEffect(() => {\n    loadListings(category);\n  }, []);\n\n  return (\n    <View style={styles.layout}>\n      <View style={styles.searchbar}>\n        <TextInput\n          style={styles.inputBox}\n          placeholder=\"Search Providers\"\n          placeholderTextColor={colors.text_holder}\n          color={colors.black}\n        />\n        <TouchableOpacity style={styles.button}>\n          <MaterialCommunityIcons\n            name=\"account-search\"\n            size={25}\n            color=\"white\"\n          />\n        </TouchableOpacity>\n      </View>\n      {error && (\n        <>\n          <Text style={styles.error}>Couldn't get Providers!</Text>\n          <TouchableOpacity onPress={loadListings} style={styles.errorbutton}>\n            <Text style={styles.errorbuttontext}> RETRY</Text>\n          </TouchableOpacity>\n        </>\n      )}\n\n      {loading && (\n        <Image\n          source={require(\"../../assets/loadpeople.gif\")}\n          style={styles.gif}\n        />\n      )}\n      <FlatList\n        data={listings}\n        keyExtractor={(listing) => listing.id.toString()}\n        renderItem={({ item }) => (\n          <TouchableOpacity\n            onPress={() =>\n              navigate(\"ProviderDetailsScreen\", {\n                name: item.name,\n                id: item.id,\n                location: item.location,\n                imageURL: item.avatar,\n                category: category,\n                rating: item.rating,\n                hourly_rate: item.hourly_rate,\n              })\n            }\n          >\n            <ProviderCard\n              name={item.name}\n              location={item.location}\n              category={category}\n              imageURL={item.avatar}\n              rating={item.rating}\n            />\n          </TouchableOpacity>\n        )}\n      />\n    </View>\n  );\n}\nexport default ClientBrowse;\n\nconst styles = StyleSheet.create({\n  button: {\n    backgroundColor: colors.myblue,\n    width: 60,\n    marginVertical: 10,\n    height: 45,\n    alignContent: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\",\n    padding: 10,\n  },\n  error: {\n    alignSelf: \"center\",\n    fontSize: 18,\n    marginBottom: 10,\n  },\n  errorbutton: {\n    backgroundColor: colors.myblue,\n    alignSelf: \"center\",\n    padding: 10,\n  },\n  errorbuttontext: {\n    color: colors.white,\n    fontWeight: \"bold\",\n  },\n  gif: {\n    height: 300,\n    width: 300,\n    alignSelf: \"center\",\n  },\n  inputBox: {\n    backgroundColor: colors.white,\n    borderWidth: 1,\n    borderColor: colors.myblue,\n    paddingHorizontal: 12,\n    fontSize: 16,\n    color: colors.white,\n    marginVertical: 10,\n    height: 45,\n    color: colors.black,\n    flex: 1,\n  },\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n    alignContent: \"center\",\n    flex: 1,\n    padding: 5,\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n  },\n  search: {\n    paddingTop: Constants.statusBarHeight,\n  },\n  searchbar: {\n    flexDirection: \"row\",\n    width: \"100%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}