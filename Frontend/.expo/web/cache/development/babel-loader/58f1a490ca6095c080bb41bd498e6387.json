{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/navigation/UserTypeNav.js\";\n\nimport React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport ClientTabNavigator from \"./ClientTabNavigator\";\nimport ProviderTabNavigator from \"./ProviderTabNavigator\";\nimport AuthStack from \"./AuthStack\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { useContext } from \"react\";\nimport TypeContext from \"../usertype/context\";\nvar Stack = createStackNavigator();\n\nvar UserTypeNav = function UserTypeNav(props) {\n  console.log;\n  var usertype = useContext(TypeContext);\n\n  if (usertype == 0) {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ClientTabNavigator\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ClientTabNavigator\",\n      component: ClientTabNavigator,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"AuthStack\",\n      component: AuthStack,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  if (usertype == 1) {\n    return React.createElement(Stack.Navigator, {\n      initialRouteName: \"ProviderTabNavigator\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"ProviderTabNavigator\",\n      component: ProviderTabNavigator,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"AuthStack\",\n      component: AuthStack,\n      options: {\n        headerShown: false\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nexport default UserTypeNav;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/navigation/UserTypeNav.js"],"names":["React","createStackNavigator","ClientTabNavigator","ProviderTabNavigator","AuthStack","useRoute","useContext","TypeContext","Stack","UserTypeNav","props","console","log","usertype","headerShown"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAEA,OAAOC,kBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,SAAP;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP;AAEA,IAAMC,KAAK,GAAGP,oBAAoB,EAAlC;;AAEA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAACC,WAAD,CAA3B;;AACA,MAAIM,QAAQ,IAAI,CAAhB,EAAmB;AACjB,WACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,oBADP;AAEE,MAAA,SAAS,EAAEX,kBAFb;AAGE,MAAA,OAAO,EAAE;AAAEY,QAAAA,WAAW,EAAE;AAAf,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,SAAS,EAAEV,SAFb;AAGE,MAAA,OAAO,EAAE;AAAEU,QAAAA,WAAW,EAAE;AAAf,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;;AACD,MAAID,QAAQ,IAAI,CAAhB,EAAmB;AACjB,WACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,sBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,sBADP;AAEE,MAAA,SAAS,EAAEV,oBAFb;AAGE,MAAA,OAAO,EAAE;AAAEW,QAAAA,WAAW,EAAE;AAAf,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,KAAD,CAAO,MAAP;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,SAAS,EAAEV,SAFb;AAGE,MAAA,OAAO,EAAE;AAAEU,QAAAA,WAAW,EAAE;AAAf,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAcD;AACF,CAnCD;;AAqCA,eAAeL,WAAf","sourcesContent":["import React from \"react\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\n\nimport ClientTabNavigator from \"./ClientTabNavigator\";\nimport ProviderTabNavigator from \"./ProviderTabNavigator\";\nimport AuthStack from \"./AuthStack\";\nimport { useRoute } from \"@react-navigation/core\";\nimport { useContext } from \"react\";\nimport TypeContext from \"../usertype/context\";\n\nconst Stack = createStackNavigator();\n\nconst UserTypeNav = (props) => {\n  console.log\n  const usertype = useContext(TypeContext)\n  if (usertype == 0) {\n    return (\n      <Stack.Navigator initialRouteName=\"ClientTabNavigator\">\n        <Stack.Screen\n          name=\"ClientTabNavigator\"\n          component={ClientTabNavigator}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"AuthStack\"\n          component={AuthStack}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    );\n  }\n  if (usertype == 1) {\n    return (\n      <Stack.Navigator initialRouteName=\"ProviderTabNavigator\">\n        <Stack.Screen\n          name=\"ProviderTabNavigator\"\n          component={ProviderTabNavigator}\n          options={{ headerShown: false }}\n        />\n        <Stack.Screen\n          name=\"AuthStack\"\n          component={AuthStack}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    );\n  }\n};\n\nexport default UserTypeNav;\n"]},"metadata":{},"sourceType":"module"}