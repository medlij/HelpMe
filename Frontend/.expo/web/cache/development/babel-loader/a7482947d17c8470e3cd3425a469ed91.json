{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/Screens/MessagesScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { onPress } from \"react-native-web/dist/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ListItem from \"../ListItem\";\nimport ListItemDeleteAction from \"../ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\nvar initialMessages = [{\n  id: 1,\n  title: \"Elie Kozah\",\n  description: \"Text message tex text tex\",\n  image: require(\"../../assets/default.jpg\")\n}, {\n  id: 2,\n  title: \"Fatima Medlij\",\n  description: \"Hello Bestie\",\n  image: require(\"../../assets/default.jpg\")\n}, {\n  id: 3,\n  title: \"Mohammad\",\n  description: \"salam aleikom\",\n  image: require(\"../../assets/default.jpg\")\n}, {\n  id: 4,\n  title: \"Wissam\",\n  description: \"Stan G idle!!\",\n  image: require(\"../../assets/default.jpg\")\n}, {\n  id: 5,\n  title: \"Zaynab\",\n  description: \"Maraheb \",\n  image: require(\"../../assets/default.jpg\")\n}];\n\nfunction MessagesScreen(props) {\n  var _this = this;\n\n  var _useState = useState(initialMessages),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refreshing = _useState4[0],\n      setRefreshing = _useState4[1];\n\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n\n  return React.createElement(View, {\n    style: styles.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    underlayColor: colors.text_holder,\n    onPress: onPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(FlatList, {\n    data: messages,\n    keyExtractor: function keyExtractor(message) {\n      return message.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ListItem, {\n        title: item.title,\n        subTitle: item.description,\n        image: item.image,\n        onPress: function onPress() {\n          return console.log(\"Message selected\", item);\n        },\n        renderRightActions: function renderRightActions() {\n          return React.createElement(ListItemDeleteAction, {\n            onPress: function onPress() {\n              return handleDelete(item);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      });\n    },\n    refreshing: refreshing,\n    onRefresh: function onRefresh() {\n      setMessages([{\n        id: 2,\n        title: \"T2\",\n        description: \"D2\",\n        image: require(\"../../assets/default.jpg\")\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight\n  }\n});\nexport default MessagesScreen;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/Screens/MessagesScreen.js"],"names":["React","useState","onPress","ListItem","ListItemDeleteAction","Constants","initialMessages","id","title","description","image","require","MessagesScreen","props","messages","setMessages","refreshing","setRefreshing","handleDelete","message","filter","m","styles","layout","colors","text_holder","toString","item","console","log","StyleSheet","create","paddingTop","statusBarHeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, onPress, View, TouchableHighlight } from \"react-native\";\nimport { FlatList } from \"react-native\";\nimport ListItem from \"../ListItem\";\nimport ListItemDeleteAction from \"../ListItemDeleteAction\";\nimport Constants from \"expo-constants\";\n\nconst initialMessages = [\n  {\n    id: 1,\n    title: \"Elie Kozah\",\n    description: \"Text message tex text tex\",\n    image: require(\"../../assets/default.jpg\"),\n  },\n  {\n    id: 2,\n    title: \"Fatima Medlij\",\n    description: \"Hello Bestie\",\n    image: require(\"../../assets/default.jpg\"),\n  },\n  {\n    id: 3,\n    title: \"Mohammad\",\n    description: \"salam aleikom\",\n    image: require(\"../../assets/default.jpg\"),\n  },\n  {\n    id: 4,\n    title: \"Wissam\",\n    description: \"Stan G idle!!\",\n    image: require(\"../../assets/default.jpg\"),\n  },\n  {\n    id: 5,\n    title: \"Zaynab\",\n    description: \"Maraheb \",\n    image: require(\"../../assets/default.jpg\"),\n  },\n];\nfunction MessagesScreen(props) {\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    // Delete the message from messages\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n    <View style={styles.layout}>\n      <TouchableHighlight underlayColor={colors.text_holder} onPress={onPress}>\n        <FlatList\n          data={messages}\n          keyExtractor={(message) => message.id.toString()}\n          renderItem={({ item }) => (\n            <ListItem\n              title={item.title}\n              subTitle={item.description}\n              image={item.image}\n              onPress={() => console.log(\"Message selected\", item)}\n              renderRightActions={() => (\n                <ListItemDeleteAction onPress={() => handleDelete(item)} />\n              )}\n            />\n          )}\n          refreshing={refreshing}\n          onRefresh={() => {\n            setMessages([\n              {\n                id: 2,\n                title: \"T2\",\n                description: \"D2\",\n                image: require(\"../../assets/default.jpg\"),\n              },\n            ]);\n          }}\n        />\n      </TouchableHighlight>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  layout: {\n    paddingTop: Constants.statusBarHeight,\n  },\n});\n\nexport default MessagesScreen;\n"]},"metadata":{},"sourceType":"module"}