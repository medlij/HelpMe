{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fatima/HelpMe/Frontend/components/TabBar.js\";\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"screen\"),\n    width = _Dimensions$get.width;\n\nvar TabBar = function TabBar(_ref) {\n  var state = _ref.state,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"Home\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var routes = state.routes;\n\n  var renderColor = function renderColor(currentTab) {\n    return currentTab === selected ? \"blue\" : \"black\";\n  };\n\n  var handlePress = function handlePress(activeTab, index) {\n    if (state.index !== index) {\n      setSelected(activeTab);\n      navigation.navigate(activeTab);\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, routes.map(function (route, index) {\n    return React.createElement(Tab, {\n      tab: route,\n      icon: route.params.icon,\n      onPress: function onPress() {\n        return handlePress(route.name, index);\n      },\n      color: renderColor(route.name),\n      key: route.key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: \"relative\",\n    bottom: 1,\n    width: width,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"space-around\"\n  },\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#fff\"\n  }\n});\nexport default TabBar;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/components/TabBar.js"],"names":["React","useState","Dimensions","get","width","TabBar","state","navigation","selected","setSelected","routes","renderColor","currentTab","handlePress","activeTab","index","navigate","styles","wrapper","container","map","route","params","icon","name","key","StyleSheet","create","position","bottom","height","alignItems","justifyContent","flexDirection","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAIA,sBAAkBC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAlB;AAAA,IAAQC,KAAR,mBAAQA,KAAR;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AACxC,kBAAgCN,QAAQ,CAAC,MAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAQC,MAAR,GAAmBJ,KAAnB,CAAQI,MAAR;;AAEA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,UAAD;AAAA,WAClBA,UAAU,KAAKJ,QAAf,GAA0B,MAA1B,GAAmC,OADjB;AAAA,GAApB;;AAGA,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,SAAD,EAAYC,KAAZ,EAAsB;AAExC,QAAIT,KAAK,CAACS,KAAN,KAAgBA,KAApB,EAA2B;AACzBN,MAAAA,WAAW,CAACK,SAAD,CAAX;AACAP,MAAAA,UAAU,CAACS,QAAX,CAAoBF,SAApB;AACD;AAEF,GAPD;;AAUA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,MAAM,CAACU,GAAP,CAAW,UAACC,KAAD,EAAQN,KAAR;AAAA,WACV,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEM,KADP;AAEE,MAAA,IAAI,EAAEA,KAAK,CAACC,MAAN,CAAaC,IAFrB;AAGE,MAAA,OAAO,EAAE;AAAA,eAAMV,WAAW,CAACQ,KAAK,CAACG,IAAP,EAAaT,KAAb,CAAjB;AAAA,OAHX;AAIE,MAAA,KAAK,EAAEJ,WAAW,CAACU,KAAK,CAACG,IAAP,CAJpB;AAKE,MAAA,GAAG,EAAEH,KAAK,CAACI,GALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF,CADF;AAeD,CAhCD;;AAiCA,IAAMR,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,OAAO,EAAE;AAEPU,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,MAAM,EAAE,CAHD;AAIPzB,IAAAA,KAAK,EAALA,KAJO;AAKP0B,IAAAA,MAAM,EAAE,EALD;AAOPC,IAAAA,UAAU,EAAE,QAPL;AAQPC,IAAAA,cAAc,EAAE;AART,GADsB;AAW/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,aAAa,EAAE,KADN;AAETD,IAAAA,cAAc,EAAE,eAFP;AAGTE,IAAAA,eAAe,EAAE;AAHR;AAXoB,CAAlB,CAAf;AAmBA,eAAe7B,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Dimensions } from \"react-native\";\n//import Tab from './Tab';\n\nconst { width } = Dimensions.get(\"screen\");\n\nconst TabBar = ({ state, navigation }) => {\n  const [selected, setSelected] = useState(\"Home\");\n  const { routes } = state;\n  ///- when we press any icon changes color-///\n  const renderColor = (currentTab) =>\n    currentTab === selected ? \"blue\" : \"black\"; //If current === selected color so render this color\n  // --- function for pressing the icons --- ///\n  const handlePress = (activeTab, index) => {\n    //--To navigate to pages so we pass index to iterate pages to press multiple times--//\n    if (state.index !== index) {\n      setSelected(activeTab);\n      navigation.navigate(activeTab);\n    }\n    /////////////////////////////\n  };\n  // ------------------------------------///\n  // console.log(state.routes)\n  return (\n    <View style={styles.wrapper}>\n      <View style={styles.container}>\n        {routes.map((route, index) => (\n          <Tab\n            tab={route}\n            icon={route.params.icon}\n            onPress={() => handlePress(route.name, index)}\n            color={renderColor(route.name)}\n            key={route.key}\n          />\n        ))}\n      </View>\n    </View>\n  );\n};\nconst styles = StyleSheet.create({\n  wrapper: {\n    // position:'absolute',\n    position: \"relative\",\n    bottom: 1,\n    width,\n    height: 50,\n    // backgroundColor:'red',\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n  },\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    backgroundColor: \"#fff\",\n    // width:250,\n    // borderRadius:100,\n  },\n});\nexport default TabBar;\n"]},"metadata":{},"sourceType":"module"}