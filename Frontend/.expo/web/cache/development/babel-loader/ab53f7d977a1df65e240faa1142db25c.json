{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fatima/HelpMe/Frontend/Screens/Client/ProviderDetailsScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React, { useEffect, useState } from \"react\";\nimport reviewsApi from \"../../api/reviews\";\nimport ProviderDetails from \"../../components/ProviderDetails\";\nimport ReviewItem from \"../../components/ReviewItem\";\nimport { useRoute } from \"@react-navigation/native\";\n\nfunction ProviderDetailsScreen() {\n  var _this = this;\n\n  var route = useRoute();\n\n  var _useState = useState(route.params.id),\n      _useState2 = _slicedToArray(_useState, 1),\n      t_id = _useState2[0];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      reviews = _useState4[0],\n      setReviews = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      c_id = _useState6[0],\n      setC_id = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  useEffect(function () {\n    loadReviews();\n    fun();\n  }, []);\n\n  var loadReviews = function loadReviews() {\n    var response;\n    return _regeneratorRuntime.async(function loadReviews$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(reviewsApi.getReviews(t_id));\n\n          case 3:\n            response = _context.sent;\n            setLoading(false);\n            setReviews(response.data);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  function fun() {\n    var i;\n    return _regeneratorRuntime.async(function fun$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            for (i = 0; i < reviews.length; i++) {\n              setC_id(response.data[i].client_id);\n              console.log(c_id);\n            }\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(ProviderDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Reviews\"), loading && React.createElement(Image, {\n    source: require(\"../../assets/loading.gif\"),\n    style: styles.gif,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), React.createElement(FlatList, {\n    data: reviews,\n    keyExtractor: function keyExtractor(review) {\n      return review.id.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(ReviewItem, {\n        subTitle: item.review,\n        rating: item.star_rating,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  gif: {\n    height: 450,\n    width: 450,\n    alignSelf: 'flex-start'\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    marginBottom: 10\n  },\n  layout: {\n    flex: 1,\n    marginHorizontal: 10\n  }\n});\nexport default ProviderDetailsScreen;","map":{"version":3,"sources":["/home/fatima/HelpMe/Frontend/Screens/Client/ProviderDetailsScreen.js"],"names":["React","useEffect","useState","reviewsApi","ProviderDetails","ReviewItem","useRoute","ProviderDetailsScreen","route","params","id","t_id","reviews","setReviews","c_id","setC_id","loading","setLoading","loadReviews","fun","getReviews","response","data","i","length","client_id","console","log","styles","layout","header","require","gif","review","toString","item","star_rating","StyleSheet","create","height","width","alignSelf","fontSize","fontWeight","marginBottom","flex","marginHorizontal"],"mappings":"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","sourcesContent":["import { FlatList, View, StyleSheet, Text, Image } from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\n\n// import axios from \"axios\";\nimport reviewsApi from \"../../api/reviews\";\nimport ProviderDetails from \"../../components/ProviderDetails\";\nimport ReviewItem from \"../../components/ReviewItem\";\nimport { useRoute } from \"@react-navigation/native\";\n\nfunction ProviderDetailsScreen() {\n  const route = useRoute();\n  const [t_id] = useState(route.params.id);\n  const [reviews, setReviews] = useState([]);\n  const [c_id, setC_id] = useState([]);\n  const [loading, setLoading] = useState(false);\n  // const [clientname, setClientName] = useState(\"\");\n\n  useEffect(() => {\n    loadReviews();\n    fun();\n  }, []);\n\n  const loadReviews = async () => {\n    setLoading(true);\n    const response = await reviewsApi.getReviews(t_id);\n    setLoading(false);\n\n    setReviews(response.data);\n  };\n\n  async function fun() {\n    for (let i = 0; i < reviews.length; i++) {\n      setC_id(response.data[i].client_id);\n      console.log(c_id);\n    }\n  }\n\n  return (\n    <>\n      <ProviderDetails />\n      <View style={styles.layout}>\n        <Text style={styles.header}>Reviews</Text>\n        {loading && (\n          <Image\n            source={require(\"../../assets/loading.gif\")}\n            style={styles.gif}\n          />\n        )}\n        <FlatList\n          data={reviews}\n          keyExtractor={(review) => review.id.toString()}\n          renderItem={({ item }) => (\n            <ReviewItem\n              // title={item.client_id}\n              subTitle={item.review}\n              rating={item.star_rating}\n            />\n          )}\n        />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  gif:{\n    height: 450,\n    width: 450,\n    alignSelf: 'flex-start'\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"400\",\n    marginBottom: 10,\n  },\n  layout: {\n    flex: 1,\n    marginHorizontal: 10,\n  },\n});\nexport default ProviderDetailsScreen;\n"]},"metadata":{},"sourceType":"module"}